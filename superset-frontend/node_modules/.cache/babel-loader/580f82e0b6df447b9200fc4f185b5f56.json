{"ast":null,"code":"import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import React from 'react';\nimport { Checkbox } from 'src/common/components';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getControlItems, setNativeFilterFieldValues } from './utils';\nimport { StyledCheckboxFormItem } from './FiltersConfigForm';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst ControlItems = ({ forceUpdate, form, filterId, filterToEdit, formFilter }) => {var _getControlItems, _context;\n  const filterType = formFilter == null ? void 0 : formFilter.filterType;\n  if (!filterType)\n  return null;\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  const controlItems = (_getControlItems = getControlItems(controlPanelRegistry.get(filterType))) != null ? _getControlItems : [];\n  return ___EmotionJSX(React.Fragment, null,\n  _mapInstanceProperty(_context = _filterInstanceProperty(controlItems).call(controlItems,\n  controlItem => {var _controlItem$config;return controlItem == null ? void 0 : (_controlItem$config = controlItem.config) == null ? void 0 : _controlItem$config.renderTrigger;})).call(_context,\n  controlItem => {var _filterToEdit$control, _filterToEdit$control2, _controlItem$config2;return ___EmotionJSX(StyledCheckboxFormItem, { key: controlItem.name, name: ['filters', filterId, 'controlValues', controlItem.name], initialValue: (_filterToEdit$control = filterToEdit == null ? void 0 : (_filterToEdit$control2 = filterToEdit.controlValues) == null ? void 0 : _filterToEdit$control2[controlItem.name]) != null ? _filterToEdit$control :\n      controlItem == null ? void 0 : (_controlItem$config2 = controlItem.config) == null ? void 0 : _controlItem$config2.default, valuePropName: \"checked\", colon: false },\n    ___EmotionJSX(Checkbox, { onChange: () => {\n        if (!controlItem.config.resetConfig) {\n          return;\n        }\n        setNativeFilterFieldValues(form, filterId, {\n          defaultValue: null });\n\n        forceUpdate();\n      } },\n    controlItem.config.label));}));\n\n\n\n};const _default =\nControlItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ControlItems, \"ControlItems\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/ControlItems.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/ControlItems.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/ControlItems.tsx"],"names":[],"mappings":"ydAmBA,OAAO,KAAP,MAA0B,OAA1B;AACA,SAAS,QAAT,QAAyB,uBAAzB;AAEA,SAAS,4BAAT,QAA6C,mBAA7C;AACA,SAAS,eAAT,EAA0B,0BAA1B,QAA4D,SAA5D;AAEA,SAAS,sBAAT,QAAuC,qBAAvC,C;AAWA,MAAM,YAAY,GAA0B,CAAC,EAC3C,WAD2C,EAE3C,IAF2C,EAG3C,QAH2C,EAI3C,YAJ2C,EAK3C,UAL2C,EAAD,KAMvC;AACH,QAAM,UAAU,GAAG,UAAH,oBAAG,UAAU,CAAE,UAA/B;AAEA,MAAI,CAAC,UAAL;AAAiB,SAAO,IAAP;AAEjB,QAAM,oBAAoB,GAAG,4BAA4B,EAAzD;AACA,QAAM,YAAY,uBAChB,eAAe,CAAC,oBAAoB,CAAC,GAArB,CAAyB,UAAzB,CAAD,CADC,+BACyC,EAD3D;AAEA,SACE;AACG,0DAAA,YAAY,MAAZ,CAAA,YAAY;AAER,EAAA,WAAD,oCACE,WADF,2CACE,WAAW,CAAE,MADf,qBACE,oBAAqB,aADvB,EAFS,CAAZ;AAKM,EAAA,WAAW,oFACd,cAAC,sBAAD,IACE,GAAG,EAAE,WAAW,CAAC,IADnB,EAEE,IAAI,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,eAAtB,EAAuC,WAAW,CAAC,IAAnD,CAFR,EAGE,YAAY,2BACV,YADU,8CACV,YAAY,CAAE,aADJ,qBACV,uBAA8B,WAAW,CAAC,IAA1C,CADU;AAEV,MAAA,WAFU,4CAEV,WAAW,CAAE,MAFH,qBAEV,qBAAqB,OALzB,EAOE,aAAa,EAAC,SAPhB,EAQE,KAAK,EAAE,KART;AAUE,kBAAC,QAAD,IACE,QAAQ,EAAE,MAAK;AACb,YAAI,CAAC,WAAW,CAAC,MAAZ,CAAmB,WAAxB,EAAqC;AACnC;AACD;AACD,QAAA,0BAA0B,CAAC,IAAD,EAAO,QAAP,EAAiB;AACzC,UAAA,YAAY,EAAE,IAD2B,EAAjB,CAA1B;;AAGA,QAAA,WAAW;AACZ,OATH;AAWG,IAAA,WAAW,CAAC,MAAZ,CAAmB,KAXtB,CAVF,CADc,EALjB,CADH,CADF;;;;AAmCD,CAjDD,C;AAkDe,Y,CAAf,wB,iLAlDM,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CustomControlItem } from '@superset-ui/chart-controls';\nimport React, { FC } from 'react';\nimport { Checkbox } from 'src/common/components';\nimport { FormInstance } from 'antd/lib/form';\nimport { getChartControlPanelRegistry } from '@superset-ui/core';\nimport { getControlItems, setNativeFilterFieldValues } from './utils';\nimport { NativeFiltersForm, NativeFiltersFormItem } from '../types';\nimport { StyledCheckboxFormItem } from './FiltersConfigForm';\nimport { Filter } from '../../types';\n\ntype ControlItemsProps = {\n  filterId: string;\n  forceUpdate: Function;\n  filterToEdit?: Filter;\n  form: FormInstance<NativeFiltersForm>;\n  formFilter?: NativeFiltersFormItem;\n};\n\nconst ControlItems: FC<ControlItemsProps> = ({\n  forceUpdate,\n  form,\n  filterId,\n  filterToEdit,\n  formFilter,\n}) => {\n  const filterType = formFilter?.filterType;\n\n  if (!filterType) return null;\n\n  const controlPanelRegistry = getChartControlPanelRegistry();\n  const controlItems =\n    getControlItems(controlPanelRegistry.get(filterType)) ?? [];\n  return (\n    <>\n      {controlItems\n        .filter(\n          (controlItem: CustomControlItem) =>\n            controlItem?.config?.renderTrigger,\n        )\n        .map(controlItem => (\n          <StyledCheckboxFormItem\n            key={controlItem.name}\n            name={['filters', filterId, 'controlValues', controlItem.name]}\n            initialValue={\n              filterToEdit?.controlValues?.[controlItem.name] ??\n              controlItem?.config?.default\n            }\n            valuePropName=\"checked\"\n            colon={false}\n          >\n            <Checkbox\n              onChange={() => {\n                if (!controlItem.config.resetConfig) {\n                  return;\n                }\n                setNativeFilterFieldValues(form, filterId, {\n                  defaultValue: null,\n                });\n                forceUpdate();\n              }}\n            >\n              {controlItem.config.label}\n            </Checkbox>\n          </StyledCheckboxFormItem>\n        ))}\n    </>\n  );\n};\nexport default ControlItems;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}