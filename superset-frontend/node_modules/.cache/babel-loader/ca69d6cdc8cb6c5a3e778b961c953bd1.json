{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { FiltersConfigModal } from '../FiltersConfigModal/FiltersConfigModal';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nexport const FilterConfigurationLink = ({ createNewOnOpen, children }) => {\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n  function close() {\n    setOpen(false);\n  }\n  async function submit(filterConfig) {\n    await dispatch(setFilterConfiguration(filterConfig));\n    close();\n  }\n  return ___EmotionJSX(React.Fragment, null,\n\n  ___EmotionJSX(\"div\", { onClick: () => setOpen(true) }, children),\n  ___EmotionJSX(FiltersConfigModal, { isOpen: isOpen, onSave: submit, onCancel: close, createNewOnOpen: createNewOnOpen }));\n\n};__signature__(FilterConfigurationLink, \"useDispatch{dispatch}\\nuseState{[isOpen, setOpen](false)}\", () => [useDispatch]);const _default =\nFilterConfigurationLink;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FilterConfigurationLink, \"FilterConfigurationLink\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/FilterConfigurationLink.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,WAAT,QAA4B,aAA5B;AACA,SAAS,sBAAT,QAAuC,qCAAvC;AAEA,SAAS,kBAAT,QAAmC,0CAAnC,C;AAMA,OAAO,MAAM,uBAAuB,GAAuB,CAAC,EAC1D,eAD0D,EAE1D,QAF0D,EAAD,KAGtD;AACH,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,QAAM,CAAC,MAAD,EAAS,OAAT,IAAoB,QAAQ,CAAC,KAAD,CAAlC;AAEA,WAAS,KAAT,GAAc;AACZ,IAAA,OAAO,CAAC,KAAD,CAAP;AACD;AAED,iBAAe,MAAf,CAAsB,YAAtB,EAAuD;AACrD,UAAM,QAAQ,CAAC,sBAAsB,CAAC,YAAD,CAAvB,CAAd;AACA,IAAA,KAAK;AACN;AAED,SACE;;AAEE,yBAAK,OAAO,EAAE,MAAM,OAAO,CAAC,IAAD,CAA3B,IAAoC,QAApC,CAFF;AAGE,gBAAC,kBAAD,IACE,MAAM,EAAE,MADV,EAEE,MAAM,EAAE,MAFV,EAGE,QAAQ,EAAE,KAHZ,EAIE,eAAe,EAAE,eAJnB,GAHF,CADF;;AAYD,CA5BM,C,cAAM,uB,sEAIM,W;AA0BJ,uB,CAAf,wB,iLA9Ba,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilterConfiguration } from 'src/dashboard/actions/nativeFilters';\nimport { FilterConfiguration } from '../types';\nimport { FiltersConfigModal } from '../FiltersConfigModal/FiltersConfigModal';\n\nexport interface FCBProps {\n  createNewOnOpen?: boolean;\n}\n\nexport const FilterConfigurationLink: React.FC<FCBProps> = ({\n  createNewOnOpen,\n  children,\n}) => {\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n\n  function close() {\n    setOpen(false);\n  }\n\n  async function submit(filterConfig: FilterConfiguration) {\n    await dispatch(setFilterConfiguration(filterConfig));\n    close();\n  }\n\n  return (\n    <>\n      {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions */}\n      <div onClick={() => setOpen(true)}>{children}</div>\n      <FiltersConfigModal\n        isOpen={isOpen}\n        onSave={submit}\n        onCancel={close}\n        createNewOnOpen={createNewOnOpen}\n      />\n    </>\n  );\n};\n\nexport default FilterConfigurationLink;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}