{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _indexOfInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/index-of\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LineEditableTabs } from 'src/common/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { Modal } from 'src/common/components';\nimport { styled, t } from '@superset-ui/core';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TAB_TYPE } from '../../util/componentTypes';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  directPathToChild: [],\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {} };\n\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nclass Tabs extends React.PureComponent {\n  constructor(props) {var _context2, _context3, _context4, _context5;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    showDeleteConfirmModal = key => {\n      const { component, deleteComponent } = this.props;\n      Modal.confirm({\n        title: t('Delete dashboard tab?'),\n        content:\n        ___EmotionJSX(\"span\", null, \"Deleting a tab will remove all content within it. You may still reverse this action with the \",\n\n        ___EmotionJSX(\"b\", null, \"undo\"), \" button (cmd + z) until you save your changes.\"),\n\n\n\n        onOk: () => {var _context;\n          deleteComponent(key, component.id);\n          const tabIndex = _indexOfInstanceProperty(_context = component.children).call(_context, key);\n          this.handleClickTab(Math.max(0, tabIndex - 1));\n        },\n        okType: 'danger',\n        okText: 'DELETE',\n        cancelText: 'CANCEL',\n        icon: null });\n\n    };this.\n\n    handleEdit = (key, action) => {\n      const { component, createComponent } = this.props;\n      if (action === 'add') {\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length },\n\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE } });\n\n\n      } else if (action === 'remove') {\n        this.showDeleteConfirmModal(key);\n      }\n    };const _tabIndex = Math.max(0, findTabIndexByComponentId({ currentComponent: props.component, directPathToChild: props.directPathToChild }));const { children: tabIds } = props.component;const activeKey = tabIds[_tabIndex];this.state = { tabIndex: _tabIndex, activeKey };this.handleClickTab = _bindInstanceProperty(_context2 = this.handleClickTab).call(_context2, this);this.handleDeleteComponent = _bindInstanceProperty(_context3 = this.handleDeleteComponent).call(_context3, this);this.handleDeleteTab = _bindInstanceProperty(_context4 = this.handleDeleteTab).call(_context4, this);this.handleDropOnTab = _bindInstanceProperty(_context5 = this.handleDropOnTab).call(_context5, this);}UNSAFE_componentWillReceiveProps(nextProps) {const maxIndex = Math.max(0, nextProps.component.children.length - 1);const currTabsIds = this.props.component.children;const nextTabsIds = nextProps.component.children;if (this.state.tabIndex > maxIndex) {this.setState(() => ({ tabIndex: maxIndex }));}if (nextTabsIds.length) {const lastTabId = nextTabsIds[nextTabsIds.length - 1]; // if a new tab is added focus on it immediately\n      if (nextTabsIds.length > currTabsIds.length) {this.setState(() => ({ activeKey: lastTabId }));} // if a tab is removed focus on the first\n      if (nextTabsIds.length < currTabsIds.length) {this.setState(() => ({ activeKey: nextTabsIds[0] }));}}if (nextProps.isComponentVisible) {const nextFocusComponent = getLeafComponentIdFromPath(nextProps.directPathToChild);const currentFocusComponent = getLeafComponentIdFromPath(this.props.directPathToChild);if (nextFocusComponent !== currentFocusComponent) {const nextTabIndex = findTabIndexByComponentId({ currentComponent: nextProps.component, directPathToChild: nextProps.directPathToChild }); // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {this.setState(() => ({ tabIndex: nextTabIndex }));}}}}handleClickTab(tabIndex) {const { component } = this.props;\n    const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex });\n\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    this.handleClickTab(Math.max(0, tabIndex - 1));\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {var _context6;\n      const dropTabIndex =\n      destination.id === component.id ?\n      destination.index // dropped ON tabs\n      : _indexOfInstanceProperty(_context6 = component.children).call(_context6, destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        _setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode } =\n    this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: tabsComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        editMode: editMode },\n\n      ({\n        dropIndicatorProps: tabsDropIndicatorProps,\n        dragSourceRef: tabsDragSourceRef }) =>\n\n      ___EmotionJSX(StyledTabsContainer, {\n        className: \"dashboard-component dashboard-component-tabs\",\n        \"data-test\": \"dashboard-component-tabs\" },\n\n      editMode && renderHoverMenu &&\n      ___EmotionJSX(HoverMenu, { innerRef: tabsDragSourceRef, position: \"left\" },\n      ___EmotionJSX(DragHandle, { position: \"left\" }),\n      ___EmotionJSX(DeleteComponentButton, { onDelete: this.handleDeleteComponent })),\n\n\n\n      ___EmotionJSX(LineEditableTabs, {\n        id: tabsComponent.id,\n        activeKey: activeKey,\n        onChange: key => {\n          this.handleClickTab(_indexOfInstanceProperty(tabIds).call(tabIds, key));\n        },\n        onEdit: this.handleEdit,\n        \"data-test\": \"nav-list\",\n        type: editMode ? 'editable-card' : 'card' },\n\n      _mapInstanceProperty(tabIds).call(tabIds, (tabId, tabIndex) =>\n      ___EmotionJSX(LineEditableTabs.TabPane, {\n        key: tabId,\n        tab:\n        ___EmotionJSX(DashboardComponent, {\n          id: tabId,\n          parentId: tabsComponent.id,\n          depth: depth,\n          index: tabIndex,\n          renderType: RENDER_TAB,\n          availableColumnCount: availableColumnCount,\n          columnWidth: columnWidth,\n          onDropOnTab: this.handleDropOnTab,\n          isFocused: activeKey === tabId }) },\n\n\n\n      renderTabContent &&\n      ___EmotionJSX(DashboardComponent, {\n        id: tabId,\n        parentId: tabsComponent.id,\n        depth: depth // see isValidChild.js for why tabs don't increment child depth\n        , index: tabIndex,\n        renderType: RENDER_TAB_CONTENT,\n        availableColumnCount: availableColumnCount,\n        columnWidth: columnWidth,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        onDropOnTab: this.handleDropOnTab,\n        isComponentVisible:\n        selectedTabIndex === tabIndex && isCurrentTabVisible })))),\n\n\n\n\n\n\n\n\n      tabsDropIndicatorProps &&\n      parentComponent.id !== DASHBOARD_ROOT_ID &&\n      ___EmotionJSX(\"div\", tabsDropIndicatorProps))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;const _default =\n\nTabs;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(StyledTabsContainer, \"StyledTabsContainer\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(Tabs, \"Tabs\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx"],"names":["React","PropTypes","LineEditableTabs","LOG_ACTIONS_SELECT_DASHBOARD_TAB","Modal","styled","t","DragDroppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","componentShape","NEW_TAB_ID","DASHBOARD_ROOT_ID","RENDER_TAB","RENDER_TAB_CONTENT","TAB_TYPE","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","renderTabContent","bool","editMode","renderHoverMenu","directPathToChild","arrayOf","logEvent","func","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","createComponent","handleComponentDrop","onChangeTab","deleteComponent","updateComponents","defaultProps","StyledTabsContainer","div","theme","colors","grayscale","light5","gridUnit","Tabs","PureComponent","constructor","props","showDeleteConfirmModal","key","confirm","title","content","onOk","tabIndex","children","handleClickTab","Math","max","okType","okText","cancelText","icon","handleEdit","action","destination","type","length","dragging","currentComponent","tabIds","activeKey","state","handleDeleteComponent","handleDeleteTab","handleDropOnTab","UNSAFE_componentWillReceiveProps","nextProps","maxIndex","currTabsIds","nextTabsIds","setState","lastTabId","isComponentVisible","nextFocusComponent","currentFocusComponent","nextTabIndex","pathToTabIndex","targetTabId","target_id","dropResult","dropTabIndex","render","tabsComponent","isCurrentTabVisible","selectedTabIndex","dropIndicatorProps","tabsDropIndicatorProps","dragSourceRef","tabsDragSourceRef","tabId"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { LineEditableTabs } from 'src/common/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { Modal } from 'src/common/components';\nimport { styled, t } from '@superset-ui/core';\nimport DragDroppable from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID, DASHBOARD_ROOT_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TAB_TYPE } from '../../util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  directPathToChild: [],\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nclass Tabs extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild: props.directPathToChild,\n      }),\n    );\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    this.state = {\n      tabIndex,\n      activeKey,\n    };\n    this.handleClickTab = this.handleClickTab.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleDeleteTab = this.handleDeleteTab.bind(this);\n    this.handleDropOnTab = this.handleDropOnTab.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const maxIndex = Math.max(0, nextProps.component.children.length - 1);\n    const currTabsIds = this.props.component.children;\n    const nextTabsIds = nextProps.component.children;\n\n    if (this.state.tabIndex > maxIndex) {\n      this.setState(() => ({ tabIndex: maxIndex }));\n    }\n\n    if (nextTabsIds.length) {\n      const lastTabId = nextTabsIds[nextTabsIds.length - 1];\n      // if a new tab is added focus on it immediately\n      if (nextTabsIds.length > currTabsIds.length) {\n        this.setState(() => ({ activeKey: lastTabId }));\n      }\n      // if a tab is removed focus on the first\n      if (nextTabsIds.length < currTabsIds.length) {\n        this.setState(() => ({ activeKey: nextTabsIds[0] }));\n      }\n    }\n\n    if (nextProps.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(\n        nextProps.directPathToChild,\n      );\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        this.props.directPathToChild,\n      );\n\n      if (nextFocusComponent !== currentFocusComponent) {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: nextProps.component,\n          directPathToChild: nextProps.directPathToChild,\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {\n          this.setState(() => ({ tabIndex: nextTabIndex }));\n        }\n      }\n    }\n  }\n\n  showDeleteConfirmModal = key => {\n    const { component, deleteComponent } = this.props;\n    Modal.confirm({\n      title: t('Delete dashboard tab?'),\n      content: (\n        <span>\n          Deleting a tab will remove all content within it. You may still\n          reverse this action with the <b>undo</b> button (cmd + z) until you\n          save your changes.\n        </span>\n      ),\n      onOk: () => {\n        deleteComponent(key, component.id);\n        const tabIndex = component.children.indexOf(key);\n        this.handleClickTab(Math.max(0, tabIndex - 1));\n      },\n      okType: 'danger',\n      okText: 'DELETE',\n      cancelText: 'CANCEL',\n      icon: null,\n    });\n  };\n\n  handleEdit = (key, action) => {\n    const { component, createComponent } = this.props;\n    if (action === 'add') {\n      createComponent({\n        destination: {\n          id: component.id,\n          type: component.type,\n          index: component.children.length,\n        },\n        dragging: {\n          id: NEW_TAB_ID,\n          type: TAB_TYPE,\n        },\n      });\n    } else if (action === 'remove') {\n      this.showDeleteConfirmModal(key);\n    }\n  };\n\n  handleClickTab(tabIndex) {\n    const { component } = this.props;\n    const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex,\n      });\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    this.handleClickTab(Math.max(0, tabIndex - 1));\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n        destination.id === component.id\n          ? destination.index // dropped ON tabs\n          : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n    } = this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    return (\n      <DragDroppable\n        component={tabsComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        editMode={editMode}\n      >\n        {({\n          dropIndicatorProps: tabsDropIndicatorProps,\n          dragSourceRef: tabsDragSourceRef,\n        }) => (\n          <StyledTabsContainer\n            className=\"dashboard-component dashboard-component-tabs\"\n            data-test=\"dashboard-component-tabs\"\n          >\n            {editMode && renderHoverMenu && (\n              <HoverMenu innerRef={tabsDragSourceRef} position=\"left\">\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n              </HoverMenu>\n            )}\n\n            <LineEditableTabs\n              id={tabsComponent.id}\n              activeKey={activeKey}\n              onChange={key => {\n                this.handleClickTab(tabIds.indexOf(key));\n              }}\n              onEdit={this.handleEdit}\n              data-test=\"nav-list\"\n              type={editMode ? 'editable-card' : 'card'}\n            >\n              {tabIds.map((tabId, tabIndex) => (\n                <LineEditableTabs.TabPane\n                  key={tabId}\n                  tab={\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth}\n                      index={tabIndex}\n                      renderType={RENDER_TAB}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onDropOnTab={this.handleDropOnTab}\n                      isFocused={activeKey === tabId}\n                    />\n                  }\n                >\n                  {renderTabContent && (\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth} // see isValidChild.js for why tabs don't increment child depth\n                      index={tabIndex}\n                      renderType={RENDER_TAB_CONTENT}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onResizeStart={onResizeStart}\n                      onResize={onResize}\n                      onResizeStop={onResizeStop}\n                      onDropOnTab={this.handleDropOnTab}\n                      isComponentVisible={\n                        selectedTabIndex === tabIndex && isCurrentTabVisible\n                      }\n                    />\n                  )}\n                </LineEditableTabs.TabPane>\n              ))}\n            </LineEditableTabs>\n\n            {/* don't indicate that a drop on root is allowed when tabs already exist */}\n            {tabsDropIndicatorProps &&\n              parentComponent.id !== DASHBOARD_ROOT_ID && (\n                <div {...tabsDropIndicatorProps} />\n              )}\n          </StyledTabsContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nexport default Tabs;\n"]},"metadata":{},"sourceType":"module"}