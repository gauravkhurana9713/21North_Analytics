{"ast":null,"code":"import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport { chartPropShape } from '../../dashboard/util/propShapes';\nimport ExploreActionButtons from './ExploreActionButtons';\nimport RowCountLabel from './RowCountLabel';\nimport EditableTitle from '../../components/EditableTitle';\nimport AlteredSliceTag from '../../components/AlteredSliceTag';\nimport FaveStar from '../../components/FaveStar';\nimport Timer from '../../components/Timer';\nimport CachedLabel from '../../components/CachedLabel';\nimport PropertiesModal from './PropertiesModal';\nimport { sliceUpdated } from '../actions/exploreActions';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst CHART_STATUS_MAP = {\n  failed: 'danger',\n  loading: 'warning',\n  success: 'success' };\n\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  form_data: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape };\n\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n\n    > .btn-group {\n      flex: 0 0 auto;\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n`;\n\nconst StyledButtons = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport class ExploreChartHeader extends React.PureComponent {\n  constructor(props) {var _context, _context2;\n    super(props);\n    this.state = {\n      isPropertiesModalOpen: false };\n\n    this.openPropertiesModal = _bindInstanceProperty(_context = this.openPropertiesModal).call(_context, this);\n    this.closePropertiesModal = _bindInstanceProperty(_context2 = this.closePropertiesModal).call(_context2, this);\n  }\n\n  getSliceName() {\n    return this.props.sliceName || t('%s - untitled', this.props.table_name);\n  }\n\n  postChartFormData() {\n    this.props.actions.postChartFormData(\n    this.props.form_data,\n    true,\n    this.props.timeout,\n    this.props.chart.id);\n\n  }\n\n  openPropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: true });\n\n  }\n\n  closePropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: false });\n\n  }\n\n  render() {var _context3, _context4;\n    const formData = this.props.form_data;\n    const {\n      chartStatus,\n      chartUpdateEndTime,\n      chartUpdateStartTime,\n      latestQueryFormData,\n      queriesResponse } =\n    this.props.chart;\n    // TODO: when will get appropriate design for multi queries use all results and not first only\n    const queryResponse = queriesResponse == null ? void 0 : queriesResponse[0];\n    const chartFinished = _includesInstanceProperty(_context3 = ['failed', 'rendered', 'success']).call(_context3,\n    this.props.chart.chartStatus);\n\n    return (\n      ___EmotionJSX(StyledHeader, { id: \"slice-header\", className: \"panel-title-large\" },\n      ___EmotionJSX(\"div\", { className: \"title-panel\" },\n      ___EmotionJSX(EditableTitle, {\n        title: this.getSliceName(),\n        canEdit: !_sliceInstanceProperty(this.props) || this.props.can_overwrite,\n        onSaveTitle: this.props.actions.updateChartTitle }),\n\n\n      _sliceInstanceProperty(this.props) &&\n      ___EmotionJSX(StyledButtons, null,\n      ___EmotionJSX(FaveStar, {\n        itemId: _sliceInstanceProperty(this.props).slice_id,\n        fetchFaveStar: this.props.actions.fetchFaveStar,\n        saveFaveStar: this.props.actions.saveFaveStar,\n        isStarred: this.props.isStarred,\n        showTooltip: true }),\n\n      ___EmotionJSX(PropertiesModal, {\n        show: this.state.isPropertiesModalOpen,\n        onHide: this.closePropertiesModal,\n        onSave: this.props.sliceUpdated,\n        slice: _sliceInstanceProperty(this.props) }),\n\n      ___EmotionJSX(Tooltip, {\n        id: \"edit-desc-tooltip\",\n        title: t('Edit chart properties') },\n\n      ___EmotionJSX(\"span\", {\n        role: \"button\",\n        tabIndex: 0,\n        className: \"edit-desc-icon\",\n        onClick: this.openPropertiesModal },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-edit\" }))),\n\n\n      this.props.chart.sliceFormData &&\n      ___EmotionJSX(AlteredSliceTag, {\n        className: \"altered\",\n        origFormData: this.props.chart.sliceFormData,\n        currentFormData: formData }))),\n\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"right-button-panel\" },\n      chartFinished && queryResponse &&\n      ___EmotionJSX(RowCountLabel, {\n        rowcount: Number(queryResponse.rowcount) || 0,\n        limit: Number(formData.row_limit) || 0 }),\n\n\n      chartFinished && queryResponse && queryResponse.is_cached &&\n      ___EmotionJSX(CachedLabel, {\n        onClick: _bindInstanceProperty(_context4 = this.postChartFormData).call(_context4, this),\n        cachedTimestamp: queryResponse.cached_dttm }),\n\n\n      ___EmotionJSX(Timer, {\n        startTime: chartUpdateStartTime,\n        endTime: chartUpdateEndTime,\n        isRunning: chartStatus === 'loading',\n        status: CHART_STATUS_MAP[chartStatus] }),\n\n      ___EmotionJSX(ExploreActionButtons, {\n        actions: {\n          ...this.props.actions,\n          openPropertiesModal: this.openPropertiesModal },\n\n        slice: _sliceInstanceProperty(this.props),\n        canDownload: this.props.can_download,\n        chartStatus: chartStatus,\n        latestQueryFormData: latestQueryFormData,\n        queryResponse: queryResponse }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nExploreChartHeader.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ sliceUpdated }, dispatch);\n}const _default =\n\nconnect(null, mapDispatchToProps)(ExploreChartHeader);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_STATUS_MAP, \"CHART_STATUS_MAP\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(StyledHeader, \"StyledHeader\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(StyledButtons, \"StyledButtons\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(ExploreChartHeader, \"ExploreChartHeader\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ExploreChartHeader.jsx"],"names":["React","connect","bindActionCreators","PropTypes","styled","t","Tooltip","chartPropShape","ExploreActionButtons","RowCountLabel","EditableTitle","AlteredSliceTag","FaveStar","Timer","CachedLabel","PropertiesModal","sliceUpdated","CHART_STATUS_MAP","failed","loading","success","propTypes","actions","object","isRequired","addHistory","func","can_overwrite","bool","can_download","isStarred","slice","sliceName","string","table_name","form_data","timeout","number","chart","StyledHeader","div","theme","gridUnit","StyledButtons","span","ExploreChartHeader","PureComponent","constructor","props","state","isPropertiesModalOpen","openPropertiesModal","closePropertiesModal","getSliceName","postChartFormData","id","setState","render","formData","chartStatus","chartUpdateEndTime","chartUpdateStartTime","latestQueryFormData","queriesResponse","queryResponse","chartFinished","updateChartTitle","slice_id","fetchFaveStar","saveFaveStar","sliceFormData","Number","rowcount","row_limit","is_cached","cached_dttm","mapDispatchToProps","dispatch"],"mappings":"0jBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,CAAjB,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B,C;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,QADe;AAEvBC,EAAAA,OAAO,EAAE,SAFc;AAGvBC,EAAAA,OAAO,EAAE,SAHc,EAAzB;;;AAMA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UADV;AAEhBC,EAAAA,UAAU,EAAEtB,SAAS,CAACuB,IAFN;AAGhBC,EAAAA,aAAa,EAAExB,SAAS,CAACyB,IAAV,CAAeJ,UAHd;AAIhBK,EAAAA,YAAY,EAAE1B,SAAS,CAACyB,IAAV,CAAeJ,UAJb;AAKhBM,EAAAA,SAAS,EAAE3B,SAAS,CAACyB,IAAV,CAAeJ,UALV;AAMhBO,EAAAA,KAAK,EAAE5B,SAAS,CAACoB,MAND;AAOhBS,EAAAA,SAAS,EAAE7B,SAAS,CAAC8B,MAPL;AAQhBC,EAAAA,UAAU,EAAE/B,SAAS,CAAC8B,MARN;AAShBE,EAAAA,SAAS,EAAEhC,SAAS,CAACoB,MATL;AAUhBa,EAAAA,OAAO,EAAEjC,SAAS,CAACkC,MAVH;AAWhBC,EAAAA,KAAK,EAAE/B,cAXS,EAAlB;;;AAcA,MAAMgC,YAAY,GAAGnC,MAAM,CAACoC,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,CAAC,EAAEC,KAAF,EAAD,KAAeA,KAAK,CAACC,QAAS;AACnD;AACA;AACA,CA1BA;;AA4BA,MAAMC,aAAa,GAAGvC,MAAM,CAACwC,IAAK;AAClC;AACA;AACA,CAHA;;AAKA,OAAO,MAAMC,kBAAN,SAAiC7C,KAAK,CAAC8C,aAAvC,CAAqD;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,qBAAqB,EAAE,KADZ,EAAb;;AAGA,SAAKC,mBAAL,GAA2B,sCAAKA,mBAAL,iBAA8B,IAA9B,CAA3B;AACA,SAAKC,oBAAL,GAA4B,uCAAKA,oBAAL,kBAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKL,KAAL,CAAWhB,SAAX,IAAwB3B,CAAC,CAAC,eAAD,EAAkB,KAAK2C,KAAL,CAAWd,UAA7B,CAAhC;AACD;;AAEDoB,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAW1B,OAAX,CAAmBgC,iBAAnB;AACE,SAAKN,KAAL,CAAWb,SADb;AAEE,QAFF;AAGE,SAAKa,KAAL,CAAWZ,OAHb;AAIE,SAAKY,KAAL,CAAWV,KAAX,CAAiBiB,EAJnB;;AAMD;;AAEDJ,EAAAA,mBAAmB,GAAG;AACpB,SAAKK,QAAL,CAAc;AACZN,MAAAA,qBAAqB,EAAE,IADX,EAAd;;AAGD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,SAAKI,QAAL,CAAc;AACZN,MAAAA,qBAAqB,EAAE,KADX,EAAd;;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKV,KAAL,CAAWb,SAA5B;AACA,UAAM;AACJwB,MAAAA,WADI;AAEJC,MAAAA,kBAFI;AAGJC,MAAAA,oBAHI;AAIJC,MAAAA,mBAJI;AAKJC,MAAAA,eALI;AAMF,SAAKf,KAAL,CAAWV,KANf;AAOA;AACA,UAAM0B,aAAa,GAAGD,eAAH,oBAAGA,eAAe,CAAG,CAAH,CAArC;AACA,UAAME,aAAa,GAAG,uCAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB;AACpB,SAAKjB,KAAL,CAAWV,KAAX,CAAiBqB,WADG,CAAtB;;AAGA;AACE,oBAAC,YAAD,IAAc,EAAE,EAAC,cAAjB,EAAgC,SAAS,EAAC,mBAA1C;AACE,6BAAK,SAAS,EAAC,aAAf;AACE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAE,KAAKN,YAAL,EADT;AAEE,QAAA,OAAO,EAAE,wBAAC,KAAKL,KAAN,KAAqB,KAAKA,KAAL,CAAWrB,aAF3C;AAGE,QAAA,WAAW,EAAE,KAAKqB,KAAL,CAAW1B,OAAX,CAAmB4C,gBAHlC,GADF;;;AAOG,kCAAKlB,KAAL;AACC,oBAAC,aAAD;AACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,4BAAKA,KAAL,EAAiBmB,QAD3B;AAEE,QAAA,aAAa,EAAE,KAAKnB,KAAL,CAAW1B,OAAX,CAAmB8C,aAFpC;AAGE,QAAA,YAAY,EAAE,KAAKpB,KAAL,CAAW1B,OAAX,CAAmB+C,YAHnC;AAIE,QAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWlB,SAJxB;AAKE,QAAA,WAAW,MALb,GADF;;AAQE,oBAAC,eAAD;AACE,QAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWC,qBADnB;AAEE,QAAA,MAAM,EAAE,KAAKE,oBAFf;AAGE,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWhC,YAHrB;AAIE,QAAA,KAAK,yBAAE,KAAKgC,KAAP,CAJP,GARF;;AAcE,oBAAC,OAAD;AACE,QAAA,EAAE,EAAC,mBADL;AAEE,QAAA,KAAK,EAAE3C,CAAC,CAAC,uBAAD,CAFV;;AAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAE,CAFZ;AAGE,QAAA,SAAS,EAAC,gBAHZ;AAIE,QAAA,OAAO,EAAE,KAAK8C,mBAJhB;;AAME,2BAAG,SAAS,EAAC,YAAb,GANF,CAJF,CAdF;;;AA2BG,WAAKH,KAAL,CAAWV,KAAX,CAAiBgC,aAAjB;AACC,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,YAAY,EAAE,KAAKtB,KAAL,CAAWV,KAAX,CAAiBgC,aAFjC;AAGE,QAAA,eAAe,EAAEZ,QAHnB,GA5BJ,CARJ,CADF;;;;;;AA8CE,6BAAK,SAAS,EAAC,oBAAf;AACGO,MAAAA,aAAa,IAAID,aAAjB;AACC,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAEO,MAAM,CAACP,aAAa,CAACQ,QAAf,CAAN,IAAkC,CAD9C;AAEE,QAAA,KAAK,EAAED,MAAM,CAACb,QAAQ,CAACe,SAAV,CAAN,IAA8B,CAFvC,GAFJ;;;AAOGR,MAAAA,aAAa,IAAID,aAAjB,IAAkCA,aAAa,CAACU,SAAhD;AACC,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,uCAAKpB,iBAAL,kBAA4B,IAA5B,CADX;AAEE,QAAA,eAAe,EAAEU,aAAa,CAACW,WAFjC,GARJ;;;AAaE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAEd,oBADb;AAEE,QAAA,OAAO,EAAED,kBAFX;AAGE,QAAA,SAAS,EAAED,WAAW,KAAK,SAH7B;AAIE,QAAA,MAAM,EAAE1C,gBAAgB,CAAC0C,WAAD,CAJ1B,GAbF;;AAmBE,oBAAC,oBAAD;AACE,QAAA,OAAO,EAAE;AACP,aAAG,KAAKX,KAAL,CAAW1B,OADP;AAEP6B,UAAAA,mBAAmB,EAAE,KAAKA,mBAFnB,EADX;;AAKE,QAAA,KAAK,yBAAE,KAAKH,KAAP,CALP;AAME,QAAA,WAAW,EAAE,KAAKA,KAAL,CAAWnB,YAN1B;AAOE,QAAA,WAAW,EAAE8B,WAPf;AAQE,QAAA,mBAAmB,EAAEG,mBARvB;AASE,QAAA,aAAa,EAAEE,aATjB,GAnBF,CA9CF,CADF;;;;;AAgFD,GAjIyD;AAAA;AAAA;AAoI5DnB,kBAAkB,CAACxB,SAAnB,GAA+BA,SAA/B;;AAEA,SAASuD,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO3E,kBAAkB,CAAC,EAAEc,YAAF,EAAD,EAAmB6D,QAAnB,CAAzB;AACD,C;;AAEc5E,OAAO,CAAC,IAAD,EAAO2E,kBAAP,CAAP,CAAkC/B,kBAAlC,C,CAAf,wB,iLA/LM5B,gB,sHAMAI,S,+GAcAkB,Y,kHA4BAI,a,mHAKOE,kB,wHAsIJ+B,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport { chartPropShape } from '../../dashboard/util/propShapes';\nimport ExploreActionButtons from './ExploreActionButtons';\nimport RowCountLabel from './RowCountLabel';\nimport EditableTitle from '../../components/EditableTitle';\nimport AlteredSliceTag from '../../components/AlteredSliceTag';\nimport FaveStar from '../../components/FaveStar';\nimport Timer from '../../components/Timer';\nimport CachedLabel from '../../components/CachedLabel';\nimport PropertiesModal from './PropertiesModal';\nimport { sliceUpdated } from '../actions/exploreActions';\n\nconst CHART_STATUS_MAP = {\n  failed: 'danger',\n  loading: 'warning',\n  success: 'success',\n};\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  addHistory: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  form_data: PropTypes.object,\n  timeout: PropTypes.number,\n  chart: chartPropShape,\n};\n\nconst StyledHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n\n    > .btn-group {\n      flex: 0 0 auto;\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n`;\n\nconst StyledButtons = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport class ExploreChartHeader extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPropertiesModalOpen: false,\n    };\n    this.openPropertiesModal = this.openPropertiesModal.bind(this);\n    this.closePropertiesModal = this.closePropertiesModal.bind(this);\n  }\n\n  getSliceName() {\n    return this.props.sliceName || t('%s - untitled', this.props.table_name);\n  }\n\n  postChartFormData() {\n    this.props.actions.postChartFormData(\n      this.props.form_data,\n      true,\n      this.props.timeout,\n      this.props.chart.id,\n    );\n  }\n\n  openPropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: true,\n    });\n  }\n\n  closePropertiesModal() {\n    this.setState({\n      isPropertiesModalOpen: false,\n    });\n  }\n\n  render() {\n    const formData = this.props.form_data;\n    const {\n      chartStatus,\n      chartUpdateEndTime,\n      chartUpdateStartTime,\n      latestQueryFormData,\n      queriesResponse,\n    } = this.props.chart;\n    // TODO: when will get appropriate design for multi queries use all results and not first only\n    const queryResponse = queriesResponse?.[0];\n    const chartFinished = ['failed', 'rendered', 'success'].includes(\n      this.props.chart.chartStatus,\n    );\n    return (\n      <StyledHeader id=\"slice-header\" className=\"panel-title-large\">\n        <div className=\"title-panel\">\n          <EditableTitle\n            title={this.getSliceName()}\n            canEdit={!this.props.slice || this.props.can_overwrite}\n            onSaveTitle={this.props.actions.updateChartTitle}\n          />\n\n          {this.props.slice && (\n            <StyledButtons>\n              <FaveStar\n                itemId={this.props.slice.slice_id}\n                fetchFaveStar={this.props.actions.fetchFaveStar}\n                saveFaveStar={this.props.actions.saveFaveStar}\n                isStarred={this.props.isStarred}\n                showTooltip\n              />\n              <PropertiesModal\n                show={this.state.isPropertiesModalOpen}\n                onHide={this.closePropertiesModal}\n                onSave={this.props.sliceUpdated}\n                slice={this.props.slice}\n              />\n              <Tooltip\n                id=\"edit-desc-tooltip\"\n                title={t('Edit chart properties')}\n              >\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"edit-desc-icon\"\n                  onClick={this.openPropertiesModal}\n                >\n                  <i className=\"fa fa-edit\" />\n                </span>\n              </Tooltip>\n              {this.props.chart.sliceFormData && (\n                <AlteredSliceTag\n                  className=\"altered\"\n                  origFormData={this.props.chart.sliceFormData}\n                  currentFormData={formData}\n                />\n              )}\n            </StyledButtons>\n          )}\n        </div>\n        <div className=\"right-button-panel\">\n          {chartFinished && queryResponse && (\n            <RowCountLabel\n              rowcount={Number(queryResponse.rowcount) || 0}\n              limit={Number(formData.row_limit) || 0}\n            />\n          )}\n          {chartFinished && queryResponse && queryResponse.is_cached && (\n            <CachedLabel\n              onClick={this.postChartFormData.bind(this)}\n              cachedTimestamp={queryResponse.cached_dttm}\n            />\n          )}\n          <Timer\n            startTime={chartUpdateStartTime}\n            endTime={chartUpdateEndTime}\n            isRunning={chartStatus === 'loading'}\n            status={CHART_STATUS_MAP[chartStatus]}\n          />\n          <ExploreActionButtons\n            actions={{\n              ...this.props.actions,\n              openPropertiesModal: this.openPropertiesModal,\n            }}\n            slice={this.props.slice}\n            canDownload={this.props.can_download}\n            chartStatus={chartStatus}\n            latestQueryFormData={latestQueryFormData}\n            queryResponse={queryResponse}\n          />\n        </div>\n      </StyledHeader>\n    );\n  }\n}\n\nExploreChartHeader.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ sliceUpdated }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ExploreChartHeader);\n"]},"metadata":{},"sourceType":"module"}