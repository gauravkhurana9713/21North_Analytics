{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Number$isNaN from \"@babel/runtime-corejs3/core-js-stable/number/is-nan\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, Behavior } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Slider } from 'src/common/components';\nimport { Styles } from '../common';\nimport { getRangeExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nexport default function RangeFilterPlugin(props) {\n  const { data, formData, height, width, setDataMask, inputRef, behaviors } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max } = row;\n  const { groupby, currentValue, defaultValue } = formData;\n  const [col = ''] = groupby || [];\n  const [value, setValue] = useState(defaultValue != null ? defaultValue : [min, max]);\n  const handleAfterChange = value => {\n    const [lower, upper] = value;\n    setValue(value);\n    const dataMask = {\n      extraFormData: getRangeExtraFormData(col, lower, upper),\n      currentState: {\n        value } };\n\n\n    const dataMaskObject = {};\n    if (_includesInstanceProperty(behaviors).call(behaviors, Behavior.NATIVE_FILTER)) {\n      dataMaskObject.nativeFilters = dataMask;\n    }\n    if (_includesInstanceProperty(behaviors).call(behaviors, Behavior.CROSS_FILTER)) {\n      dataMaskObject.crossFilters = dataMask;\n    }\n    setDataMask(dataMaskObject);\n  };\n  const handleChange = value => {\n    setValue(value);\n  };\n  useEffect(() => {\n    handleAfterChange(currentValue != null ? currentValue : [min, max]);\n  }, [_JSON$stringify(currentValue)]);\n  useEffect(() => {\n    handleAfterChange(defaultValue != null ? defaultValue : [min, max]);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [_JSON$stringify(defaultValue)]);\n  return ___EmotionJSX(Styles, { height: height, width: width },\n  _Number$isNaN(Number(min)) || _Number$isNaN(Number(max)) ? ___EmotionJSX(\"h4\", null, t('Chosen non-numeric column')) : ___EmotionJSX(Slider, { range: true, min: min, max: max, value: value, onAfterChange: handleAfterChange, onChange: handleChange, ref: inputRef }));\n\n}__signature__(RangeFilterPlugin, \"useState{[value, setValue](defaultValue ?? [min, max])}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RangeFilterPlugin, \"RangeFilterPlugin\", \"/app/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Range/RangeFilterPlugin.tsx"],"names":[],"mappings":"omBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,CAAT,EAAsB,QAAtB,QAAsC,mBAAtC;AACA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,QAA3B,QAA2C,OAA3C;AACA,SAAS,MAAT,QAAuB,uBAAvB;AAEA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,qBAAT,QAAsC,aAAtC,C;AAEA,eAAc,SAAU,iBAAV,CAA4B,KAA5B,EAAyD;AACrE,QAAM,EACJ,IADI,EAEJ,QAFI,EAGJ,MAHI,EAIJ,KAJI,EAKJ,WALI,EAMJ,QANI,EAOJ,SAPI,KAQF,KARJ;AASA,QAAM,CAAC,GAAD,IAAQ,IAAd;AACA;AACA,QAAM,EAAE,GAAF,EAAO,GAAP,KAA6C,GAAnD;AACA,QAAM,EAAE,OAAF,EAAW,YAAX,EAAyB,YAAzB,KAA0C,QAAhD;AACA,QAAM,CAAC,GAAG,GAAG,EAAP,IAAa,OAAO,IAAI,EAA9B;AACA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,QAAQ,CAChC,YADgC,WAChC,YADgC,GAChB,CAAC,GAAD,EAAM,GAAN,CADgB,CAAlC;AAIA,QAAM,iBAAiB,GAAI,KAAD,IAA4B;AACpD,UAAM,CAAC,KAAD,EAAQ,KAAR,IAAiB,KAAvB;AACA,IAAA,QAAQ,CAAC,KAAD,CAAR;AACA,UAAM,QAAQ,GAAG;AACf,MAAA,aAAa,EAAE,qBAAqB,CAAC,GAAD,EAAM,KAAN,EAAa,KAAb,CADrB;AAEf,MAAA,YAAY,EAAE;AACZ,QAAA,KADY,EAFC,EAAjB;;;AAOA,UAAM,cAAc,GAAa,EAAjC;AACA,QAAI,0BAAA,SAAS,MAAT,CAAA,SAAS,EAAU,QAAQ,CAAC,aAAnB,CAAb,EAAgD;AAC9C,MAAA,cAAc,CAAC,aAAf,GAA+B,QAA/B;AACD;AAED,QAAI,0BAAA,SAAS,MAAT,CAAA,SAAS,EAAU,QAAQ,CAAC,YAAnB,CAAb,EAA+C;AAC7C,MAAA,cAAc,CAAC,YAAf,GAA8B,QAA9B;AACD;AAED,IAAA,WAAW,CAAC,cAAD,CAAX;AACD,GApBD;AAsBA,QAAM,YAAY,GAAI,KAAD,IAA4B;AAC/C,IAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;AAIA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,iBAAiB,CAAC,YAAD,WAAC,YAAD,GAAiB,CAAC,GAAD,EAAM,GAAN,CAAjB,CAAjB;AACD,GAFQ,EAEN,CAAC,gBAAe,YAAf,CAAD,CAFM,CAAT;AAIA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,iBAAiB,CAAC,YAAD,WAAC,YAAD,GAAiB,CAAC,GAAD,EAAM,GAAN,CAAjB,CAAjB;AACA;AACA;AACD,GAJQ,EAIN,CAAC,gBAAe,YAAf,CAAD,CAJM,CAAT;AAMA,SACE,cAAC,MAAD,IAAQ,MAAM,EAAE,MAAhB,EAAwB,KAAK,EAAE,KAA/B;AACG,gBAAa,MAAM,CAAC,GAAD,CAAnB,KAA6B,cAAa,MAAM,CAAC,GAAD,CAAnB,CAA7B,GACC,0BAAK,CAAC,CAAC,2BAAD,CAAN,CADD,GAGC,cAAC,MAAD,IACE,KAAK,MADP,EAEE,GAAG,EAAE,GAFP,EAGE,GAAG,EAAE,GAHP,EAIE,KAAK,EAAE,KAJT,EAKE,aAAa,EAAE,iBALjB,EAME,QAAQ,EAAE,YANZ,EAOE,GAAG,EAAE,QAPP,GAJJ,CADF;;AAiBD,C,cAxEuB,iB,wQAAA,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, DataMask, Behavior } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Slider } from 'src/common/components';\nimport { PluginFilterRangeProps } from './types';\nimport { Styles } from '../common';\nimport { getRangeExtraFormData } from '../../utils';\n\nexport default function RangeFilterPlugin(props: PluginFilterRangeProps) {\n  const {\n    data,\n    formData,\n    height,\n    width,\n    setDataMask,\n    inputRef,\n    behaviors,\n  } = props;\n  const [row] = data;\n  // @ts-ignore\n  const { min, max }: { min: number; max: number } = row;\n  const { groupby, currentValue, defaultValue } = formData;\n  const [col = ''] = groupby || [];\n  const [value, setValue] = useState<[number, number]>(\n    defaultValue ?? [min, max],\n  );\n\n  const handleAfterChange = (value: [number, number]) => {\n    const [lower, upper] = value;\n    setValue(value);\n    const dataMask = {\n      extraFormData: getRangeExtraFormData(col, lower, upper),\n      currentState: {\n        value,\n      },\n    };\n\n    const dataMaskObject: DataMask = {};\n    if (behaviors.includes(Behavior.NATIVE_FILTER)) {\n      dataMaskObject.nativeFilters = dataMask;\n    }\n\n    if (behaviors.includes(Behavior.CROSS_FILTER)) {\n      dataMaskObject.crossFilters = dataMask;\n    }\n\n    setDataMask(dataMaskObject);\n  };\n\n  const handleChange = (value: [number, number]) => {\n    setValue(value);\n  };\n\n  useEffect(() => {\n    handleAfterChange(currentValue ?? [min, max]);\n  }, [JSON.stringify(currentValue)]);\n\n  useEffect(() => {\n    handleAfterChange(defaultValue ?? [min, max]);\n    // I think after Config Modal update some filter it re-creates default value for all other filters\n    // so we can process it like this `JSON.stringify` or start to use `Immer`\n  }, [JSON.stringify(defaultValue)]);\n\n  return (\n    <Styles height={height} width={width}>\n      {Number.isNaN(Number(min)) || Number.isNaN(Number(max)) ? (\n        <h4>{t('Chosen non-numeric column')}</h4>\n      ) : (\n        <Slider\n          range\n          min={min}\n          max={max}\n          value={value}\n          onAfterChange={handleAfterChange}\n          onChange={handleChange}\n          ref={inputRef}\n        />\n      )}\n    </Styles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}