{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport AntdIcon from '@ant-design/icons';\nimport { styled } from '@superset-ui/core';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";const EnhancedIcon = ({ iconColor, iconSize, ...rest }) => ___EmotionJSX(AntdIcon, _extends({ viewBox: rest.viewBox || '0 0 24 24' }, rest));\nconst Icon = styled(EnhancedIcon)`\n  ${({ iconColor }) => iconColor && `color: ${iconColor};`};\n  font-size: ${({ iconSize, theme }) => iconSize ? `${theme.typography.sizes[iconSize]}px` : '24px'};\n`;\nexport const renderIcon = (SVGComponent, props) => ___EmotionJSX(Icon, _extends({ component: SVGComponent }, props));const _default =\nIcon;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(EnhancedIcon, \"EnhancedIcon\", \"/app/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(Icon, \"Icon\", \"/app/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(renderIcon, \"renderIcon\", \"/app/superset-frontend/src/components/Icons/Icon.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Icons/Icon.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Icons/Icon.tsx"],"names":[],"mappings":"sWAAA;;;;;;;;;;;;;;;;;AAiBG;AAEH,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP,MAAqB,mBAArB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AAIA;qDACA,MAAM,YAAY,GAAG,CAAC,EAAE,SAAF,EAAa,QAAb,EAAuB,GAAG,IAA1B,EAAD,KACnB,cAAC,QAAD,aAAU,OAAO,EAAE,IAAI,CAAC,OAAL,IAAgB,WAAnC,IAAoD,IAApD,EADF;AAIA,MAAM,IAAI,GAAG,MAAM,CAAC,YAAD,CAAwB;IACvC,CAAC,EAAE,SAAF,EAAD,KAAmB,SAAS,IAAI,UAAU,SAAS,GAAG;eAC3C,CAAC,EAAE,QAAF,EAAY,KAAZ,EAAD,KACX,QAAQ,GAAG,GAAG,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,QAAvB,CAAgC,IAAtC,GAA6C,MAAM;AAC9D,CAJD;AAMA,OAAO,MAAM,UAAU,GAAG,CACxB,YADwB,EAUxB,KAVwB,KAWrB,cAAC,IAAD,aAAM,SAAS,EAAE,YAAjB,IAAmC,KAAnC,EAXE,C;AAaQ,I,CAAf,wB,iLAvBM,Y,kGAIA,I,0FAMO,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport AntdIcon from '@ant-design/icons';\nimport { styled } from '@superset-ui/core';\nimport { CustomIconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport IconType from './IconType';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst EnhancedIcon = ({ iconColor, iconSize, ...rest }: IconType) => (\n  <AntdIcon viewBox={rest.viewBox || '0 0 24 24'} {...rest} />\n);\n\nconst Icon = styled(EnhancedIcon)<IconType>`\n  ${({ iconColor }) => iconColor && `color: ${iconColor};`};\n  font-size: ${({ iconSize, theme }) =>\n    iconSize ? `${theme.typography.sizes[iconSize]}px` : '24px'};\n`;\n\nexport const renderIcon = (\n  SVGComponent:\n    | React.ComponentClass<\n        CustomIconComponentProps | React.SVGProps<SVGSVGElement>,\n        any\n      >\n    | React.FunctionComponent<\n        CustomIconComponentProps | React.SVGProps<SVGSVGElement>\n      >\n    | undefined,\n  props: IconType,\n) => <Icon component={SVGComponent} {...props} />;\n\nexport default Icon;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}