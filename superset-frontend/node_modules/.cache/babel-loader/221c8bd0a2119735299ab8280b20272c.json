{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useState } from 'react';\nimport { FormGroup, FormControl } from 'react-bootstrap';\nimport Modal from 'src/common/components/Modal';\nimport FormLabel from 'src/components/FormLabel';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst StyleFormGroup = styled(FormGroup)`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    text-transform: uppercase;\n  }\n`;\nconst DescriptionContainer = styled.div`\n  line-height: 40px;\n  padding-top: 16px;\n`;\nexport default function DeleteModal({ description, onConfirm, onHide, open, title }) {\n  const [disableChange, setDisableChange] = useState(true);\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableChange, onHide: onHide, onHandledPrimaryAction: onConfirm, primaryButtonName: t('delete'), primaryButtonType: \"danger\", show: open, title: title },\n  ___EmotionJSX(DescriptionContainer, null, description),\n  ___EmotionJSX(StyleFormGroup, null,\n  ___EmotionJSX(FormLabel, { htmlFor: \"delete\" },\n  t('Type \"%s\" to confirm', t('DELETE'))),\n\n  ___EmotionJSX(FormControl, { \"data-test\": \"delete-modal-input\", type: \"text\", id: \"delete\", bsSize: \"sm\", autoComplete: \"off\", onChange: event => {var _event$currentTarget$, _event$currentTarget;\n      const targetValue = (_event$currentTarget$ = (_event$currentTarget = event.currentTarget) == null ? void 0 : _event$currentTarget.value) != null ? _event$currentTarget$ : '';\n      setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n    } })));\n\n\n}__signature__(DeleteModal, \"useState{[disableChange, setDisableChange](true)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyleFormGroup, \"StyleFormGroup\", \"/app/superset-frontend/src/components/DeleteModal/index.tsx\");reactHotLoader.register(DescriptionContainer, \"DescriptionContainer\", \"/app/superset-frontend/src/components/DeleteModal/index.tsx\");reactHotLoader.register(DeleteModal, \"DeleteModal\", \"/app/superset-frontend/src/components/DeleteModal/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/DeleteModal/index.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,CAAT,EAAY,MAAZ,QAA0B,mBAA1B;AACA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,SAAT,EAAoB,WAApB,QAAyD,iBAAzD;AACA,OAAO,KAAP,MAAkB,6BAAlB;AACA,OAAO,SAAP,MAAsB,0BAAtB,C;AAEA,MAAM,cAAc,GAAG,MAAM,CAAC,SAAD,CAAW;;;;aAI3B,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,SAAb,CAAuB,MAAM;;;AAGxD,CAPD;AASA,MAAM,oBAAoB,GAAG,MAAM,CAAC,GAAG;;;AAGtC,CAHD;AAaA,eAAc,SAAU,WAAV,CAAsB,EAClC,WADkC,EAElC,SAFkC,EAGlC,MAHkC,EAIlC,IAJkC,EAKlC,KALkC,EAAtB,EAMK;AACjB,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAC,IAAD,CAAlD;AAEA,SACE,cAAC,KAAD,IACE,oBAAoB,EAAE,aADxB,EAEE,MAAM,EAAE,MAFV,EAGE,sBAAsB,EAAE,SAH1B,EAIE,iBAAiB,EAAE,CAAC,CAAC,QAAD,CAJtB,EAKE,iBAAiB,EAAC,QALpB,EAME,IAAI,EAAE,IANR,EAOE,KAAK,EAAE,KAPT;AASE,gBAAC,oBAAD,QAAuB,WAAvB,CATF;AAUE,gBAAC,cAAD;AACE,gBAAC,SAAD,IAAW,OAAO,EAAC,QAAnB;AACG,EAAA,CAAC,CAAC,sBAAD,EAAyB,CAAC,CAAC,QAAD,CAA1B,CADJ,CADF;;AAIE,gBAAC,WAAD,IACE,aAAU,oBADZ,EAEE,IAAI,EAAC,MAFP,EAGE,EAAE,EAAC,QAHL,EAIE,MAAM,EAAC,IAJT,EAKE,YAAY,EAAC,KALf,EAME,QAAQ,EACN,KADQ,IAEN;AACF,YAAM,WAAW,oDAAI,KAAK,CAAC,aAAV,qBAAI,qBAAqB,KAAzB,oCAA6C,EAA9D;AACA,MAAA,gBAAgB,CAAC,WAAW,CAAC,WAAZ,OAA8B,CAAC,CAAC,QAAD,CAAhC,CAAhB;AACD,KAXH,GAJF,CAVF,CADF;;;AA+BD,C,cAxCuB,W,wOAtBlB,c,2GASA,oB,iHAakB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, styled } from '@superset-ui/core';\nimport React, { useState } from 'react';\nimport { FormGroup, FormControl, FormControlProps } from 'react-bootstrap';\nimport Modal from 'src/common/components/Modal';\nimport FormLabel from 'src/components/FormLabel';\n\nconst StyleFormGroup = styled(FormGroup)`\n  padding-top: 8px;\n  width: 50%;\n  label {\n    color: ${({ theme }) => theme.colors.grayscale.light1};\n    text-transform: uppercase;\n  }\n`;\n\nconst DescriptionContainer = styled.div`\n  line-height: 40px;\n  padding-top: 16px;\n`;\n\ninterface DeleteModalProps {\n  description: React.ReactNode;\n  onConfirm: () => void;\n  onHide: () => void;\n  open: boolean;\n  title: React.ReactNode;\n}\n\nexport default function DeleteModal({\n  description,\n  onConfirm,\n  onHide,\n  open,\n  title,\n}: DeleteModalProps) {\n  const [disableChange, setDisableChange] = useState(true);\n\n  return (\n    <Modal\n      disablePrimaryButton={disableChange}\n      onHide={onHide}\n      onHandledPrimaryAction={onConfirm}\n      primaryButtonName={t('delete')}\n      primaryButtonType=\"danger\"\n      show={open}\n      title={title}\n    >\n      <DescriptionContainer>{description}</DescriptionContainer>\n      <StyleFormGroup>\n        <FormLabel htmlFor=\"delete\">\n          {t('Type \"%s\" to confirm', t('DELETE'))}\n        </FormLabel>\n        <FormControl\n          data-test=\"delete-modal-input\"\n          type=\"text\"\n          id=\"delete\"\n          bsSize=\"sm\"\n          autoComplete=\"off\"\n          onChange={(\n            event: React.FormEvent<FormControl & FormControlProps>,\n          ) => {\n            const targetValue = (event.currentTarget?.value as string) ?? '';\n            setDisableChange(targetValue.toUpperCase() !== t('DELETE'));\n          }}\n        />\n      </StyleFormGroup>\n    </Modal>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}