{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport Icon from 'src/components/Icon';\nimport { AlertState } from '../types';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status' && prop !== 'isReportEnabled' })\n`\n  color: ${({ status, theme, isReportEnabled }) => {\n  switch (status) {\n    case AlertState.working:\n      return theme.colors.primary.base;\n    case AlertState.error:\n      return theme.colors.error.base;\n    case AlertState.success:\n      return isReportEnabled ?\n      theme.colors.success.base :\n      theme.colors.alert.base;\n    case AlertState.noop:\n      return theme.colors.success.base;\n    case AlertState.grace:\n      return theme.colors.alert.base;\n    default:\n      return theme.colors.grayscale.base;}\n\n}};\n`;\nexport default function AlertStatusIcon({ state, isReportEnabled = false }) {\n  const lastStateConfig = {\n    name: '',\n    label: '',\n    status: '' };\n\n  switch (state) {\n    case AlertState.success:\n      lastStateConfig.name = isReportEnabled ? 'check' : 'alert-solid-small';\n      lastStateConfig.label = isReportEnabled ?\n      t('Report sent') :\n      t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.success;\n      break;\n    case AlertState.working:\n      lastStateConfig.name = 'running';\n      lastStateConfig.label = isReportEnabled ?\n      t('Report sending') :\n      t('Alert running');\n      lastStateConfig.status = AlertState.working;\n      break;\n    case AlertState.error:\n      lastStateConfig.name = 'x-small';\n      lastStateConfig.label = isReportEnabled ?\n      t('Report failed') :\n      t('Alert failed');\n      lastStateConfig.status = AlertState.error;\n      break;\n    case AlertState.noop:\n      lastStateConfig.name = 'check';\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.noop;\n      break;\n    case AlertState.grace:\n      lastStateConfig.name = 'alert-solid-small';\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.grace;\n      break;\n    default:\n      lastStateConfig.name = 'check';\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.noop;}\n\n  return ___EmotionJSX(Tooltip, { title: lastStateConfig.label, placement: \"bottomLeft\" },\n  ___EmotionJSX(StatusIcon, { name: lastStateConfig.name, status: lastStateConfig.status, isReportEnabled: isReportEnabled, viewBox: lastStateConfig.name === 'alert-solid-small' ?\n    '-6 -6 24 24' :\n    '0 0 24 24' }));\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StatusIcon, \"StatusIcon\", \"/app/superset-frontend/src/views/CRUD/alert/components/AlertStatusIcon.tsx\");reactHotLoader.register(AlertStatusIcon, \"AlertStatusIcon\", \"/app/superset-frontend/src/views/CRUD/alert/components/AlertStatusIcon.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/alert/components/AlertStatusIcon.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport React from 'react';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport Icon, { IconName } from 'src/components/Icon';\nimport { AlertState } from '../types';\n\nconst StatusIcon = styled(Icon, {\n  shouldForwardProp: prop => prop !== 'status' && prop !== 'isReportEnabled',\n})<{ status: string; isReportEnabled: boolean }>`\n  color: ${({ status, theme, isReportEnabled }) => {\n    switch (status) {\n      case AlertState.working:\n        return theme.colors.primary.base;\n      case AlertState.error:\n        return theme.colors.error.base;\n      case AlertState.success:\n        return isReportEnabled\n          ? theme.colors.success.base\n          : theme.colors.alert.base;\n      case AlertState.noop:\n        return theme.colors.success.base;\n      case AlertState.grace:\n        return theme.colors.alert.base;\n      default:\n        return theme.colors.grayscale.base;\n    }\n  }};\n`;\n\nexport default function AlertStatusIcon({\n  state,\n  isReportEnabled = false,\n}: {\n  state: string;\n  isReportEnabled: boolean;\n}) {\n  const lastStateConfig = {\n    name: '',\n    label: '',\n    status: '',\n  };\n  switch (state) {\n    case AlertState.success:\n      lastStateConfig.name = isReportEnabled ? 'check' : 'alert-solid-small';\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sent')\n        : t('Alert triggered, notification sent');\n      lastStateConfig.status = AlertState.success;\n      break;\n    case AlertState.working:\n      lastStateConfig.name = 'running';\n      lastStateConfig.label = isReportEnabled\n        ? t('Report sending')\n        : t('Alert running');\n      lastStateConfig.status = AlertState.working;\n      break;\n    case AlertState.error:\n      lastStateConfig.name = 'x-small';\n      lastStateConfig.label = isReportEnabled\n        ? t('Report failed')\n        : t('Alert failed');\n      lastStateConfig.status = AlertState.error;\n      break;\n    case AlertState.noop:\n      lastStateConfig.name = 'check';\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.noop;\n      break;\n    case AlertState.grace:\n      lastStateConfig.name = 'alert-solid-small';\n      lastStateConfig.label = t('Alert Triggered, In Grace Period');\n      lastStateConfig.status = AlertState.grace;\n      break;\n    default:\n      lastStateConfig.name = 'check';\n      lastStateConfig.label = t('Nothing triggered');\n      lastStateConfig.status = AlertState.noop;\n  }\n  return (\n    <Tooltip title={lastStateConfig.label} placement=\"bottomLeft\">\n      <StatusIcon\n        name={lastStateConfig.name as IconName}\n        status={lastStateConfig.status}\n        isReportEnabled={isReportEnabled}\n        viewBox={\n          lastStateConfig.name === 'alert-solid-small'\n            ? '-6 -6 24 24'\n            : '0 0 24 24'\n        }\n      />\n    </Tooltip>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}