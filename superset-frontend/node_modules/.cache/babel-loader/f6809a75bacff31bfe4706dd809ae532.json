{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\n\nimport QueryTable from './QueryTable';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  queries: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired,\n  displayLimit: PropTypes.number.isRequired };\n\n\nconst QueryHistory = props => {\n  if (props.queries.length > 0) {\n    return (\n      ___EmotionJSX(QueryTable, {\n        columns: [\n        'state',\n        'started',\n        'duration',\n        'progress',\n        'rows',\n        'sql',\n        'output',\n        'actions'],\n\n        queries: props.queries,\n        actions: props.actions,\n        displayLimit: props.displayLimit }));\n\n\n  }\n  return ___EmotionJSX(Alert, { type: \"info\", message: t('No query history yet...') });\n};\nQueryHistory.propTypes = propTypes;const _default =\n\nQueryHistory;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/QueryHistory.jsx\");reactHotLoader.register(QueryHistory, \"QueryHistory\", \"/app/superset-frontend/src/SqlLab/components/QueryHistory.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QueryHistory.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/QueryHistory.jsx"],"names":["React","PropTypes","Alert","t","QueryTable","propTypes","queries","array","isRequired","actions","object","displayLimit","number","QueryHistory","props","length"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,CAAT,QAAkB,mBAAlB;;AAEA,OAAOC,UAAP,MAAuB,cAAvB,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEL,SAAS,CAACM,KAAV,CAAgBC,UADT;AAEhBC,EAAAA,OAAO,EAAER,SAAS,CAACS,MAAV,CAAiBF,UAFV;AAGhBG,EAAAA,YAAY,EAAEV,SAAS,CAACW,MAAV,CAAiBJ,UAHf,EAAlB;;;AAMA,MAAMK,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIA,KAAK,CAACR,OAAN,CAAcS,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE;AACP,eADO;AAEP,iBAFO;AAGP,kBAHO;AAIP,kBAJO;AAKP,cALO;AAMP,aANO;AAOP,gBAPO;AAQP,iBARO,CADX;;AAWE,QAAA,OAAO,EAAED,KAAK,CAACR,OAXjB;AAYE,QAAA,OAAO,EAAEQ,KAAK,CAACL,OAZjB;AAaE,QAAA,YAAY,EAAEK,KAAK,CAACH,YAbtB,GADF;;;AAiBD;AACD,SAAO,cAAC,KAAD,IAAO,IAAI,EAAC,MAAZ,EAAmB,OAAO,EAAER,CAAC,CAAC,yBAAD,CAA7B,GAAP;AACD,CArBD;AAsBAU,YAAY,CAACR,SAAb,GAAyBA,SAAzB,C;;AAEeQ,Y,CAAf,wB,iLA9BMR,S,wGAMAQ,Y","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from 'src/components/Alert';\nimport { t } from '@superset-ui/core';\n\nimport QueryTable from './QueryTable';\n\nconst propTypes = {\n  queries: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired,\n  displayLimit: PropTypes.number.isRequired,\n};\n\nconst QueryHistory = props => {\n  if (props.queries.length > 0) {\n    return (\n      <QueryTable\n        columns={[\n          'state',\n          'started',\n          'duration',\n          'progress',\n          'rows',\n          'sql',\n          'output',\n          'actions',\n        ]}\n        queries={props.queries}\n        actions={props.actions}\n        displayLimit={props.displayLimit}\n      />\n    );\n  }\n  return <Alert type=\"info\" message={t('No query history yet...')} />;\n};\nQueryHistory.propTypes = propTypes;\n\nexport default QueryHistory;\n"]},"metadata":{},"sourceType":"module"}