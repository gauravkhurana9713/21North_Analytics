{"ast":null,"code":"var _container$getAttribu;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport messageToastReducer from 'src/messageToasts/reducers';\nimport { initEnhancer } from 'src/reduxUtils';\nconst container = document.getElementById('app');\nconst bootstrap = JSON.parse((_container$getAttribu = container == null ? void 0 : container.getAttribute('data-bootstrap')) != null ? _container$getAttribu : '{}');\nconst common = { ...bootstrap.common };\nexport const store = createStore(combineReducers({\n  messageToasts: messageToastReducer,\n  common: () => common }),\n{}, compose(applyMiddleware(thunk), initEnhancer(false)));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(container, \"container\", \"/app/superset-frontend/src/views/store.ts\");reactHotLoader.register(bootstrap, \"bootstrap\", \"/app/superset-frontend/src/views/store.ts\");reactHotLoader.register(common, \"common\", \"/app/superset-frontend/src/views/store.ts\");reactHotLoader.register(store, \"store\", \"/app/superset-frontend/src/views/store.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/store.ts"],"names":[],"mappings":"kUAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,eAAT,EAA0B,eAA1B,EAA2C,OAA3C,EAAoD,WAApD,QAAuE,OAAvE;AACA,OAAO,KAAP,MAAkB,aAAlB;AACA,OAAO,mBAAP,MAAgC,4BAAhC;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAEA,MAAM,SAAS,GAAG,QAAQ,CAAC,cAAT,CAAwB,KAAxB,CAAlB;AACA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAL,0BAAW,SAAX,oBAAW,SAAS,CAAE,YAAX,CAAwB,gBAAxB,CAAX,oCAAwD,IAAxD,CAAlB;AACA,MAAM,MAAM,GAAG,EAAE,GAAG,SAAS,CAAC,MAAf,EAAf;AAEA,OAAO,MAAM,KAAK,GAAG,WAAW,CAC9B,eAAe,CAAC;AACd,EAAA,aAAa,EAAE,mBADD;AAEd,EAAA,MAAM,EAAE,MAAM,MAFA,EAAD,CADe;AAK9B,EAL8B,EAM9B,OAAO,CAAC,eAAe,CAAC,KAAD,CAAhB,EAAyB,YAAY,CAAC,KAAD,CAArC,CANuB,CAAzB,C,iLAJD,S,oFACA,S,oFACA,M,iFAEO,K","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport messageToastReducer from 'src/messageToasts/reducers';\nimport { initEnhancer } from 'src/reduxUtils';\n\nconst container = document.getElementById('app');\nconst bootstrap = JSON.parse(container?.getAttribute('data-bootstrap') ?? '{}');\nconst common = { ...bootstrap.common };\n\nexport const store = createStore(\n  combineReducers({\n    messageToasts: messageToastReducer,\n    common: () => common,\n  }),\n  {},\n  compose(applyMiddleware(thunk), initEnhancer(false)),\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}