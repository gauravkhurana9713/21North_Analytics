{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormControl, FormGroup, Row, Col } from 'react-bootstrap';\nimport { t, supersetTheme, styled } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport FormLabel from 'src/components/FormLabel';\nimport Modal from 'src/common/components/Modal';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst Styles = styled.span`\n  svg {\n    vertical-align: -${supersetTheme.gridUnit * 1.25}px;\n  }\n`;\nexport default function SaveQuery({ query, defaultLabel = t('Undefined'), onSave = () => {}, onUpdate, saveQueryWarning = null }) {\n  const [description, setDescription] = useState(query.description || '');\n  const [label, setLabel] = useState(defaultLabel);\n  const [showSave, setShowSave] = useState(false);\n  const isSaved = !!query.remoteId;\n  const queryPayload = () => ({\n    ...query,\n    title: label,\n    description });\n\n  const close = () => {\n    setShowSave(false);\n  };\n  const onSaveWrapper = () => {\n    onSave(queryPayload());\n    close();\n  };\n  const onUpdateWrapper = () => {\n    onUpdate(queryPayload());\n    close();\n  };\n  const onLabelChange = e => {\n    setLabel(e.target.value);\n  };\n  const onDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const toggleSave = () => {\n    setShowSave(!showSave);\n  };\n  const renderModalBody = () => ___EmotionJSX(FormGroup, { bsSize: \"small\" },\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(\"small\", null,\n  ___EmotionJSX(FormLabel, { htmlFor: \"embed-height\" }, t('Name'))),\n\n  ___EmotionJSX(FormControl, { type: \"text\", value: label, onChange: onLabelChange }))),\n\n\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(\"small\", null,\n  ___EmotionJSX(FormLabel, { htmlFor: \"embed-height\" }, t('Description'))),\n\n  ___EmotionJSX(FormControl, { rows: 5, componentClass: \"textarea\", value: description, onChange: onDescriptionChange }))),\n\n\n  saveQueryWarning && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(\"br\", null),\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(\"small\", null, saveQueryWarning))),\n\n\n  ___EmotionJSX(\"br\", null))));\n\n\n\n  return ___EmotionJSX(Styles, { className: \"SaveQuery\" },\n  ___EmotionJSX(Button, { buttonSize: \"small\", onClick: toggleSave },\n  ___EmotionJSX(Icon, { name: \"save\", color: supersetTheme.colors.primary.base, width: 20, height: 20 }), ' ',\n  isSaved ? t('Save') : t('Save as')),\n\n  ___EmotionJSX(Modal, { className: \"save-query-modal\", onHandledPrimaryAction: onSaveWrapper, onHide: close, primaryButtonName: isSaved ? t('Save') : t('Save as'), width: \"620px\", show: showSave, title: ___EmotionJSX(\"h4\", null, t('Save query')), footer: [\n    ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(Button, { onClick: close, \"data-test\": \"cancel-query\", cta: true },\n    t('Cancel')),\n\n    ___EmotionJSX(Button, { buttonStyle: isSaved ? undefined : 'primary', onClick: onSaveWrapper, className: \"m-r-3\", cta: true },\n    isSaved ? t('Save as new') : t('Save')),\n\n    isSaved && ___EmotionJSX(Button, { buttonStyle: \"primary\", onClick: onUpdateWrapper, className: \"m-r-3\", cta: true },\n    t('Update')))] },\n\n\n\n  renderModalBody()));\n\n\n}__signature__(SaveQuery, \"useState{[description, setDescription](query.description || '')}\\nuseState{[label, setLabel](defaultLabel)}\\nuseState{[showSave, setShowSave](false)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/SqlLab/components/SaveQuery.tsx\");reactHotLoader.register(SaveQuery, \"SaveQuery\", \"/app/superset-frontend/src/SqlLab/components/SaveQuery.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/SaveQuery.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormControl, FormGroup, Row, Col } from 'react-bootstrap';\nimport { t, supersetTheme, styled } from '@superset-ui/core';\n\nimport Button from 'src/components/Button';\nimport FormLabel from 'src/components/FormLabel';\nimport Modal from 'src/common/components/Modal';\nimport Icon from 'src/components/Icon';\n\nconst Styles = styled.span`\n  svg {\n    vertical-align: -${supersetTheme.gridUnit * 1.25}px;\n  }\n`;\n\ninterface SaveQueryProps {\n  query: any;\n  defaultLabel: string;\n  onSave: (arg0: QueryPayload) => void;\n  onUpdate: (arg0: QueryPayload) => void;\n  saveQueryWarning: string | null;\n}\n\ntype QueryPayload = {\n  autorun: boolean;\n  dbId: number;\n  description?: string;\n  id?: string;\n  latestQueryId: string;\n  queryLimit: number;\n  remoteId: number;\n  schema: string;\n  schemaOptions: Array<{\n    label: string;\n    title: string;\n    value: string;\n  }>;\n  selectedText: string | null;\n  sql: string;\n  tableOptions: Array<{\n    label: string;\n    schema: string;\n    title: string;\n    type: string;\n    value: string;\n  }>;\n  title: string;\n};\n\nexport default function SaveQuery({\n  query,\n  defaultLabel = t('Undefined'),\n  onSave = () => {},\n  onUpdate,\n  saveQueryWarning = null,\n}: SaveQueryProps) {\n  const [description, setDescription] = useState<string>(\n    query.description || '',\n  );\n  const [label, setLabel] = useState<string>(defaultLabel);\n  const [showSave, setShowSave] = useState<boolean>(false);\n  const isSaved = !!query.remoteId;\n\n  const queryPayload = () => ({\n    ...query,\n    title: label,\n    description,\n  });\n\n  const close = () => {\n    setShowSave(false);\n  };\n\n  const onSaveWrapper = () => {\n    onSave(queryPayload());\n    close();\n  };\n\n  const onUpdateWrapper = () => {\n    onUpdate(queryPayload());\n    close();\n  };\n\n  const onLabelChange = (e: React.FormEvent<FormControl>) => {\n    setLabel((e.target as HTMLInputElement).value);\n  };\n\n  const onDescriptionChange = (e: React.FormEvent<FormControl>) => {\n    setDescription((e.target as HTMLInputElement).value);\n  };\n\n  const toggleSave = () => {\n    setShowSave(!showSave);\n  };\n\n  const renderModalBody = () => (\n    <FormGroup bsSize=\"small\">\n      <Row>\n        <Col md={12}>\n          <small>\n            <FormLabel htmlFor=\"embed-height\">{t('Name')}</FormLabel>\n          </small>\n          <FormControl type=\"text\" value={label} onChange={onLabelChange} />\n        </Col>\n      </Row>\n      <br />\n      <Row>\n        <Col md={12}>\n          <small>\n            <FormLabel htmlFor=\"embed-height\">{t('Description')}</FormLabel>\n          </small>\n          <FormControl\n            rows={5}\n            componentClass=\"textarea\"\n            value={description}\n            onChange={onDescriptionChange}\n          />\n        </Col>\n      </Row>\n      {saveQueryWarning && (\n        <>\n          <br />\n          <div>\n            <Row>\n              <Col md={12}>\n                <small>{saveQueryWarning}</small>\n              </Col>\n            </Row>\n            <br />\n          </div>\n        </>\n      )}\n    </FormGroup>\n  );\n\n  return (\n    <Styles className=\"SaveQuery\">\n      <Button buttonSize=\"small\" onClick={toggleSave}>\n        <Icon\n          name=\"save\"\n          color={supersetTheme.colors.primary.base}\n          width={20}\n          height={20}\n        />{' '}\n        {isSaved ? t('Save') : t('Save as')}\n      </Button>\n      <Modal\n        className=\"save-query-modal\"\n        onHandledPrimaryAction={onSaveWrapper}\n        onHide={close}\n        primaryButtonName={isSaved ? t('Save') : t('Save as')}\n        width=\"620px\"\n        show={showSave}\n        title={<h4>{t('Save query')}</h4>}\n        footer={[\n          <>\n            <Button onClick={close} data-test=\"cancel-query\" cta>\n              {t('Cancel')}\n            </Button>\n            <Button\n              buttonStyle={isSaved ? undefined : 'primary'}\n              onClick={onSaveWrapper}\n              className=\"m-r-3\"\n              cta\n            >\n              {isSaved ? t('Save as new') : t('Save')}\n            </Button>\n            {isSaved && (\n              <Button\n                buttonStyle=\"primary\"\n                onClick={onUpdateWrapper}\n                className=\"m-r-3\"\n                cta\n              >\n                {t('Update')}\n              </Button>\n            )}\n          </>,\n        ]}\n      >\n        {renderModalBody()}\n      </Modal>\n    </Styles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}