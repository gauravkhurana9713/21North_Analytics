{"ast":null,"code":"import \"core-js/modules/es.promise.finally.js\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  copyNode: PropTypes.node,\n  getText: PropTypes.func,\n  onCopyEnd: PropTypes.func,\n  shouldShowText: PropTypes.bool,\n  text: PropTypes.string,\n  wrapped: PropTypes.bool,\n  tooltipText: PropTypes.string,\n  addDangerToast: PropTypes.func.isRequired,\n  addSuccessToast: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  copyNode: ___EmotionJSX(\"span\", null, \"Copy\"),\n  onCopyEnd: () => {},\n  shouldShowText: true,\n  wrapped: true,\n  tooltipText: t('Copy to clipboard') };var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1x78vrd-CopyToClipboard\", styles: \"display:inline-flex;align-items:center;;label:CopyToClipboard;\" } : { name: \"1x78vrd-CopyToClipboard\", styles: \"display:inline-flex;align-items:center;;label:CopyToClipboard;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvQ29weVRvQ2xpcGJvYXJkL2luZGV4LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3R1kiLCJmaWxlIjoiL2FwcC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9Db3B5VG9DbGlwYm9hcmQvaW5kZXguanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21tb24vY29tcG9uZW50cy9Ub29sdGlwJztcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9tZXNzYWdlVG9hc3RzL2VuaGFuY2Vycy93aXRoVG9hc3RzJztcbmltcG9ydCBjb3B5VGV4dFRvQ2xpcGJvYXJkIGZyb20gJ3NyYy91dGlscy9jb3B5JztcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICBjb3B5Tm9kZTogUHJvcFR5cGVzLm5vZGUsXG4gIGdldFRleHQ6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNvcHlFbmQ6IFByb3BUeXBlcy5mdW5jLFxuICBzaG91bGRTaG93VGV4dDogUHJvcFR5cGVzLmJvb2wsXG4gIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHdyYXBwZWQ6IFByb3BUeXBlcy5ib29sLFxuICB0b29sdGlwVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgYWRkRGFuZ2VyVG9hc3Q6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIGFkZFN1Y2Nlc3NUb2FzdDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbn07XG5cbmNvbnN0IGRlZmF1bHRQcm9wcyA9IHtcbiAgY29weU5vZGU6IDxzcGFuPkNvcHk8L3NwYW4+LFxuICBvbkNvcHlFbmQ6ICgpID0+IHt9LFxuICBzaG91bGRTaG93VGV4dDogdHJ1ZSxcbiAgd3JhcHBlZDogdHJ1ZSxcbiAgdG9vbHRpcFRleHQ6IHQoJ0NvcHkgdG8gY2xpcGJvYXJkJyksXG59O1xuXG5jbGFzcyBDb3B5VG9DbGlwYm9hcmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIC8vIGJpbmRpbmdzXG4gICAgdGhpcy5jb3B5VG9DbGlwYm9hcmQgPSB0aGlzLmNvcHlUb0NsaXBib2FyZC5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DbGljayA9IHRoaXMub25DbGljay5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5nZXRUZXh0KSB7XG4gICAgICB0aGlzLnByb3BzLmdldFRleHQoZCA9PiB7XG4gICAgICAgIHRoaXMuY29weVRvQ2xpcGJvYXJkKGQpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY29weVRvQ2xpcGJvYXJkKHRoaXMucHJvcHMudGV4dCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0RGVjb3JhdGVkQ29weU5vZGUoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudCh0aGlzLnByb3BzLmNvcHlOb2RlLCB7XG4gICAgICBzdHlsZTogeyBjdXJzb3I6ICdwb2ludGVyJyB9LFxuICAgICAgb25DbGljazogdGhpcy5vbkNsaWNrLFxuICAgIH0pO1xuICB9XG5cbiAgY29weVRvQ2xpcGJvYXJkKHRleHRUb0NvcHkpIHtcbiAgICBjb3B5VGV4dFRvQ2xpcGJvYXJkKHRleHRUb0NvcHkpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KHQoJ0NvcGllZCB0byBjbGlwYm9hcmQhJykpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMuYWRkRGFuZ2VyVG9hc3QoXG4gICAgICAgICAgdChcbiAgICAgICAgICAgICdTb3JyeSwgeW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgY29weWluZy4gVXNlIEN0cmwgLyBDbWQgKyBDIScsXG4gICAgICAgICAgKSxcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMub25Db3B5RW5kKCk7XG4gICAgICB9KTtcbiAgfVxuXG4gIHJlbmRlck5vdFdyYXBwZWQoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb29sdGlwXG4gICAgICAgIGlkPVwiY29weS10by1jbGlwYm9hcmQtdG9vbHRpcFwiXG4gICAgICAgIHBsYWNlbWVudD1cInRvcFwiXG4gICAgICAgIHN0eWxlPXt7IGN1cnNvcjogJ3BvaW50ZXInIH19XG4gICAgICAgIHRpdGxlPXt0aGlzLnByb3BzLnRvb2x0aXBUZXh0fVxuICAgICAgICB0cmlnZ2VyPXtbJ2hvdmVyJ119XG4gICAgICA+XG4gICAgICAgIHt0aGlzLmdldERlY29yYXRlZENvcHlOb2RlKCl9XG4gICAgICA8L1Rvb2x0aXA+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlckxpbmsoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxzcGFuIGNzcz17eyBkaXNwbGF5OiAnaW5saW5lLWZsZXgnLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9fT5cbiAgICAgICAge3RoaXMucHJvcHMuc2hvdWxkU2hvd1RleHQgJiYgdGhpcy5wcm9wcy50ZXh0ICYmIChcbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtLXItNVwiIGRhdGEtdGVzdD1cInNob3J0LXVybFwiPlxuICAgICAgICAgICAge3RoaXMucHJvcHMudGV4dH1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICl9XG4gICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgaWQ9XCJjb3B5LXRvLWNsaXBib2FyZC10b29sdGlwXCJcbiAgICAgICAgICBwbGFjZW1lbnQ9XCJ0b3BcIlxuICAgICAgICAgIHRpdGxlPXt0aGlzLnByb3BzLnRvb2x0aXBUZXh0fVxuICAgICAgICAgIHRyaWdnZXI9e1snaG92ZXInXX1cbiAgICAgICAgPlxuICAgICAgICAgIHt0aGlzLmdldERlY29yYXRlZENvcHlOb2RlKCl9XG4gICAgICAgIDwvVG9vbHRpcD5cbiAgICAgIDwvc3Bhbj5cbiAgICApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgd3JhcHBlZCB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAoIXdyYXBwZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnJlbmRlck5vdFdyYXBwZWQoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMucmVuZGVyTGluaygpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUb2FzdHMoQ29weVRvQ2xpcGJvYXJkKTtcblxuQ29weVRvQ2xpcGJvYXJkLnByb3BUeXBlcyA9IHByb3BUeXBlcztcbkNvcHlUb0NsaXBib2FyZC5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG4iXX0= */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nclass CopyToClipboard extends React.Component {\n  constructor(props) {var _context, _context2;\n    super(props);\n\n    // bindings\n    this.copyToClipboard = _bindInstanceProperty(_context = this.copyToClipboard).call(_context, this);\n    this.onClick = _bindInstanceProperty(_context2 = this.onClick).call(_context2, this);\n  }\n\n  onClick() {\n    if (this.props.getText) {\n      this.props.getText(d => {\n        this.copyToClipboard(d);\n      });\n    } else {\n      this.copyToClipboard(this.props.text);\n    }\n  }\n\n  getDecoratedCopyNode() {\n    return /*#__PURE__*/React.cloneElement(this.props.copyNode, {\n      style: { cursor: 'pointer' },\n      onClick: this.onClick });\n\n  }\n\n  copyToClipboard(textToCopy) {\n    copyTextToClipboard(textToCopy).\n    then(() => {\n      this.props.addSuccessToast(t('Copied to clipboard!'));\n    }).\n    catch(() => {\n      this.props.addDangerToast(\n      t(\n      'Sorry, your browser does not support copying. Use Ctrl / Cmd + C!'));\n\n\n    }).\n    finally(() => {\n      this.props.onCopyEnd();\n    });\n  }\n\n  renderNotWrapped() {\n    return (\n      ___EmotionJSX(Tooltip, {\n        id: \"copy-to-clipboard-tooltip\",\n        placement: \"top\",\n        style: { cursor: 'pointer' },\n        title: this.props.tooltipText,\n        trigger: ['hover'] },\n\n      this.getDecoratedCopyNode()));\n\n\n  }\n\n  renderLink() {\n    return (\n      ___EmotionJSX(\"span\", { css: _ref },\n      this.props.shouldShowText && this.props.text &&\n      ___EmotionJSX(\"span\", { className: \"m-r-5\", \"data-test\": \"short-url\" },\n      this.props.text),\n\n\n      ___EmotionJSX(Tooltip, {\n        id: \"copy-to-clipboard-tooltip\",\n        placement: \"top\",\n        title: this.props.tooltipText,\n        trigger: ['hover'] },\n\n      this.getDecoratedCopyNode())));\n\n\n\n  }\n\n  render() {\n    const { wrapped } = this.props;\n    if (!wrapped) {\n      return this.renderNotWrapped();\n    }\n    return this.renderLink();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default =\nwithToasts(CopyToClipboard);export default _default;\n\nCopyToClipboard.propTypes = propTypes;\nCopyToClipboard.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/components/CopyToClipboard/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/components/CopyToClipboard/index.jsx\");reactHotLoader.register(CopyToClipboard, \"CopyToClipboard\", \"/app/superset-frontend/src/components/CopyToClipboard/index.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/CopyToClipboard/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/CopyToClipboard/index.jsx"],"names":["React","PropTypes","t","Tooltip","withToasts","copyTextToClipboard","propTypes","copyNode","node","getText","func","onCopyEnd","shouldShowText","bool","text","string","wrapped","tooltipText","addDangerToast","isRequired","addSuccessToast","defaultProps","CopyToClipboard","Component","constructor","props","copyToClipboard","onClick","d","getDecoratedCopyNode","cloneElement","style","cursor","textToCopy","then","catch","finally","renderNotWrapped","renderLink","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport copyTextToClipboard from 'src/utils/copy';\n\nconst propTypes = {\n  copyNode: PropTypes.node,\n  getText: PropTypes.func,\n  onCopyEnd: PropTypes.func,\n  shouldShowText: PropTypes.bool,\n  text: PropTypes.string,\n  wrapped: PropTypes.bool,\n  tooltipText: PropTypes.string,\n  addDangerToast: PropTypes.func.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  copyNode: <span>Copy</span>,\n  onCopyEnd: () => {},\n  shouldShowText: true,\n  wrapped: true,\n  tooltipText: t('Copy to clipboard'),\n};\n\nclass CopyToClipboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // bindings\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    if (this.props.getText) {\n      this.props.getText(d => {\n        this.copyToClipboard(d);\n      });\n    } else {\n      this.copyToClipboard(this.props.text);\n    }\n  }\n\n  getDecoratedCopyNode() {\n    return React.cloneElement(this.props.copyNode, {\n      style: { cursor: 'pointer' },\n      onClick: this.onClick,\n    });\n  }\n\n  copyToClipboard(textToCopy) {\n    copyTextToClipboard(textToCopy)\n      .then(() => {\n        this.props.addSuccessToast(t('Copied to clipboard!'));\n      })\n      .catch(() => {\n        this.props.addDangerToast(\n          t(\n            'Sorry, your browser does not support copying. Use Ctrl / Cmd + C!',\n          ),\n        );\n      })\n      .finally(() => {\n        this.props.onCopyEnd();\n      });\n  }\n\n  renderNotWrapped() {\n    return (\n      <Tooltip\n        id=\"copy-to-clipboard-tooltip\"\n        placement=\"top\"\n        style={{ cursor: 'pointer' }}\n        title={this.props.tooltipText}\n        trigger={['hover']}\n      >\n        {this.getDecoratedCopyNode()}\n      </Tooltip>\n    );\n  }\n\n  renderLink() {\n    return (\n      <span css={{ display: 'inline-flex', alignItems: 'center' }}>\n        {this.props.shouldShowText && this.props.text && (\n          <span className=\"m-r-5\" data-test=\"short-url\">\n            {this.props.text}\n          </span>\n        )}\n        <Tooltip\n          id=\"copy-to-clipboard-tooltip\"\n          placement=\"top\"\n          title={this.props.tooltipText}\n          trigger={['hover']}\n        >\n          {this.getDecoratedCopyNode()}\n        </Tooltip>\n      </span>\n    );\n  }\n\n  render() {\n    const { wrapped } = this.props;\n    if (!wrapped) {\n      return this.renderNotWrapped();\n    }\n    return this.renderLink();\n  }\n}\n\nexport default withToasts(CopyToClipboard);\n\nCopyToClipboard.propTypes = propTypes;\nCopyToClipboard.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}