{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from 'src/components/Label';\n\nimport { STATE_TYPE_MAP } from '../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  query: PropTypes.object.isRequired };\n\n\nexport default function QueryStateLabel({ query }) {\n  const type = STATE_TYPE_MAP[query.state];\n  return (\n    ___EmotionJSX(Label, { className: \"m-r-3\", type: type },\n    query.state));\n\n\n}\nQueryStateLabel.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/QueryStateLabel.jsx\");reactHotLoader.register(QueryStateLabel, \"QueryStateLabel\", \"/app/superset-frontend/src/SqlLab/components/QueryStateLabel.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/QueryStateLabel.jsx"],"names":["React","PropTypes","Label","STATE_TYPE_MAP","propTypes","query","object","isRequired","QueryStateLabel","type","state"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AAEA,SAASC,cAAT,QAA+B,cAA/B,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADR,EAAlB;;;AAIA,eAAe,SAASC,eAAT,CAAyB,EAAEH,KAAF,EAAzB,EAAoC;AACjD,QAAMI,IAAI,GAAGN,cAAc,CAACE,KAAK,CAACK,KAAP,CAA3B;AACA;AACE,kBAAC,KAAD,IAAO,SAAS,EAAC,OAAjB,EAAyB,IAAI,EAAED,IAA/B;AACGJ,IAAAA,KAAK,CAACK,KADT,CADF;;;AAKD;AACDF,eAAe,CAACJ,SAAhB,GAA4BA,SAA5B,C,iLAZMA,S,2GAIkBI,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from 'src/components/Label';\n\nimport { STATE_TYPE_MAP } from '../constants';\n\nconst propTypes = {\n  query: PropTypes.object.isRequired,\n};\n\nexport default function QueryStateLabel({ query }) {\n  const type = STATE_TYPE_MAP[query.state];\n  return (\n    <Label className=\"m-r-3\" type={type}>\n      {query.state}\n    </Label>\n  );\n}\nQueryStateLabel.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}