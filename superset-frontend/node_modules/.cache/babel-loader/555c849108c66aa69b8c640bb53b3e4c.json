{"ast":null,"code":"import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useTheme } from '@superset-ui/core';\n\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from '../../util/componentTypes';\n\nimport {\nGRID_MIN_COLUMN_COUNT,\nGRID_MIN_ROW_UNITS,\nGRID_BASE_UNIT,\nGRID_GUTTER_SIZE } from\n'../../util/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  focusedFilterScope: PropTypes.object,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0 };\n\n\n/**\n * Renders any styles necessary to highlight the chart's relationship to the focused filter.\n *\n * If there is no focused filter scope (i.e. most of the time), this will be just a pass-through.\n *\n * If the chart is outside the scope of the focused filter, dims the chart.\n *\n * If the chart is in the scope of the focused filter,\n * renders a highlight around the chart.\n *\n * If ChartHolder were a function component, this could be implemented as a hook instead.\n */\nconst FilterFocusHighlight = /*#__PURE__*/React.forwardRef(__signature__(\n({ chartId, focusedFilterScope, ...otherProps }, ref) => {var _context;\n  const theme = useTheme();\n  if (!focusedFilterScope) return ___EmotionJSX(\"div\", _extends({ ref: ref }, otherProps));\n\n  // we use local styles here instead of a conditionally-applied class,\n  // because adding any conditional class to this container\n  // causes performance issues in Chrome.\n\n  // default to the \"de-emphasized\" state\n  let styles = { opacity: 0.3, pointerEvents: 'none' };\n\n  if (\n  chartId === focusedFilterScope.chartId ||\n  _includesInstanceProperty(_context = getChartIdsInFilterScope({\n    filterScope: focusedFilterScope.scope })).call(_context,\n  chartId))\n  {\n    // apply the \"highlighted\" state if this chart\n    // contains a filter being focused, or is in scope of a focused filter.\n    styles = {\n      borderColor: theme.colors.primary.light2,\n      opacity: 1,\n      boxShadow: `0px 0px ${({ theme }) => theme.gridUnit * 2}px ${\n      theme.colors.primary.light2\n      }`,\n      pointerEvents: 'auto' };\n\n  }\n\n  // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n  return ___EmotionJSX(\"div\", _extends({ ref: ref, style: styles }, otherProps));\n}, \"useTheme{theme}\", () => [useTheme]));\n\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      ___EmotionJSX(\"style\", null,\n      `label[for=${columnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n           }`));\n\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId } =\n    getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n    directPathLastUpdated !== state.directPathLastUpdated &&\n    component.id === chartComponentId)\n    {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated };\n\n    }\n    return null;\n  }\n\n  constructor(props) {var _context2, _context3, _context4, _context5;\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0,\n      isFullSize: false };\n\n\n    this.handleChangeFocus = _bindInstanceProperty(_context2 = this.handleChangeFocus).call(_context2, this);\n    this.handleDeleteComponent = _bindInstanceProperty(_context3 = this.handleDeleteComponent).call(_context3, this);\n    this.handleUpdateSliceName = _bindInstanceProperty(_context4 = this.handleUpdateSliceName).call(_context4, this);\n    this.handleToggleFullSize = _bindInstanceProperty(_context5 = this.handleToggleFullSize).call(_context5, this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      _setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null }));\n\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName } } });\n\n\n\n  }\n\n  handleToggleFullSize() {\n    this.setState(prevState => ({ isFullSize: !prevState.isFullSize }));\n  }\n\n  render() {\n    const { isFocused } = this.state;\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId,\n      focusedFilterScope } =\n    this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n    parentComponent.type === COLUMN_TYPE ?\n    parentComponent.meta.width || GRID_MIN_COLUMN_COUNT :\n    component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    let chartWidth = 0;\n    let chartHeight = 0;\n\n    if (this.state.isFullSize) {\n      chartWidth = document.body.clientWidth - CHART_MARGIN;\n      chartHeight = document.body.clientHeight - CHART_MARGIN;\n    } else {\n      chartWidth = Math.floor(\n      widthMultiple * columnWidth +\n      (widthMultiple - 1) * GRID_GUTTER_SIZE -\n      CHART_MARGIN);\n\n      chartHeight = Math.floor(\n      component.meta.height * GRID_BASE_UNIT - CHART_MARGIN);\n\n    }\n\n    const { chartId } = component.meta;\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row',\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        disableDragDrop: isFocused,\n        editMode: editMode },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(ResizableContainer, {\n        id: component.id,\n        adjustableWidth: parentComponent.type === ROW_TYPE,\n        adjustableHeight: true,\n        widthStep: columnWidth,\n        widthMultiple: widthMultiple,\n        heightStep: GRID_BASE_UNIT,\n        heightMultiple: component.meta.height,\n        minWidthMultiple: GRID_MIN_COLUMN_COUNT,\n        minHeightMultiple: GRID_MIN_ROW_UNITS,\n        maxWidthMultiple: availableColumnCount + widthMultiple,\n        onResizeStart: onResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        editMode: editMode },\n\n      ___EmotionJSX(FilterFocusHighlight, {\n        chartId: chartId,\n        focusedFilterScope: focusedFilterScope,\n        ref: dragSourceRef,\n        \"data-test\": \"dashboard-component-chart-holder\",\n        className: cx(\n        'dashboard-component',\n        'dashboard-component-chart-holder',\n        this.state.outlinedComponentId ? 'fade-in' : 'fade-out',\n        this.state.isFullSize && 'full-size') },\n\n\n      !editMode &&\n      ___EmotionJSX(AnchorLink, {\n        anchorLinkId: component.id,\n        inFocus: !!this.state.outlinedComponentId }),\n\n\n      !!this.state.outlinedComponentId &&\n      ChartHolder.renderInFocusCSS(this.state.outlinedColumnName),\n      ___EmotionJSX(Chart, {\n        componentId: component.id,\n        id: component.meta.chartId,\n        dashboardId: dashboardId,\n        width: chartWidth,\n        height: chartHeight,\n        sliceName:\n        component.meta.sliceNameOverride ||\n        component.meta.sliceName ||\n        '',\n\n        updateSliceName: this.handleUpdateSliceName,\n        isComponentVisible: isComponentVisible,\n        handleToggleFullSize: this.handleToggleFullSize,\n        isFullSize: this.state.isFullSize }),\n\n      editMode &&\n      ___EmotionJSX(HoverMenu, { position: \"top\" },\n      ___EmotionJSX(\"div\", { \"data-test\": \"dashboard-delete-component-button\" },\n      ___EmotionJSX(DeleteComponentButton, {\n        onDelete: this.handleDeleteComponent })))),\n\n\n\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;const _default =\n\nChartHolder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CHART_MARGIN, \"CHART_MARGIN\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(FilterFocusHighlight, \"FilterFocusHighlight\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(ChartHolder, \"ChartHolder\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/ChartHolder.jsx"],"names":["React","PropTypes","cx","useTheme","getChartIdsInFilterScope","Chart","AnchorLink","DeleteComponentButton","DragDroppable","HoverMenu","ResizableContainer","getChartAndLabelComponentIdFromPath","componentShape","ROW_TYPE","COLUMN_TYPE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","GRID_BASE_UNIT","GRID_GUTTER_SIZE","CHART_MARGIN","propTypes","id","string","isRequired","parentId","dashboardId","number","component","parentComponent","index","depth","editMode","bool","directPathToChild","arrayOf","directPathLastUpdated","focusedFilterScope","object","availableColumnCount","columnWidth","onResizeStart","func","onResize","onResizeStop","deleteComponent","updateComponents","handleComponentDrop","defaultProps","FilterFocusHighlight","forwardRef","chartId","otherProps","ref","theme","styles","opacity","pointerEvents","filterScope","scope","borderColor","colors","primary","light2","boxShadow","gridUnit","ChartHolder","Component","renderInFocusCSS","columnName","getDerivedStateFromProps","props","state","label","chart","chartComponentId","outlinedComponentId","outlinedColumnName","constructor","isFocused","isFullSize","handleChangeFocus","handleDeleteComponent","handleUpdateSliceName","handleToggleFullSize","componentDidMount","hideOutline","componentDidUpdate","prevProps","prevState","timerKey","prevTimerKey","setState","nextFocus","nextName","meta","sliceNameOverride","render","isComponentVisible","widthMultiple","type","width","chartWidth","chartHeight","document","body","clientWidth","clientHeight","Math","floor","height","dropIndicatorProps","dragSourceRef","sliceName"],"mappings":"0mBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,SAASC,wBAAT,QAAyC,2CAAzC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;AACA,OAAOC,mCAAP,MAAgD,gDAAhD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,2BAAtC;;AAEA;AACEC,qBADF;AAEEC,kBAFF;AAGEC,cAHF;AAIEC,gBAJF;AAKO,sBALP,C;;AAOA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAEpB,SAAS,CAACqB,MAAV,CAAiBC,UADL;AAEhBC,EAAAA,QAAQ,EAAEvB,SAAS,CAACqB,MAAV,CAAiBC,UAFX;AAGhBE,EAAAA,WAAW,EAAExB,SAAS,CAACyB,MAAV,CAAiBH,UAHd;AAIhBI,EAAAA,SAAS,EAAEf,cAAc,CAACW,UAJV;AAKhBK,EAAAA,eAAe,EAAEhB,cAAc,CAACW,UALhB;AAMhBM,EAAAA,KAAK,EAAE5B,SAAS,CAACyB,MAAV,CAAiBH,UANR;AAOhBO,EAAAA,KAAK,EAAE7B,SAAS,CAACyB,MAAV,CAAiBH,UAPR;AAQhBQ,EAAAA,QAAQ,EAAE9B,SAAS,CAAC+B,IAAV,CAAeT,UART;AAShBU,EAAAA,iBAAiB,EAAEhC,SAAS,CAACiC,OAAV,CAAkBjC,SAAS,CAACqB,MAA5B,CATH;AAUhBa,EAAAA,qBAAqB,EAAElC,SAAS,CAACyB,MAVjB;AAWhBU,EAAAA,kBAAkB,EAAEnC,SAAS,CAACoC,MAXd;;AAahB;AACAC,EAAAA,oBAAoB,EAAErC,SAAS,CAACyB,MAAV,CAAiBH,UAdvB;AAehBgB,EAAAA,WAAW,EAAEtC,SAAS,CAACyB,MAAV,CAAiBH,UAfd;AAgBhBiB,EAAAA,aAAa,EAAEvC,SAAS,CAACwC,IAAV,CAAelB,UAhBd;AAiBhBmB,EAAAA,QAAQ,EAAEzC,SAAS,CAACwC,IAAV,CAAelB,UAjBT;AAkBhBoB,EAAAA,YAAY,EAAE1C,SAAS,CAACwC,IAAV,CAAelB,UAlBb;;AAoBhB;AACAqB,EAAAA,eAAe,EAAE3C,SAAS,CAACwC,IAAV,CAAelB,UArBhB;AAsBhBsB,EAAAA,gBAAgB,EAAE5C,SAAS,CAACwC,IAAV,CAAelB,UAtBjB;AAuBhBuB,EAAAA,mBAAmB,EAAE7C,SAAS,CAACwC,IAAV,CAAelB,UAvBpB,EAAlB;;;AA0BA,MAAMwB,YAAY,GAAG;AACnBd,EAAAA,iBAAiB,EAAE,EADA;AAEnBE,EAAAA,qBAAqB,EAAE,CAFJ,EAArB;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,oBAAoB,gBAAGhD,KAAK,CAACiD,UAAN;AAC3B,CAAC,EAAEC,OAAF,EAAWd,kBAAX,EAA+B,GAAGe,UAAlC,EAAD,EAAiDC,GAAjD,KAAyD;AACvD,QAAMC,KAAK,GAAGlD,QAAQ,EAAtB;AACA,MAAI,CAACiC,kBAAL,EAAyB,OAAO,gCAAK,GAAG,EAAEgB,GAAV,IAAmBD,UAAnB,EAAP;;AAEzB;AACA;AACA;;AAEA;AACA,MAAIG,MAAM,GAAG,EAAEC,OAAO,EAAE,GAAX,EAAgBC,aAAa,EAAE,MAA/B,EAAb;;AAEA;AACEN,EAAAA,OAAO,KAAKd,kBAAkB,CAACc,OAA/B;AACA,uCAAA9C,wBAAwB,CAAC;AACvBqD,IAAAA,WAAW,EAAErB,kBAAkB,CAACsB,KADT,EAAD,CAAxB;AAEYR,EAAAA,OAFZ,CAFF;AAKE;AACA;AACA;AACAI,IAAAA,MAAM,GAAG;AACPK,MAAAA,WAAW,EAAEN,KAAK,CAACO,MAAN,CAAaC,OAAb,CAAqBC,MAD3B;AAEPP,MAAAA,OAAO,EAAE,CAFF;AAGPQ,MAAAA,SAAS,EAAG,WAAU,CAAC,EAAEV,KAAF,EAAD,KAAeA,KAAK,CAACW,QAAN,GAAiB,CAAE;AACtDX,MAAAA,KAAK,CAACO,MAAN,CAAaC,OAAb,CAAqBC;AACtB,QALM;AAMPN,MAAAA,aAAa,EAAE,MANR,EAAT;;AAQD;;AAED;AACA,SAAO,gCAAK,GAAG,EAAEJ,GAAV,EAAe,KAAK,EAAEE,MAAtB,IAAkCH,UAAlC,EAAP;AACD,CAhC0B,4BAEXhD,QAFW,GAA7B;;;AAmCA,MAAM8D,WAAN,SAA0BjE,KAAK,CAACkE,SAAhC,CAA0C;AACxC,SAAOC,gBAAP,CAAwBC,UAAxB,EAAoC;AAClC;AACE;AACI,mBAAYA,UAAW;AACjC;AACA;AACA,aAJM,CADF;;;AAQD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuCC,KAAvC,EAA8C;AAC5C,UAAM,EAAE5C,SAAF,EAAaM,iBAAb,EAAgCE,qBAAhC,KAA0DmC,KAAhE;AACA,UAAM;AACJE,MAAAA,KAAK,EAAEJ,UADH;AAEJK,MAAAA,KAAK,EAAEC,gBAFH;AAGF/D,IAAAA,mCAAmC,CAACsB,iBAAD,CAHvC;;AAKA;AACEE,IAAAA,qBAAqB,KAAKoC,KAAK,CAACpC,qBAAhC;AACAR,IAAAA,SAAS,CAACN,EAAV,KAAiBqD,gBAFnB;AAGE;AACA,aAAO;AACLC,QAAAA,mBAAmB,EAAEhD,SAAS,CAACN,EAD1B;AAELuD,QAAAA,kBAAkB,EAAER,UAFf;AAGLjC,QAAAA,qBAHK,EAAP;;AAKD;AACD,WAAO,IAAP;AACD;;AAED0C,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXO,MAAAA,SAAS,EAAE,KADA;AAEXH,MAAAA,mBAAmB,EAAE,IAFV;AAGXC,MAAAA,kBAAkB,EAAE,IAHT;AAIXzC,MAAAA,qBAAqB,EAAE,CAJZ;AAKX4C,MAAAA,UAAU,EAAE,KALD,EAAb;;;AAQA,SAAKC,iBAAL,GAAyB,uCAAKA,iBAAL,kBAA4B,IAA5B,CAAzB;AACA,SAAKC,qBAAL,GAA6B,uCAAKA,qBAAL,kBAAgC,IAAhC,CAA7B;AACA,SAAKC,qBAAL,GAA6B,uCAAKA,qBAAL,kBAAgC,IAAhC,CAA7B;AACA,SAAKC,oBAAL,GAA4B,uCAAKA,oBAAL,kBAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL,CAAiB,EAAjB,EAAqB,KAAKd,KAA1B;AACD;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKH,WAAL,CAAiBG,SAAjB,EAA4B,KAAKjB,KAAjC;AACD;;AAEDc,EAAAA,WAAW,CAACG,SAAD,EAAYjB,KAAZ,EAAmB;AAC5B,UAAM,EAAEI,mBAAmB,EAAEc,QAAvB,KAAoClB,KAA1C;AACA,UAAM,EAAEI,mBAAmB,EAAEe,YAAvB,KAAwCF,SAA9C;;AAEA;AACA,QAAI,CAAC,CAACC,QAAF,IAAc,CAACC,YAAnB,EAAiC;AAC/B,kBAAW,MAAM;AACf,aAAKC,QAAL,CAAc,OAAO;AACnBhB,UAAAA,mBAAmB,EAAE,IADF;AAEnBC,UAAAA,kBAAkB,EAAE,IAFD,EAAP,CAAd;;AAID,OALD,EAKG,IALH;AAMD;AACF;;AAEDI,EAAAA,iBAAiB,CAACY,SAAD,EAAY;AAC3B,SAAKD,QAAL,CAAc,OAAO,EAAEb,SAAS,EAAEc,SAAb,EAAP,CAAd;AACD;;AAEDX,EAAAA,qBAAqB,GAAG;AACtB,UAAM,EAAErC,eAAF,EAAmBvB,EAAnB,EAAuBG,QAAvB,KAAoC,KAAK8C,KAA/C;AACA1B,IAAAA,eAAe,CAACvB,EAAD,EAAKG,QAAL,CAAf;AACD;;AAED0D,EAAAA,qBAAqB,CAACW,QAAD,EAAW;AAC9B,UAAM,EAAElE,SAAF,EAAakB,gBAAb,KAAkC,KAAKyB,KAA7C;AACAzB,IAAAA,gBAAgB,CAAC;AACf,OAAClB,SAAS,CAACN,EAAX,GAAgB;AACd,WAAGM,SADW;AAEdmE,QAAAA,IAAI,EAAE;AACJ,aAAGnE,SAAS,CAACmE,IADT;AAEJC,UAAAA,iBAAiB,EAAEF,QAFf,EAFQ,EADD,EAAD,CAAhB;;;;AASD;;AAEDV,EAAAA,oBAAoB,GAAG;AACrB,SAAKQ,QAAL,CAAcH,SAAS,KAAK,EAAET,UAAU,EAAE,CAACS,SAAS,CAACT,UAAzB,EAAL,CAAvB;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM,EAAElB,SAAF,KAAgB,KAAKP,KAA3B;AACA,UAAM;AACJ5C,MAAAA,SADI;AAEJC,MAAAA,eAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,KAJI;AAKJQ,MAAAA,oBALI;AAMJC,MAAAA,WANI;AAOJC,MAAAA,aAPI;AAQJE,MAAAA,QARI;AASJC,MAAAA,YATI;AAUJG,MAAAA,mBAVI;AAWJf,MAAAA,QAXI;AAYJkE,MAAAA,kBAZI;AAaJxE,MAAAA,WAbI;AAcJW,MAAAA,kBAdI;AAeF,SAAKkC,KAfT;;AAiBA;AACA,UAAM4B,aAAa;AACjBtE,IAAAA,eAAe,CAACuE,IAAhB,KAAyBrF,WAAzB;AACIc,IAAAA,eAAe,CAACkE,IAAhB,CAAqBM,KAArB,IAA8BrF,qBADlC;AAEIY,IAAAA,SAAS,CAACmE,IAAV,CAAeM,KAAf,IAAwBrF,qBAH9B;;AAKA,QAAIsF,UAAU,GAAG,CAAjB;AACA,QAAIC,WAAW,GAAG,CAAlB;;AAEA,QAAI,KAAK/B,KAAL,CAAWQ,UAAf,EAA2B;AACzBsB,MAAAA,UAAU,GAAGE,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BtF,YAAzC;AACAmF,MAAAA,WAAW,GAAGC,QAAQ,CAACC,IAAT,CAAcE,YAAd,GAA6BvF,YAA3C;AACD,KAHD,MAGO;AACLkF,MAAAA,UAAU,GAAGM,IAAI,CAACC,KAAL;AACXV,MAAAA,aAAa,GAAG3D,WAAhB;AACE,OAAC2D,aAAa,GAAG,CAAjB,IAAsBhF,gBADxB;AAEEC,MAAAA,YAHS,CAAb;;AAKAmF,MAAAA,WAAW,GAAGK,IAAI,CAACC,KAAL;AACZjF,MAAAA,SAAS,CAACmE,IAAV,CAAee,MAAf,GAAwB5F,cAAxB,GAAyCE,YAD7B,CAAd;;AAGD;;AAED,UAAM,EAAE+B,OAAF,KAAcvB,SAAS,CAACmE,IAA9B;;AAEA;AACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAEnE,SADb;AAEE,QAAA,eAAe,EAAEC,eAFnB;AAGE,QAAA,WAAW,EAAEA,eAAe,CAACuE,IAAhB,KAAyBtF,QAAzB,GAAoC,QAApC,GAA+C,KAH9D;AAIE,QAAA,KAAK,EAAEgB,KAJT;AAKE,QAAA,KAAK,EAAEC,KALT;AAME,QAAA,MAAM,EAAEgB,mBANV;AAOE,QAAA,eAAe,EAAEgC,SAPnB;AAQE,QAAA,QAAQ,EAAE/C,QARZ;;AAUG,OAAC,EAAE+E,kBAAF,EAAsBC,aAAtB,EAAD;AACC,oBAAC,kBAAD;AACE,QAAA,EAAE,EAAEpF,SAAS,CAACN,EADhB;AAEE,QAAA,eAAe,EAAEO,eAAe,CAACuE,IAAhB,KAAyBtF,QAF5C;AAGE,QAAA,gBAAgB,MAHlB;AAIE,QAAA,SAAS,EAAE0B,WAJb;AAKE,QAAA,aAAa,EAAE2D,aALjB;AAME,QAAA,UAAU,EAAEjF,cANd;AAOE,QAAA,cAAc,EAAEU,SAAS,CAACmE,IAAV,CAAee,MAPjC;AAQE,QAAA,gBAAgB,EAAE9F,qBARpB;AASE,QAAA,iBAAiB,EAAEC,kBATrB;AAUE,QAAA,gBAAgB,EAAEsB,oBAAoB,GAAG4D,aAV3C;AAWE,QAAA,aAAa,EAAE1D,aAXjB;AAYE,QAAA,QAAQ,EAAEE,QAZZ;AAaE,QAAA,YAAY,EAAEC,YAbhB;AAcE,QAAA,QAAQ,EAAEZ,QAdZ;;AAgBE,oBAAC,oBAAD;AACE,QAAA,OAAO,EAAEmB,OADX;AAEE,QAAA,kBAAkB,EAAEd,kBAFtB;AAGE,QAAA,GAAG,EAAE2E,aAHP;AAIE,qBAAU,kCAJZ;AAKE,QAAA,SAAS,EAAE7G,EAAE;AACX,6BADW;AAEX,0CAFW;AAGX,aAAKqE,KAAL,CAAWI,mBAAX,GAAiC,SAAjC,GAA6C,UAHlC;AAIX,aAAKJ,KAAL,CAAWQ,UAAX,IAAyB,WAJd,CALf;;;AAYG,OAAChD,QAAD;AACC,oBAAC,UAAD;AACE,QAAA,YAAY,EAAEJ,SAAS,CAACN,EAD1B;AAEE,QAAA,OAAO,EAAE,CAAC,CAAC,KAAKkD,KAAL,CAAWI,mBAFxB,GAbJ;;;AAkBG,OAAC,CAAC,KAAKJ,KAAL,CAAWI,mBAAb;AACCV,MAAAA,WAAW,CAACE,gBAAZ,CAA6B,KAAKI,KAAL,CAAWK,kBAAxC,CAnBJ;AAoBE,oBAAC,KAAD;AACE,QAAA,WAAW,EAAEjD,SAAS,CAACN,EADzB;AAEE,QAAA,EAAE,EAAEM,SAAS,CAACmE,IAAV,CAAe5C,OAFrB;AAGE,QAAA,WAAW,EAAEzB,WAHf;AAIE,QAAA,KAAK,EAAE4E,UAJT;AAKE,QAAA,MAAM,EAAEC,WALV;AAME,QAAA,SAAS;AACP3E,QAAAA,SAAS,CAACmE,IAAV,CAAeC,iBAAf;AACApE,QAAAA,SAAS,CAACmE,IAAV,CAAekB,SADf;AAEA,UATJ;;AAWE,QAAA,eAAe,EAAE,KAAK9B,qBAXxB;AAYE,QAAA,kBAAkB,EAAEe,kBAZtB;AAaE,QAAA,oBAAoB,EAAE,KAAKd,oBAb7B;AAcE,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWQ,UAdzB,GApBF;;AAoCGhD,MAAAA,QAAQ;AACP,oBAAC,SAAD,IAAW,QAAQ,EAAC,KAApB;AACE,6BAAK,aAAU,mCAAf;AACE,oBAAC,qBAAD;AACE,QAAA,QAAQ,EAAE,KAAKkD,qBADjB,GADF,CADF,CArCJ,CAhBF;;;;;;;AA+DG6B,MAAAA,kBAAkB,IAAI,qBAASA,kBAAT,CA/DzB,CAXJ,CADF;;;;;AAgFD,GA7NuC;AAAA;AAAA;AAgO1C7C,WAAW,CAAC7C,SAAZ,GAAwBA,SAAxB;AACA6C,WAAW,CAAClB,YAAZ,GAA2BA,YAA3B,C;;AAEekB,W,CAAf,wB,iLAnTM9C,Y,4HAEAC,S,yHA0BA2B,Y,4HAiBAC,oB,oIAmCAiB,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { useTheme } from '@superset-ui/core';\n\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport Chart from '../../containers/Chart';\nimport AnchorLink from '../../../components/AnchorLink';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport DragDroppable from '../dnd/DragDroppable';\nimport HoverMenu from '../menu/HoverMenu';\nimport ResizableContainer from '../resizable/ResizableContainer';\nimport getChartAndLabelComponentIdFromPath from '../../util/getChartAndLabelComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from '../../util/componentTypes';\n\nimport {\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n  GRID_BASE_UNIT,\n  GRID_GUTTER_SIZE,\n} from '../../util/constants';\n\nconst CHART_MARGIN = 32;\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  focusedFilterScope: PropTypes.object,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n};\n\n/**\n * Renders any styles necessary to highlight the chart's relationship to the focused filter.\n *\n * If there is no focused filter scope (i.e. most of the time), this will be just a pass-through.\n *\n * If the chart is outside the scope of the focused filter, dims the chart.\n *\n * If the chart is in the scope of the focused filter,\n * renders a highlight around the chart.\n *\n * If ChartHolder were a function component, this could be implemented as a hook instead.\n */\nconst FilterFocusHighlight = React.forwardRef(\n  ({ chartId, focusedFilterScope, ...otherProps }, ref) => {\n    const theme = useTheme();\n    if (!focusedFilterScope) return <div ref={ref} {...otherProps} />;\n\n    // we use local styles here instead of a conditionally-applied class,\n    // because adding any conditional class to this container\n    // causes performance issues in Chrome.\n\n    // default to the \"de-emphasized\" state\n    let styles = { opacity: 0.3, pointerEvents: 'none' };\n\n    if (\n      chartId === focusedFilterScope.chartId ||\n      getChartIdsInFilterScope({\n        filterScope: focusedFilterScope.scope,\n      }).includes(chartId)\n    ) {\n      // apply the \"highlighted\" state if this chart\n      // contains a filter being focused, or is in scope of a focused filter.\n      styles = {\n        borderColor: theme.colors.primary.light2,\n        opacity: 1,\n        boxShadow: `0px 0px ${({ theme }) => theme.gridUnit * 2}px ${\n          theme.colors.primary.light2\n        }`,\n        pointerEvents: 'auto',\n      };\n    }\n\n    // inline styles are used here due to a performance issue when adding/changing a class, which causes a reflow\n    return <div ref={ref} style={styles} {...otherProps} />;\n  },\n);\n\nclass ChartHolder extends React.Component {\n  static renderInFocusCSS(columnName) {\n    return (\n      <style>\n        {`label[for=${columnName}] + .Select .Select__control {\n                    border-color: #00736a;\n                    transition: border-color 1s ease-in-out;\n           }`}\n      </style>\n    );\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { component, directPathToChild, directPathLastUpdated } = props;\n    const {\n      label: columnName,\n      chart: chartComponentId,\n    } = getChartAndLabelComponentIdFromPath(directPathToChild);\n\n    if (\n      directPathLastUpdated !== state.directPathLastUpdated &&\n      component.id === chartComponentId\n    ) {\n      return {\n        outlinedComponentId: component.id,\n        outlinedColumnName: columnName,\n        directPathLastUpdated,\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      outlinedComponentId: null,\n      outlinedColumnName: null,\n      directPathLastUpdated: 0,\n      isFullSize: false,\n    };\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateSliceName = this.handleUpdateSliceName.bind(this);\n    this.handleToggleFullSize = this.handleToggleFullSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.hideOutline({}, this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.hideOutline(prevState, this.state);\n  }\n\n  hideOutline(prevState, state) {\n    const { outlinedComponentId: timerKey } = state;\n    const { outlinedComponentId: prevTimerKey } = prevState;\n\n    // because of timeout, there might be multiple charts showing outline\n    if (!!timerKey && !prevTimerKey) {\n      setTimeout(() => {\n        this.setState(() => ({\n          outlinedComponentId: null,\n          outlinedColumnName: null,\n        }));\n      }, 2000);\n    }\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: nextFocus }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleUpdateSliceName(nextName) {\n    const { component, updateComponents } = this.props;\n    updateComponents({\n      [component.id]: {\n        ...component,\n        meta: {\n          ...component.meta,\n          sliceNameOverride: nextName,\n        },\n      },\n    });\n  }\n\n  handleToggleFullSize() {\n    this.setState(prevState => ({ isFullSize: !prevState.isFullSize }));\n  }\n\n  render() {\n    const { isFocused } = this.state;\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      isComponentVisible,\n      dashboardId,\n      focusedFilterScope,\n    } = this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n      parentComponent.type === COLUMN_TYPE\n        ? parentComponent.meta.width || GRID_MIN_COLUMN_COUNT\n        : component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    let chartWidth = 0;\n    let chartHeight = 0;\n\n    if (this.state.isFullSize) {\n      chartWidth = document.body.clientWidth - CHART_MARGIN;\n      chartHeight = document.body.clientHeight - CHART_MARGIN;\n    } else {\n      chartWidth = Math.floor(\n        widthMultiple * columnWidth +\n          (widthMultiple - 1) * GRID_GUTTER_SIZE -\n          CHART_MARGIN,\n      );\n      chartHeight = Math.floor(\n        component.meta.height * GRID_BASE_UNIT - CHART_MARGIN,\n      );\n    }\n\n    const { chartId } = component.meta;\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        disableDragDrop={isFocused}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <ResizableContainer\n            id={component.id}\n            adjustableWidth={parentComponent.type === ROW_TYPE}\n            adjustableHeight\n            widthStep={columnWidth}\n            widthMultiple={widthMultiple}\n            heightStep={GRID_BASE_UNIT}\n            heightMultiple={component.meta.height}\n            minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n            minHeightMultiple={GRID_MIN_ROW_UNITS}\n            maxWidthMultiple={availableColumnCount + widthMultiple}\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            editMode={editMode}\n          >\n            <FilterFocusHighlight\n              chartId={chartId}\n              focusedFilterScope={focusedFilterScope}\n              ref={dragSourceRef}\n              data-test=\"dashboard-component-chart-holder\"\n              className={cx(\n                'dashboard-component',\n                'dashboard-component-chart-holder',\n                this.state.outlinedComponentId ? 'fade-in' : 'fade-out',\n                this.state.isFullSize && 'full-size',\n              )}\n            >\n              {!editMode && (\n                <AnchorLink\n                  anchorLinkId={component.id}\n                  inFocus={!!this.state.outlinedComponentId}\n                />\n              )}\n              {!!this.state.outlinedComponentId &&\n                ChartHolder.renderInFocusCSS(this.state.outlinedColumnName)}\n              <Chart\n                componentId={component.id}\n                id={component.meta.chartId}\n                dashboardId={dashboardId}\n                width={chartWidth}\n                height={chartHeight}\n                sliceName={\n                  component.meta.sliceNameOverride ||\n                  component.meta.sliceName ||\n                  ''\n                }\n                updateSliceName={this.handleUpdateSliceName}\n                isComponentVisible={isComponentVisible}\n                handleToggleFullSize={this.handleToggleFullSize}\n                isFullSize={this.state.isFullSize}\n              />\n              {editMode && (\n                <HoverMenu position=\"top\">\n                  <div data-test=\"dashboard-delete-component-button\">\n                    <DeleteComponentButton\n                      onDelete={this.handleDeleteComponent}\n                    />\n                  </div>\n                </HoverMenu>\n              )}\n            </FilterFocusHighlight>\n\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </ResizableContainer>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nChartHolder.propTypes = propTypes;\nChartHolder.defaultProps = defaultProps;\n\nexport default ChartHolder;\n"]},"metadata":{},"sourceType":"module"}