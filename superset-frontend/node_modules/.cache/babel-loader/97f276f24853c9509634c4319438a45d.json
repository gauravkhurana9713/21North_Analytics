{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _isFunction from \"lodash/isFunction\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Select } from 'src/components/Select';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport ControlHeader from '../ControlHeader';\n\nimport './ColorSchemeControl.less';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  description: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  clearable: PropTypes.bool,\n  default: PropTypes.string,\n  choices: PropTypes.oneOfType([\n  PropTypes.arrayOf(PropTypes.array),\n  PropTypes.func]),\n\n  schemes: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  isLinear: PropTypes.bool };\n\n\nconst defaultProps = {\n  choices: [],\n  schemes: {},\n  clearable: false,\n  onChange: () => {} };\n\n\nexport default class ColorSchemeControl extends React.PureComponent {\n  constructor(props) {var _context, _context2;\n    super(props);\n    this.onChange = _bindInstanceProperty(_context = this.onChange).call(_context, this);\n    this.renderOption = _bindInstanceProperty(_context2 = this.renderOption).call(_context2, this);\n  }\n\n  onChange(option) {\n    const optionValue = option ? option.value : null;\n    this.props.onChange(optionValue);\n  }\n\n  renderOption(key) {\n    const { isLinear } = this.props;\n    const currentScheme = this.schemes[key.value];\n\n    // For categorical scheme, display all the colors\n    // For sequential scheme, show 10 or interpolate to 10.\n    // Sequential schemes usually have at most 10 colors.\n    let colors = [];\n    if (currentScheme) {\n      colors = isLinear ? currentScheme.getColors(10) : currentScheme.colors;\n    }\n\n    return (\n      ___EmotionJSX(Tooltip, { id: `${currentScheme.id}-tooltip`, title: currentScheme.label },\n      ___EmotionJSX(\"ul\", { className: \"color-scheme-container\", \"data-test\": currentScheme.id },\n      _mapInstanceProperty(colors).call(colors, (color, i) =>\n      ___EmotionJSX(\"li\", {\n        key: `${currentScheme.id}-${i}`,\n        style: {\n          backgroundColor: color,\n          border: `1px solid ${color === 'white' ? 'black' : color}` } }, \"\\xA0\")))));\n\n\n\n\n\n\n\n\n  }\n\n  render() {var _context3;\n    const { schemes, choices } = this.props;\n    // save parsed schemes for later\n    this.schemes = _isFunction(schemes) ? schemes() : schemes;\n    const options = _mapInstanceProperty(_context3 = _isFunction(choices) ? choices() : choices).call(_context3,\n    ([value, label]) => {var _this$schemes$value;return {\n        value,\n        // use scheme label if available\n        label: ((_this$schemes$value = this.schemes[value]) == null ? void 0 : _this$schemes$value.label) || label };});\n\n\n    const selectProps = {\n      multi: false,\n      name: `select-${this.props.name}`,\n      placeholder: `Select (${options.length})`,\n      default: this.props.default,\n      options,\n      value: this.props.value,\n      autosize: false,\n      clearable: this.props.clearable,\n      onChange: this.onChange,\n      optionRenderer: this.renderOption,\n      valueRenderer: this.renderOption };\n\n    return (\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(ControlHeader, this.props),\n      ___EmotionJSX(Select, selectProps)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nColorSchemeControl.propTypes = propTypes;\nColorSchemeControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl.jsx\");reactHotLoader.register(ColorSchemeControl, \"ColorSchemeControl\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/ColorSchemeControl.jsx"],"names":["React","PropTypes","Select","Tooltip","ControlHeader","propTypes","description","string","label","isRequired","name","onChange","func","value","clearable","bool","default","choices","oneOfType","arrayOf","array","schemes","object","isLinear","defaultProps","ColorSchemeControl","PureComponent","constructor","props","renderOption","option","optionValue","key","currentScheme","colors","getColors","id","color","i","backgroundColor","border","render","options","selectProps","multi","placeholder","length","autosize","optionRenderer","valueRenderer"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFunction } from 'lodash';\nimport { Select } from 'src/components/Select';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport ControlHeader from '../ControlHeader';\n\nimport './ColorSchemeControl.less';\n\nconst propTypes = {\n  description: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  clearable: PropTypes.bool,\n  default: PropTypes.string,\n  choices: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.array),\n    PropTypes.func,\n  ]),\n  schemes: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  isLinear: PropTypes.bool,\n};\n\nconst defaultProps = {\n  choices: [],\n  schemes: {},\n  clearable: false,\n  onChange: () => {},\n};\n\nexport default class ColorSchemeControl extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.renderOption = this.renderOption.bind(this);\n  }\n\n  onChange(option) {\n    const optionValue = option ? option.value : null;\n    this.props.onChange(optionValue);\n  }\n\n  renderOption(key) {\n    const { isLinear } = this.props;\n    const currentScheme = this.schemes[key.value];\n\n    // For categorical scheme, display all the colors\n    // For sequential scheme, show 10 or interpolate to 10.\n    // Sequential schemes usually have at most 10 colors.\n    let colors = [];\n    if (currentScheme) {\n      colors = isLinear ? currentScheme.getColors(10) : currentScheme.colors;\n    }\n\n    return (\n      <Tooltip id={`${currentScheme.id}-tooltip`} title={currentScheme.label}>\n        <ul className=\"color-scheme-container\" data-test={currentScheme.id}>\n          {colors.map((color, i) => (\n            <li\n              key={`${currentScheme.id}-${i}`}\n              style={{\n                backgroundColor: color,\n                border: `1px solid ${color === 'white' ? 'black' : color}`,\n              }}\n            >\n              &nbsp;\n            </li>\n          ))}\n        </ul>\n      </Tooltip>\n    );\n  }\n\n  render() {\n    const { schemes, choices } = this.props;\n    // save parsed schemes for later\n    this.schemes = isFunction(schemes) ? schemes() : schemes;\n    const options = (isFunction(choices) ? choices() : choices).map(\n      ([value, label]) => ({\n        value,\n        // use scheme label if available\n        label: this.schemes[value]?.label || label,\n      }),\n    );\n    const selectProps = {\n      multi: false,\n      name: `select-${this.props.name}`,\n      placeholder: `Select (${options.length})`,\n      default: this.props.default,\n      options,\n      value: this.props.value,\n      autosize: false,\n      clearable: this.props.clearable,\n      onChange: this.onChange,\n      optionRenderer: this.renderOption,\n      valueRenderer: this.renderOption,\n    };\n    return (\n      <div>\n        <ControlHeader {...this.props} />\n        <Select {...selectProps} />\n      </div>\n    );\n  }\n}\n\nColorSchemeControl.propTypes = propTypes;\nColorSchemeControl.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}