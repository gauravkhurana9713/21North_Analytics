{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  margin-bottom: 0;\n`;\nconst IconWithColor = styled(Icon)`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\nconst HiddenInput = styled.input`\n  visibility: none;\n`;\nconst IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(__signature__(({ indeterminate, id, checked, onChange, title = '' }, ref) => {\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return ___EmotionJSX(CheckboxLabel, { title: title },\n  indeterminate && ___EmotionJSX(IconWithColor, { name: \"checkbox-half\" }),\n  !indeterminate && checked && ___EmotionJSX(IconWithColor, { name: \"checkbox-on\" }),\n  !indeterminate && !checked && ___EmotionJSX(Icon, { name: \"checkbox-off\" }),\n  ___EmotionJSX(HiddenInput, { className: \"hidden\", name: id, id: id, type: \"checkbox\", ref: resolvedRef, checked: checked, onChange: onChange }));\n\n}, \"useRef{defaultRef}\\nuseEffect{}\"));const _default =\nIndeterminateCheckbox;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CheckboxLabel, \"CheckboxLabel\", \"/app/superset-frontend/src/components/IndeterminateCheckbox.tsx\");reactHotLoader.register(IconWithColor, \"IconWithColor\", \"/app/superset-frontend/src/components/IndeterminateCheckbox.tsx\");reactHotLoader.register(HiddenInput, \"HiddenInput\", \"/app/superset-frontend/src/components/IndeterminateCheckbox.tsx\");reactHotLoader.register(IndeterminateCheckbox, \"IndeterminateCheckbox\", \"/app/superset-frontend/src/components/IndeterminateCheckbox.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/IndeterminateCheckbox.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/IndeterminateCheckbox.tsx"],"names":[],"mappings":"wSAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,IAAP,MAAiB,qBAAjB,C;AAUA,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK;;;AAGjC,CAHD;AAKA,MAAM,aAAa,GAAG,MAAM,CAAC,IAAD,CAAM;WACvB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,KAAK;AACnD,CAFD;AAIA,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK;;AAE/B,CAFD;AAIA,MAAM,qBAAqB,gBAAG,KAAK,CAAC,UAAN,eAC5B,CACE,EACE,aADF,EAEE,EAFF,EAGE,OAHF,EAIE,QAJF,EAKE,KAAK,GAAG,EALV,EADF,EAQE,GARF,KASI;AACF,QAAM,UAAU,GAAG,KAAK,CAAC,MAAN,EAAnB;AACA,QAAM,WAAW,GAAG,GAAG,IAAI,UAA3B;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,IAAA,WAAW,CAAC,OAAZ,CAAoB,aAApB,GAAoC,aAApC;AACD,GAFD,EAEG,CAAC,WAAD,EAAc,aAAd,CAFH;AAIA,SACE,cAAC,aAAD,IAAe,KAAK,EAAE,KAAtB;AACG,EAAA,aAAa,IAAI,cAAC,aAAD,IAAe,IAAI,EAAC,eAApB,GADpB;AAEG,GAAC,aAAD,IAAkB,OAAlB,IAA6B,cAAC,aAAD,IAAe,IAAI,EAAC,aAApB,GAFhC;AAGG,GAAC,aAAD,IAAkB,CAAC,OAAnB,IAA8B,cAAC,IAAD,IAAM,IAAI,EAAC,cAAX,GAHjC;AAIE,gBAAC,WAAD,IACE,SAAS,EAAC,QADZ,EAEE,IAAI,EAAE,EAFR,EAGE,EAAE,EAAE,EAHN,EAIE,IAAI,EAAC,UAJP,EAKE,GAAG,EAAE,WALP,EAME,OAAO,EAAE,OANX,EAOE,QAAQ,EAAE,QAPZ,GAJF,CADF;;AAgBD,CAlC2B,qCAA9B,C;AAqCe,qB,CAAf,wB,iLAlDM,a,8GAKA,a,8GAIA,W,4GAIA,qB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport Icon from 'src/components/Icon';\n\ninterface IndeterminateCheckboxProps {\n  indeterminate: boolean;\n  id: string;\n  checked: boolean;\n  onChange: React.EventHandler<React.SyntheticEvent<HTMLInputElement>>;\n  title?: string;\n}\n\nconst CheckboxLabel = styled.label`\n  cursor: pointer;\n  margin-bottom: 0;\n`;\n\nconst IconWithColor = styled(Icon)`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n`;\n\nconst HiddenInput = styled.input`\n  visibility: none;\n`;\n\nconst IndeterminateCheckbox = React.forwardRef(\n  (\n    {\n      indeterminate,\n      id,\n      checked,\n      onChange,\n      title = '',\n    }: IndeterminateCheckboxProps,\n    ref: React.MutableRefObject<any>,\n  ) => {\n    const defaultRef = React.useRef<HTMLInputElement>();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <CheckboxLabel title={title}>\n        {indeterminate && <IconWithColor name=\"checkbox-half\" />}\n        {!indeterminate && checked && <IconWithColor name=\"checkbox-on\" />}\n        {!indeterminate && !checked && <Icon name=\"checkbox-off\" />}\n        <HiddenInput\n          className=\"hidden\"\n          name={id}\n          id={id}\n          type=\"checkbox\"\n          ref={resolvedRef}\n          checked={checked}\n          onChange={onChange}\n        />\n      </CheckboxLabel>\n    );\n  },\n);\n\nexport default IndeterminateCheckbox;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}