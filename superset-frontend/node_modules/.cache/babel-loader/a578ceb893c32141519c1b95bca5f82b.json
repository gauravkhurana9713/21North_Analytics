{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {\nBehavior,\ngetChartMetadataRegistry,\nstyled,\nt } from\n'@superset-ui/core';\nimport { Menu, NoAnimationDropdown } from 'src/common/components';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from '../../utils/downloadAsImage';\nimport getDashboardUrl from '../util/getDashboardUrl';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\nimport CrossFilterScopingModal from './CrossFilterScopingModal/CrossFilterScopingModal';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  slice: PropTypes.object.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  isCached: PropTypes.arrayOf(PropTypes.bool),\n  cachedDttm: PropTypes.arrayOf(PropTypes.string),\n  isExpanded: PropTypes.bool,\n  updatedDttm: PropTypes.number,\n  supersetCanExplore: PropTypes.bool,\n  supersetCanCSV: PropTypes.bool,\n  sliceCanEdit: PropTypes.bool,\n  toggleExpandSlice: PropTypes.func,\n  forceRefresh: PropTypes.func,\n  exploreChart: PropTypes.func,\n  exportCSV: PropTypes.func };\n\n\nconst defaultProps = {\n  forceRefresh: () => ({}),\n  toggleExpandSlice: () => ({}),\n  exploreChart: () => ({}),\n  exportCSV: () => ({}),\n  cachedDttm: [],\n  updatedDttm: null,\n  isCached: [],\n  isExpanded: false,\n  supersetCanExplore: false,\n  supersetCanCSV: false,\n  sliceCanEdit: false };\n\n\nconst MENU_KEYS = {\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n  FORCE_REFRESH: 'force_refresh',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  RESIZE_LABEL: 'resize_label',\n  SHARE_CHART: 'share_chart',\n  DOWNLOAD_AS_IMAGE: 'download_as_image' };\n\n\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: ${({ theme }) => theme.typography.sizes.m * 1.5}px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SCREENSHOT_NODE_SELECTOR = '.dashboard-component-chart-holder';\n\nconst VerticalDotsTrigger = () =>\n___EmotionJSX(VerticalDotsContainer, null,\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }),\n___EmotionJSX(\"span\", { className: \"dot\" }));\n\n\n\nclass SliceHeaderControls extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.toggleControls = _bindInstanceProperty(_context = this.toggleControls).call(_context, this);\n    this.refreshChart = _bindInstanceProperty(_context2 = this.refreshChart).call(_context2, this);\n    this.handleMenuClick = _bindInstanceProperty(_context3 = this.handleMenuClick).call(_context3, this);\n\n    this.state = {\n      showControls: false,\n      showCrossFilterScopingModal: false };\n\n  }\n\n  refreshChart() {\n    if (this.props.updatedDttm) {\n      this.props.forceRefresh(\n      _sliceInstanceProperty(this.props).slice_id,\n      this.props.dashboardId);\n\n    }\n  }\n\n  toggleControls() {\n    this.setState(prevState => ({\n      showControls: !prevState.showControls }));\n\n  }\n\n  handleMenuClick({ key, domEvent }) {\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        this.refreshChart();\n        break;\n      case MENU_KEYS.CROSS_FILTER_SCOPING:\n        this.setState({ showCrossFilterScopingModal: true });\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        this.props.toggleExpandSlice(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        this.props.exploreChart(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        this.props.exportCSV(_sliceInstanceProperty(this.props).slice_id);\n        break;\n      case MENU_KEYS.RESIZE_LABEL:\n        this.props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:{\n          // menu closes with a delay, we need to hide it manually,\n          // so that we don't capture it on the screenshot\n          const menu = document.querySelector(\n          '.ant-dropdown:not(.ant-dropdown-hidden)');\n\n          menu.style.visibility = 'hidden';\n          downloadAsImage(\n          SCREENSHOT_NODE_SELECTOR,\n          _sliceInstanceProperty(this.props).slice_name)(\n          domEvent).then(() => {\n            menu.style.visibility = 'visible';\n          });\n          break;\n        }\n      default:\n        break;}\n\n  }\n\n  render() {var _context4, _context5;\n    const {\n      slice,\n      isCached,\n      cachedDttm,\n      updatedDttm,\n      componentId,\n      addSuccessToast,\n      addDangerToast,\n      isFullSize } =\n    this.props;\n    const crossFilterItems = getChartMetadataRegistry().items;\n    const isCrossFilter = _findInstanceProperty(_context4 = _filterInstanceProperty(_context5 = _Object$entries(crossFilterItems)\n    // @ts-ignore\n    ).call(_context5, ([, { value }]) => {var _value$behaviors;return (_value$behaviors =\n      value.behaviors) == null ? void 0 : _includesInstanceProperty(_value$behaviors).call(_value$behaviors, Behavior.CROSS_FILTER);})).call(_context4,\n\n    ([key]) => key === slice.viz_type);\n\n    const cachedWhen = _mapInstanceProperty(cachedDttm).call(cachedDttm, (itemCachedDttm) =>\n    moment.utc(itemCachedDttm).fromNow());\n\n    const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n    const getCachedTitle = itemCached => {\n      if (itemCached) {\n        return t('Cached %s', cachedWhen);\n      }\n      if (updatedWhen) {\n        return t('Fetched %s', updatedWhen);\n      }\n      return '';\n    };\n    const refreshTooltipData = _mapInstanceProperty(isCached).call(isCached, getCachedTitle) || '';\n    // If all queries have same cache time we can unit them to one\n    let refreshTooltip = [...new _Set(refreshTooltipData)];\n    refreshTooltip = _mapInstanceProperty(refreshTooltip).call(refreshTooltip, (item, index) =>\n    ___EmotionJSX(\"div\", { key: `tooltip-${index}` },\n    refreshTooltip.length > 1 ?\n    `${t('Query')} ${index + 1}: ${item}` :\n    item));\n\n\n    const resizeLabel = isFullSize ? t('Minimize chart') : t('Maximize chart');\n    const menu =\n    ___EmotionJSX(Menu, {\n      onClick: this.handleMenuClick,\n      selectable: false,\n      \"data-test\": `slice_${slice.slice_id}-menu` },\n\n    ___EmotionJSX(Menu.Item, {\n      key: MENU_KEYS.FORCE_REFRESH,\n      disabled: this.props.chartStatus === 'loading',\n      style: { height: 'auto', lineHeight: 'initial' },\n      \"data-test\": \"refresh-chart-menu-item\" },\n\n    t('Force refresh'),\n    ___EmotionJSX(RefreshTooltip, { \"data-test\": \"dashboard-slice-refresh-tooltip\" },\n    refreshTooltip)),\n\n\n\n    ___EmotionJSX(Menu.Divider, null),\n\n    slice.description &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.TOGGLE_CHART_DESCRIPTION },\n    t('Toggle chart description')),\n\n\n\n    this.props.supersetCanExplore &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPLORE_CHART },\n    t('View chart in Explore')),\n\n\n\n    ___EmotionJSX(ShareMenuItems, {\n      url: getDashboardUrl(\n      window.location.pathname,\n      getActiveFilters(),\n      componentId),\n\n      copyMenuItemTitle: t('Copy chart URL'),\n      emailMenuItemTitle: t('Share chart by email'),\n      emailSubject: t('Superset chart'),\n      addSuccessToast: addSuccessToast,\n      addDangerToast: addDangerToast }),\n\n\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.RESIZE_LABEL }, resizeLabel),\n\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.DOWNLOAD_AS_IMAGE },\n    t('Download as image')),\n\n\n    this.props.supersetCanCSV &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EXPORT_CSV }, t('Export CSV')),\n\n    isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n    isCrossFilter &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.CROSS_FILTER_SCOPING },\n    t('Cross-filter scoping')));\n\n\n\n\n\n    return (\n      ___EmotionJSX(React.Fragment, null,\n      ___EmotionJSX(CrossFilterScopingModal, {\n        chartId: slice.slice_id,\n        isOpen: this.state.showCrossFilterScopingModal,\n        onClose: () => this.setState({ showCrossFilterScopingModal: false }) }),\n\n      ___EmotionJSX(NoAnimationDropdown, {\n        overlay: menu,\n        trigger: ['click'],\n        placement: \"bottomRight\",\n        dropdownAlign: {\n          offset: [-40, 4] },\n\n        getPopupContainer: (triggerNode) =>\n        triggerNode.closest(SCREENSHOT_NODE_SELECTOR) },\n\n\n      ___EmotionJSX(\"span\", { id: `slice_${slice.slice_id}-controls`, role: \"button\" },\n      ___EmotionJSX(VerticalDotsTrigger, null)))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSliceHeaderControls.propTypes = propTypes;\nSliceHeaderControls.defaultProps = defaultProps;const _default =\n\nSliceHeaderControls;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(MENU_KEYS, \"MENU_KEYS\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(VerticalDotsContainer, \"VerticalDotsContainer\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(RefreshTooltip, \"RefreshTooltip\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(SCREENSHOT_NODE_SELECTOR, \"SCREENSHOT_NODE_SELECTOR\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(VerticalDotsTrigger, \"VerticalDotsTrigger\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(SliceHeaderControls, \"SliceHeaderControls\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/SliceHeaderControls.jsx"],"names":["React","PropTypes","moment","Behavior","getChartMetadataRegistry","styled","t","Menu","NoAnimationDropdown","ShareMenuItems","downloadAsImage","getDashboardUrl","getActiveFilters","FeatureFlag","isFeatureEnabled","CrossFilterScopingModal","propTypes","slice","object","isRequired","componentId","string","dashboardId","number","addDangerToast","func","isCached","arrayOf","bool","cachedDttm","isExpanded","updatedDttm","supersetCanExplore","supersetCanCSV","sliceCanEdit","toggleExpandSlice","forceRefresh","exploreChart","exportCSV","defaultProps","MENU_KEYS","CROSS_FILTER_SCOPING","FORCE_REFRESH","TOGGLE_CHART_DESCRIPTION","EXPLORE_CHART","EXPORT_CSV","RESIZE_LABEL","SHARE_CHART","DOWNLOAD_AS_IMAGE","VerticalDotsContainer","div","theme","gridUnit","RefreshTooltip","colors","grayscale","base","typography","sizes","m","SCREENSHOT_NODE_SELECTOR","VerticalDotsTrigger","SliceHeaderControls","PureComponent","constructor","props","toggleControls","refreshChart","handleMenuClick","state","showControls","showCrossFilterScopingModal","slice_id","setState","prevState","key","domEvent","handleToggleFullSize","menu","document","querySelector","style","visibility","slice_name","then","render","addSuccessToast","isFullSize","crossFilterItems","items","isCrossFilter","value","behaviors","CROSS_FILTER","viz_type","cachedWhen","itemCachedDttm","utc","fromNow","updatedWhen","getCachedTitle","itemCached","refreshTooltipData","refreshTooltip","item","index","length","resizeLabel","chartStatus","height","lineHeight","description","window","location","pathname","DASHBOARD_CROSS_FILTERS","offset","triggerNode","closest"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {\n  Behavior,\n  getChartMetadataRegistry,\n  styled,\n  t,\n} from '@superset-ui/core';\nimport { Menu, NoAnimationDropdown } from 'src/common/components';\nimport ShareMenuItems from 'src/dashboard/components/menu/ShareMenuItems';\nimport downloadAsImage from '../../utils/downloadAsImage';\nimport getDashboardUrl from '../util/getDashboardUrl';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\nimport CrossFilterScopingModal from './CrossFilterScopingModal/CrossFilterScopingModal';\n\nconst propTypes = {\n  slice: PropTypes.object.isRequired,\n  componentId: PropTypes.string.isRequired,\n  dashboardId: PropTypes.number.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  isCached: PropTypes.arrayOf(PropTypes.bool),\n  cachedDttm: PropTypes.arrayOf(PropTypes.string),\n  isExpanded: PropTypes.bool,\n  updatedDttm: PropTypes.number,\n  supersetCanExplore: PropTypes.bool,\n  supersetCanCSV: PropTypes.bool,\n  sliceCanEdit: PropTypes.bool,\n  toggleExpandSlice: PropTypes.func,\n  forceRefresh: PropTypes.func,\n  exploreChart: PropTypes.func,\n  exportCSV: PropTypes.func,\n};\n\nconst defaultProps = {\n  forceRefresh: () => ({}),\n  toggleExpandSlice: () => ({}),\n  exploreChart: () => ({}),\n  exportCSV: () => ({}),\n  cachedDttm: [],\n  updatedDttm: null,\n  isCached: [],\n  isExpanded: false,\n  supersetCanExplore: false,\n  supersetCanCSV: false,\n  sliceCanEdit: false,\n};\n\nconst MENU_KEYS = {\n  CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n  FORCE_REFRESH: 'force_refresh',\n  TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n  EXPLORE_CHART: 'explore_chart',\n  EXPORT_CSV: 'export_csv',\n  RESIZE_LABEL: 'resize_label',\n  SHARE_CHART: 'share_chart',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n};\n\nconst VerticalDotsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit / 4}px\n    ${({ theme }) => theme.gridUnit * 1.5}px;\n\n  .dot {\n    display: block;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst RefreshTooltip = styled.div`\n  height: auto;\n  margin: ${({ theme }) => theme.gridUnit}px 0;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  line-height: ${({ theme }) => theme.typography.sizes.m * 1.5}px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\nconst SCREENSHOT_NODE_SELECTOR = '.dashboard-component-chart-holder';\n\nconst VerticalDotsTrigger = () => (\n  <VerticalDotsContainer>\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n    <span className=\"dot\" />\n  </VerticalDotsContainer>\n);\n\nclass SliceHeaderControls extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.toggleControls = this.toggleControls.bind(this);\n    this.refreshChart = this.refreshChart.bind(this);\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n\n    this.state = {\n      showControls: false,\n      showCrossFilterScopingModal: false,\n    };\n  }\n\n  refreshChart() {\n    if (this.props.updatedDttm) {\n      this.props.forceRefresh(\n        this.props.slice.slice_id,\n        this.props.dashboardId,\n      );\n    }\n  }\n\n  toggleControls() {\n    this.setState(prevState => ({\n      showControls: !prevState.showControls,\n    }));\n  }\n\n  handleMenuClick({ key, domEvent }) {\n    switch (key) {\n      case MENU_KEYS.FORCE_REFRESH:\n        this.refreshChart();\n        break;\n      case MENU_KEYS.CROSS_FILTER_SCOPING:\n        this.setState({ showCrossFilterScopingModal: true });\n        break;\n      case MENU_KEYS.TOGGLE_CHART_DESCRIPTION:\n        this.props.toggleExpandSlice(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPLORE_CHART:\n        this.props.exploreChart(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.EXPORT_CSV:\n        this.props.exportCSV(this.props.slice.slice_id);\n        break;\n      case MENU_KEYS.RESIZE_LABEL:\n        this.props.handleToggleFullSize();\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE: {\n        // menu closes with a delay, we need to hide it manually,\n        // so that we don't capture it on the screenshot\n        const menu = document.querySelector(\n          '.ant-dropdown:not(.ant-dropdown-hidden)',\n        );\n        menu.style.visibility = 'hidden';\n        downloadAsImage(\n          SCREENSHOT_NODE_SELECTOR,\n          this.props.slice.slice_name,\n        )(domEvent).then(() => {\n          menu.style.visibility = 'visible';\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      slice,\n      isCached,\n      cachedDttm,\n      updatedDttm,\n      componentId,\n      addSuccessToast,\n      addDangerToast,\n      isFullSize,\n    } = this.props;\n    const crossFilterItems = getChartMetadataRegistry().items;\n    const isCrossFilter = Object.entries(crossFilterItems)\n      // @ts-ignore\n      .filter(([, { value }]) =>\n        value.behaviors?.includes(Behavior.CROSS_FILTER),\n      )\n      .find(([key]) => key === slice.viz_type);\n\n    const cachedWhen = cachedDttm.map(itemCachedDttm =>\n      moment.utc(itemCachedDttm).fromNow(),\n    );\n    const updatedWhen = updatedDttm ? moment.utc(updatedDttm).fromNow() : '';\n    const getCachedTitle = itemCached => {\n      if (itemCached) {\n        return t('Cached %s', cachedWhen);\n      }\n      if (updatedWhen) {\n        return t('Fetched %s', updatedWhen);\n      }\n      return '';\n    };\n    const refreshTooltipData = isCached.map(getCachedTitle) || '';\n    // If all queries have same cache time we can unit them to one\n    let refreshTooltip = [...new Set(refreshTooltipData)];\n    refreshTooltip = refreshTooltip.map((item, index) => (\n      <div key={`tooltip-${index}`}>\n        {refreshTooltip.length > 1\n          ? `${t('Query')} ${index + 1}: ${item}`\n          : item}\n      </div>\n    ));\n    const resizeLabel = isFullSize ? t('Minimize chart') : t('Maximize chart');\n    const menu = (\n      <Menu\n        onClick={this.handleMenuClick}\n        selectable={false}\n        data-test={`slice_${slice.slice_id}-menu`}\n      >\n        <Menu.Item\n          key={MENU_KEYS.FORCE_REFRESH}\n          disabled={this.props.chartStatus === 'loading'}\n          style={{ height: 'auto', lineHeight: 'initial' }}\n          data-test=\"refresh-chart-menu-item\"\n        >\n          {t('Force refresh')}\n          <RefreshTooltip data-test=\"dashboard-slice-refresh-tooltip\">\n            {refreshTooltip}\n          </RefreshTooltip>\n        </Menu.Item>\n\n        <Menu.Divider />\n\n        {slice.description && (\n          <Menu.Item key={MENU_KEYS.TOGGLE_CHART_DESCRIPTION}>\n            {t('Toggle chart description')}\n          </Menu.Item>\n        )}\n\n        {this.props.supersetCanExplore && (\n          <Menu.Item key={MENU_KEYS.EXPLORE_CHART}>\n            {t('View chart in Explore')}\n          </Menu.Item>\n        )}\n\n        <ShareMenuItems\n          url={getDashboardUrl(\n            window.location.pathname,\n            getActiveFilters(),\n            componentId,\n          )}\n          copyMenuItemTitle={t('Copy chart URL')}\n          emailMenuItemTitle={t('Share chart by email')}\n          emailSubject={t('Superset chart')}\n          addSuccessToast={addSuccessToast}\n          addDangerToast={addDangerToast}\n        />\n\n        <Menu.Item key={MENU_KEYS.RESIZE_LABEL}>{resizeLabel}</Menu.Item>\n\n        <Menu.Item key={MENU_KEYS.DOWNLOAD_AS_IMAGE}>\n          {t('Download as image')}\n        </Menu.Item>\n\n        {this.props.supersetCanCSV && (\n          <Menu.Item key={MENU_KEYS.EXPORT_CSV}>{t('Export CSV')}</Menu.Item>\n        )}\n        {isFeatureEnabled(FeatureFlag.DASHBOARD_CROSS_FILTERS) &&\n          isCrossFilter && (\n            <Menu.Item key={MENU_KEYS.CROSS_FILTER_SCOPING}>\n              {t('Cross-filter scoping')}\n            </Menu.Item>\n          )}\n      </Menu>\n    );\n\n    return (\n      <>\n        <CrossFilterScopingModal\n          chartId={slice.slice_id}\n          isOpen={this.state.showCrossFilterScopingModal}\n          onClose={() => this.setState({ showCrossFilterScopingModal: false })}\n        />\n        <NoAnimationDropdown\n          overlay={menu}\n          trigger={['click']}\n          placement=\"bottomRight\"\n          dropdownAlign={{\n            offset: [-40, 4],\n          }}\n          getPopupContainer={triggerNode =>\n            triggerNode.closest(SCREENSHOT_NODE_SELECTOR)\n          }\n        >\n          <span id={`slice_${slice.slice_id}-controls`} role=\"button\">\n            <VerticalDotsTrigger />\n          </span>\n        </NoAnimationDropdown>\n      </>\n    );\n  }\n}\n\nSliceHeaderControls.propTypes = propTypes;\nSliceHeaderControls.defaultProps = defaultProps;\n\nexport default SliceHeaderControls;\n"]},"metadata":{},"sourceType":"module"}