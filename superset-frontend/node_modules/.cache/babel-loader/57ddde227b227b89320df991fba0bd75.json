{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _includesInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/includes\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createMultiFormatter, Behavior, ensureIsArray, t, tn } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport { StyledSelect, Styles } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst { Option } = Select;\nconst timeFormatter = createMultiFormatter({\n  id: 'smart_date_verbose',\n  label: 'Adaptive temporal formatter',\n  formats: {\n    millisecond: '%Y-%m-%d %H:%M:%S.%L',\n    second: '%Y-%m-%d %H:%M:%S',\n    minute: '%Y-%m-%d %H:%M',\n    hour: '%Y-%m-%d %H:%M:%M',\n    day: '%Y-%m-%d',\n    week: '%Y-%m-%d',\n    month: '%Y-%m-%d',\n    year: '%Y-%m-%d' } });\n\n\nexport default function PluginFilterSelect(props) {var _context;\n  const { coltypeMap, data, formData, height, width, behaviors, setDataMask } = props;\n  const { defaultValue, enableEmptyFilter, multiSelect, showSearch, currentValue, inverseSelection, inputRef } = formData;\n  const [values, setValues] = useState(defaultValue != null ? defaultValue : []);\n  const groupby = ensureIsArray(formData.groupby);\n  const [col] = groupby;\n  const datatype = coltypeMap[col];\n  const labelFormatter = getDataRecordFormatter({\n    timeFormatter });\n\n  const handleChange = value => {\n    const resultValue = ensureIsArray(value);\n    setValues(resultValue);\n    const emptyFilter = enableEmptyFilter && !inverseSelection && (resultValue == null ? void 0 : resultValue.length) === 0;\n    const dataMask = {\n      extraFormData: getSelectExtraFormData(col, resultValue, emptyFilter, inverseSelection),\n      currentState: {\n        value: resultValue.length ? resultValue : null } };\n\n\n    const dataMaskObject = {};\n    if (_includesInstanceProperty(behaviors).call(behaviors, Behavior.NATIVE_FILTER)) {\n      dataMaskObject.nativeFilters = dataMask;\n    }\n    if (_includesInstanceProperty(behaviors).call(behaviors, Behavior.CROSS_FILTER)) {\n      dataMaskObject.crossFilters = dataMask;\n    }\n    setDataMask(dataMaskObject);\n  };\n  useEffect(() => {\n    handleChange(currentValue != null ? currentValue : []);\n  }, [\n  _JSON$stringify(currentValue),\n  multiSelect,\n  enableEmptyFilter,\n  inverseSelection]);\n\n  useEffect(() => {\n    handleChange(defaultValue != null ? defaultValue : []);\n  }, [\n  _JSON$stringify(defaultValue),\n  multiSelect,\n  enableEmptyFilter,\n  inverseSelection]);\n\n  const placeholderText = (data || []).length === 0 ?\n  t('No data') :\n  tn('%s option', '%s options', data.length, data.length);\n  return ___EmotionJSX(Styles, { height: height, width: width },\n  ___EmotionJSX(StyledSelect, { allowClear: true\n    // @ts-ignore\n    , value: values, showSearch: showSearch, mode: multiSelect ? 'multiple' : undefined, placeholder: placeholderText\n    // @ts-ignore\n    , onChange: handleChange, ref: inputRef },\n  _mapInstanceProperty(_context = data || []).call(_context, row => {\n    const [value] = _mapInstanceProperty(groupby).call(groupby, col => row[col]);\n    return (\n      // @ts-ignore\n      ___EmotionJSX(Option, { key: `${value}`, value: value },\n      labelFormatter(value, datatype)));\n\n  })));\n\n\n}__signature__(PluginFilterSelect, \"useState{[values, setValues](defaultValue ?? [])}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Option, \"Option\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(timeFormatter, \"timeFormatter\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");reactHotLoader.register(PluginFilterSelect, \"PluginFilterSelect\", \"/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Select/SelectFilterPlugin.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  createMultiFormatter,\n  Behavior,\n  DataMask,\n  ensureIsArray,\n  GenericDataType,\n  t,\n  tn,\n} from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport { PluginFilterSelectProps } from './types';\nimport { StyledSelect, Styles } from '../common';\nimport { getDataRecordFormatter, getSelectExtraFormData } from '../../utils';\n\nconst { Option } = Select;\n\nconst timeFormatter = createMultiFormatter({\n  id: 'smart_date_verbose',\n  label: 'Adaptive temporal formatter',\n  formats: {\n    millisecond: '%Y-%m-%d %H:%M:%S.%L',\n    second: '%Y-%m-%d %H:%M:%S',\n    minute: '%Y-%m-%d %H:%M',\n    hour: '%Y-%m-%d %H:%M:%M',\n    day: '%Y-%m-%d',\n    week: '%Y-%m-%d',\n    month: '%Y-%m-%d',\n    year: '%Y-%m-%d',\n  },\n});\n\nexport default function PluginFilterSelect(props: PluginFilterSelectProps) {\n  const {\n    coltypeMap,\n    data,\n    formData,\n    height,\n    width,\n    behaviors,\n    setDataMask,\n  } = props;\n  const {\n    defaultValue,\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    currentValue,\n    inverseSelection,\n    inputRef,\n  } = formData;\n\n  const [values, setValues] = useState<(string | number | boolean)[]>(\n    defaultValue ?? [],\n  );\n  const groupby = ensureIsArray<string>(formData.groupby);\n\n  const [col] = groupby;\n  const datatype: GenericDataType = coltypeMap[col];\n  const labelFormatter = getDataRecordFormatter({\n    timeFormatter,\n  });\n\n  const handleChange = (\n    value?: (number | string)[] | number | string | null,\n  ) => {\n    const resultValue: (number | string)[] = ensureIsArray<number | string>(\n      value,\n    );\n    setValues(resultValue);\n\n    const emptyFilter =\n      enableEmptyFilter && !inverseSelection && resultValue?.length === 0;\n\n    const dataMask = {\n      extraFormData: getSelectExtraFormData(\n        col,\n        resultValue,\n        emptyFilter,\n        inverseSelection,\n      ),\n      currentState: {\n        value: resultValue.length ? resultValue : null,\n      },\n    };\n\n    const dataMaskObject: DataMask = {};\n    if (behaviors.includes(Behavior.NATIVE_FILTER)) {\n      dataMaskObject.nativeFilters = dataMask;\n    }\n\n    if (behaviors.includes(Behavior.CROSS_FILTER)) {\n      dataMaskObject.crossFilters = dataMask;\n    }\n\n    setDataMask(dataMaskObject);\n  };\n\n  useEffect(() => {\n    handleChange(currentValue ?? []);\n  }, [\n    JSON.stringify(currentValue),\n    multiSelect,\n    enableEmptyFilter,\n    inverseSelection,\n  ]);\n\n  useEffect(() => {\n    handleChange(defaultValue ?? []);\n  }, [\n    JSON.stringify(defaultValue),\n    multiSelect,\n    enableEmptyFilter,\n    inverseSelection,\n  ]);\n\n  const placeholderText =\n    (data || []).length === 0\n      ? t('No data')\n      : tn('%s option', '%s options', data.length, data.length);\n  return (\n    <Styles height={height} width={width}>\n      <StyledSelect\n        allowClear\n        // @ts-ignore\n        value={values}\n        showSearch={showSearch}\n        mode={multiSelect ? 'multiple' : undefined}\n        placeholder={placeholderText}\n        // @ts-ignore\n        onChange={handleChange}\n        ref={inputRef}\n      >\n        {(data || []).map(row => {\n          const [value] = groupby.map(col => row[col]);\n          return (\n            // @ts-ignore\n            <Option key={`${value}`} value={value}>\n              {labelFormatter(value, datatype)}\n            </Option>\n          );\n        })}\n      </StyledSelect>\n    </Styles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}