{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'react-virtualized';\nimport SearchInput, { createFilter } from 'react-search-input';\nimport { t } from '@superset-ui/core';\n\nimport { Select } from 'src/common/components';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';\nimport Loading from '../../components/Loading';\nimport { CHART_TYPE, NEW_COMPONENT_SOURCE_TYPE } from '../util/componentTypes';\nimport { NEW_CHART_ID, NEW_COMPONENTS_SOURCE_ID } from '../util/constants';\nimport { slicePropShape } from '../util/propShapes';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  fetchAllSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  height: PropTypes.number };\n\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: '',\n  height: window.innerHeight };\n\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: 'Name',\n  viz_type: 'Vis type',\n  datasource_name: 'Dataset',\n  changed_on: 'Recent' };\n\n\nconst DEFAULT_SORT_KEY = 'changed_on';\n\nconst MARGIN_BOTTOM = 16;\nconst SIDEPANE_HEADER_HEIGHT = 30;\nconst SLICE_ADDER_CONTROL_HEIGHT = 64;\nconst DEFAULT_CELL_HEIGHT = 112;\n\nclass SliceAdder extends React.Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = {\n      filteredSlices: [],\n      searchTerm: '',\n      sortBy: DEFAULT_SORT_KEY,\n      selectedSliceIdsSet: new _Set(props.selectedSliceIds) };\n\n    this.rowRenderer = _bindInstanceProperty(_context = this.rowRenderer).call(_context, this);\n    this.searchUpdated = _bindInstanceProperty(_context2 = this.searchUpdated).call(_context2, this);\n    this.handleKeyPress = _bindInstanceProperty(_context3 = this.handleKeyPress).call(_context3, this);\n    this.handleSelect = _bindInstanceProperty(_context4 = this.handleSelect).call(_context4, this);\n  }\n\n  componentDidMount() {\n    this.slicesRequest = this.props.fetchAllSlices(this.props.userId);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextState = {};\n    if (nextProps.lastUpdated !== this.props.lastUpdated) {var _context5, _context6;\n      nextState.filteredSlices = _sortInstanceProperty(_context5 = _filterInstanceProperty(_context6 = _Object$values(nextProps.slices)).call(_context6,\n      createFilter(this.state.searchTerm, KEYS_TO_FILTERS))).call(_context5,\n      SliceAdder.sortByComparator(this.state.sortBy));\n    }\n\n    if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {\n      nextState.selectedSliceIdsSet = new _Set(nextProps.selectedSliceIds);\n    }\n\n    if (_Object$keys(nextState).length) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.slicesRequest && this.slicesRequest.abort) {\n      this.slicesRequest.abort();\n    }\n  }\n\n  getFilteredSortedSlices(searchTerm, sortBy) {var _context7, _context8;\n    return _sortInstanceProperty(_context7 = _filterInstanceProperty(_context8 = _Object$values(this.props.slices)).call(_context8,\n    createFilter(searchTerm, KEYS_TO_FILTERS))).call(_context7,\n    SliceAdder.sortByComparator(sortBy));\n  }\n\n  handleKeyPress(ev) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n\n      this.searchUpdated(ev.target.value);\n    }\n  }\n\n  searchUpdated(searchTerm) {\n    this.setState(prevState => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n      searchTerm,\n      prevState.sortBy) }));\n\n\n  }\n\n  handleSelect(sortBy) {\n    this.setState(prevState => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n      prevState.searchTerm,\n      sortBy) }));\n\n\n  }\n\n  rowRenderer({ key, index, style }) {\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name };\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        key: key,\n        component: { type, id, meta },\n        parentComponent: {\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE },\n\n        index: index,\n        depth: 0,\n        disableDragDrop: isSelected,\n        editMode: this.props.editMode\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        , useEmptyDragPreview: true\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        , style: {} },\n\n      ({ dragSourceRef }) =>\n      ___EmotionJSX(AddSliceCard, {\n        innerRef: dragSourceRef,\n        style: style,\n        sliceName: cellData.slice_name,\n        lastModified: cellData.changed_on_humanized,\n        visType: cellData.viz_type,\n        datasourceUrl: cellData.datasource_url,\n        datasourceName: cellData.datasource_name,\n        isSelected: isSelected })));\n\n\n\n\n  }\n\n  render() {var _context9;\n    const slicesListHeight =\n    this.props.height -\n    SIDEPANE_HEADER_HEIGHT -\n    SLICE_ADDER_CONTROL_HEIGHT -\n    MARGIN_BOTTOM;\n    return (\n      ___EmotionJSX(\"div\", { className: \"slice-adder-container\" },\n      ___EmotionJSX(\"div\", { className: \"controls\" },\n      ___EmotionJSX(SearchInput, {\n        placeholder: t('Filter your charts'),\n        className: \"search-input\",\n        onChange: this.searchUpdated,\n        onKeyPress: this.handleKeyPress,\n        \"data-test\": \"dashboard-charts-filter-search-input\" }),\n\n      ___EmotionJSX(Select, {\n        id: \"slice-adder-sortby\",\n        defaultValue: DEFAULT_SORT_KEY,\n        onChange: this.handleSelect },\n\n      _mapInstanceProperty(_context9 = _Object$entries(KEYS_TO_SORT)).call(_context9, ([key, label]) =>\n      ___EmotionJSX(Select.Option, { key: key, value: key }, \"Sort by \",\n      label)))),\n\n\n\n\n      this.props.isLoading && ___EmotionJSX(Loading, null),\n      !this.props.isLoading && this.state.filteredSlices.length > 0 &&\n      ___EmotionJSX(List, {\n        width: 376,\n        height: slicesListHeight,\n        rowCount: this.state.filteredSlices.length,\n        rowHeight: DEFAULT_CELL_HEIGHT,\n        rowRenderer: this.rowRenderer,\n        searchTerm: this.state.searchTerm,\n        sortBy: this.state.sortBy,\n        selectedSliceIds: this.props.selectedSliceIds }),\n\n\n      this.props.errorMessage &&\n      ___EmotionJSX(\"div\", { className: \"error-message\" }, this.props.errorMessage),\n\n\n      ___EmotionJSX(AddSliceDragPreview, { slices: this.state.filteredSlices })));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;const _default =\n\nSliceAdder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_FILTERS, \"KEYS_TO_FILTERS\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_SORT, \"KEYS_TO_SORT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_SORT_KEY, \"DEFAULT_SORT_KEY\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(MARGIN_BOTTOM, \"MARGIN_BOTTOM\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(SIDEPANE_HEADER_HEIGHT, \"SIDEPANE_HEADER_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(SLICE_ADDER_CONTROL_HEIGHT, \"SLICE_ADDER_CONTROL_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_CELL_HEIGHT, \"DEFAULT_CELL_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(SliceAdder, \"SliceAdder\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/SliceAdder.jsx"],"names":["React","PropTypes","List","SearchInput","createFilter","t","Select","AddSliceCard","AddSliceDragPreview","DragDroppable","Loading","CHART_TYPE","NEW_COMPONENT_SOURCE_TYPE","NEW_CHART_ID","NEW_COMPONENTS_SOURCE_ID","slicePropShape","propTypes","fetchAllSlices","func","isRequired","isLoading","bool","slices","objectOf","lastUpdated","number","errorMessage","string","userId","selectedSliceIds","arrayOf","editMode","height","defaultProps","window","innerHeight","KEYS_TO_FILTERS","KEYS_TO_SORT","slice_name","viz_type","datasource_name","changed_on","DEFAULT_SORT_KEY","MARGIN_BOTTOM","SIDEPANE_HEADER_HEIGHT","SLICE_ADDER_CONTROL_HEIGHT","DEFAULT_CELL_HEIGHT","SliceAdder","Component","sortByComparator","attr","desc","a","b","constructor","props","state","filteredSlices","searchTerm","sortBy","selectedSliceIdsSet","rowRenderer","searchUpdated","handleKeyPress","handleSelect","componentDidMount","slicesRequest","UNSAFE_componentWillReceiveProps","nextProps","nextState","length","setState","componentWillUnmount","abort","getFilteredSortedSlices","ev","key","preventDefault","target","value","prevState","index","style","cellData","isSelected","has","slice_id","type","id","meta","chartId","sliceName","dragSourceRef","changed_on_humanized","datasource_url","render","slicesListHeight","label"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'react-virtualized';\nimport SearchInput, { createFilter } from 'react-search-input';\nimport { t } from '@superset-ui/core';\n\nimport { Select } from 'src/common/components';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';\nimport Loading from '../../components/Loading';\nimport { CHART_TYPE, NEW_COMPONENT_SOURCE_TYPE } from '../util/componentTypes';\nimport { NEW_CHART_ID, NEW_COMPONENTS_SOURCE_ID } from '../util/constants';\nimport { slicePropShape } from '../util/propShapes';\n\nconst propTypes = {\n  fetchAllSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  height: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: '',\n  height: window.innerHeight,\n};\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: 'Name',\n  viz_type: 'Vis type',\n  datasource_name: 'Dataset',\n  changed_on: 'Recent',\n};\n\nconst DEFAULT_SORT_KEY = 'changed_on';\n\nconst MARGIN_BOTTOM = 16;\nconst SIDEPANE_HEADER_HEIGHT = 30;\nconst SLICE_ADDER_CONTROL_HEIGHT = 64;\nconst DEFAULT_CELL_HEIGHT = 112;\n\nclass SliceAdder extends React.Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredSlices: [],\n      searchTerm: '',\n      sortBy: DEFAULT_SORT_KEY,\n      selectedSliceIdsSet: new Set(props.selectedSliceIds),\n    };\n    this.rowRenderer = this.rowRenderer.bind(this);\n    this.searchUpdated = this.searchUpdated.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    this.slicesRequest = this.props.fetchAllSlices(this.props.userId);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextState = {};\n    if (nextProps.lastUpdated !== this.props.lastUpdated) {\n      nextState.filteredSlices = Object.values(nextProps.slices)\n        .filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS))\n        .sort(SliceAdder.sortByComparator(this.state.sortBy));\n    }\n\n    if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {\n      nextState.selectedSliceIdsSet = new Set(nextProps.selectedSliceIds);\n    }\n\n    if (Object.keys(nextState).length) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.slicesRequest && this.slicesRequest.abort) {\n      this.slicesRequest.abort();\n    }\n  }\n\n  getFilteredSortedSlices(searchTerm, sortBy) {\n    return Object.values(this.props.slices)\n      .filter(createFilter(searchTerm, KEYS_TO_FILTERS))\n      .sort(SliceAdder.sortByComparator(sortBy));\n  }\n\n  handleKeyPress(ev) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n\n      this.searchUpdated(ev.target.value);\n    }\n  }\n\n  searchUpdated(searchTerm) {\n    this.setState(prevState => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n        searchTerm,\n        prevState.sortBy,\n      ),\n    }));\n  }\n\n  handleSelect(sortBy) {\n    this.setState(prevState => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n        prevState.searchTerm,\n        sortBy,\n      ),\n    }));\n  }\n\n  rowRenderer({ key, index, style }) {\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name,\n    };\n    return (\n      <DragDroppable\n        key={key}\n        component={{ type, id, meta }}\n        parentComponent={{\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE,\n        }}\n        index={index}\n        depth={0}\n        disableDragDrop={isSelected}\n        editMode={this.props.editMode}\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        useEmptyDragPreview\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        style={{}}\n      >\n        {({ dragSourceRef }) => (\n          <AddSliceCard\n            innerRef={dragSourceRef}\n            style={style}\n            sliceName={cellData.slice_name}\n            lastModified={cellData.changed_on_humanized}\n            visType={cellData.viz_type}\n            datasourceUrl={cellData.datasource_url}\n            datasourceName={cellData.datasource_name}\n            isSelected={isSelected}\n          />\n        )}\n      </DragDroppable>\n    );\n  }\n\n  render() {\n    const slicesListHeight =\n      this.props.height -\n      SIDEPANE_HEADER_HEIGHT -\n      SLICE_ADDER_CONTROL_HEIGHT -\n      MARGIN_BOTTOM;\n    return (\n      <div className=\"slice-adder-container\">\n        <div className=\"controls\">\n          <SearchInput\n            placeholder={t('Filter your charts')}\n            className=\"search-input\"\n            onChange={this.searchUpdated}\n            onKeyPress={this.handleKeyPress}\n            data-test=\"dashboard-charts-filter-search-input\"\n          />\n          <Select\n            id=\"slice-adder-sortby\"\n            defaultValue={DEFAULT_SORT_KEY}\n            onChange={this.handleSelect}\n          >\n            {Object.entries(KEYS_TO_SORT).map(([key, label]) => (\n              <Select.Option key={key} value={key}>\n                Sort by {label}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n        {this.props.isLoading && <Loading />}\n        {!this.props.isLoading && this.state.filteredSlices.length > 0 && (\n          <List\n            width={376}\n            height={slicesListHeight}\n            rowCount={this.state.filteredSlices.length}\n            rowHeight={DEFAULT_CELL_HEIGHT}\n            rowRenderer={this.rowRenderer}\n            searchTerm={this.state.searchTerm}\n            sortBy={this.state.sortBy}\n            selectedSliceIds={this.props.selectedSliceIds}\n          />\n        )}\n        {this.props.errorMessage && (\n          <div className=\"error-message\">{this.props.errorMessage}</div>\n        )}\n        {/* Drag preview is just a single fixed-position element */}\n        <AddSliceDragPreview slices={this.state.filteredSlices} />\n      </div>\n    );\n  }\n}\n\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;\n\nexport default SliceAdder;\n"]},"metadata":{},"sourceType":"module"}