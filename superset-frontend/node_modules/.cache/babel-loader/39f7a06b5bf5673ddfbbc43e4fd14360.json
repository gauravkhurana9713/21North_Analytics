{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { css, ClassNames } from '@emotion/core';\nimport { components as defaultComponents } from 'react-select';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nexport const DEFAULT_CLASS_NAME = 'Select';\nexport const DEFAULT_CLASS_NAME_PREFIX = 'Select';\nconst colors = theme => ({\n  primary: theme.colors.success.base,\n  danger: theme.colors.error.base,\n  warning: theme.colors.warning.base,\n  indicator: theme.colors.info.base,\n  almostBlack: theme.colors.grayscale.dark1,\n  grayDark: theme.colors.grayscale.dark1,\n  grayLight: theme.colors.grayscale.light2,\n  gray: theme.colors.grayscale.light1,\n  grayBg: theme.colors.grayscale.light4,\n  grayBgDarker: theme.colors.grayscale.light3,\n  grayBgDarkest: theme.colors.grayscale.light2,\n  grayHeading: theme.colors.grayscale.light1,\n  menuHover: theme.colors.grayscale.light3,\n  lightest: theme.colors.grayscale.light5,\n  darkest: theme.colors.grayscale.dark2,\n  grayBorder: theme.colors.grayscale.light2,\n  grayBorderLight: theme.colors.grayscale.light3,\n  grayBorderDark: theme.colors.grayscale.light1,\n  textDefault: theme.colors.grayscale.dark1,\n  textDarkest: theme.colors.grayscale.dark2,\n  dangerLight: theme.colors.error.light1 });\n\nexport const defaultTheme = theme => ({\n  borderRadius: theme.borderRadius,\n  zIndex: 11,\n  colors: colors(theme),\n  spacing: {\n    baseUnit: 3,\n    menuGutter: 0,\n    controlHeight: 34,\n    lineHeight: 19,\n    fontSize: 14,\n    minWidth: '7.5em' } });var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1w6hva9-DEFAULT_STYLES\", styles: \"white-space:nowrap;;label:DEFAULT_STYLES;\" } : { name: \"1w6hva9-DEFAULT_STYLES\", styles: \"white-space:nowrap;;label:DEFAULT_STYLES;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref2 = process.env.NODE_ENV === \"production\" ? { name: \"vznj8q-DEFAULT_STYLES\", styles: \"display:none;;label:DEFAULT_STYLES;\" } : { name: \"vznj8q-DEFAULT_STYLES\", styles: \"display:none;;label:DEFAULT_STYLES;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref3 = process.env.NODE_ENV === \"production\" ? { name: \"e8fg1m-DEFAULT_STYLES\", styles: \"i{width:1em;display:inline-block;};label:DEFAULT_STYLES;\" } : { name: \"e8fg1m-DEFAULT_STYLES\", styles: \"i{width:1em;display:inline-block;};label:DEFAULT_STYLES;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref4 = process.env.NODE_ENV === \"production\" ? { name: \"wgs4yt-DEFAULT_STYLES\", styles: \"padding:4px 0 4px 6px;;label:DEFAULT_STYLES;\" } : { name: \"wgs4yt-DEFAULT_STYLES\", styles: \"padding:4px 0 4px 6px;;label:DEFAULT_STYLES;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\nexport const DEFAULT_STYLES = {\n  container: (provider, { theme: { spacing: { minWidth } } }) => [\n  provider, /*#__PURE__*/ /*#__PURE__*/\n  css(\"min-width:\",\n  minWidth, \";;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")],\n\n\n  placeholder: provider => [\n  provider, _ref],\n\n\n\n\n  indicatorSeparator: () => _ref2,\n\n\n  indicatorsContainer: provider => [\n  provider, _ref3],\n\n\n\n\n\n\n\n  clearIndicator: provider => [\n  provider, _ref4],\n\n\n\n\n  control: (provider, { isFocused, menuIsOpen, theme: { borderRadius, colors } }) => {\n    const isPseudoFocused = isFocused && !menuIsOpen;\n    let borderColor = colors.grayBorder;\n    if (isPseudoFocused || menuIsOpen) {\n      borderColor = colors.grayBorderDark;\n    }\n    return [\n    provider, /*#__PURE__*/ /*#__PURE__*/\n    css(\"border-color:\",\n    borderColor, \";box-shadow:\",\n    isPseudoFocused ?\n    'inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 3px rgba(0,0,0,.1)' :\n    'none', \";border-radius:\",\n    menuIsOpen ?\n    `${borderRadius}px ${borderRadius}px 0 0` :\n    `${borderRadius}px`, \";&:hover{border-color:\",\n\n    borderColor, \";box-shadow:0 1px 0 rgba(0,0,0,0.06);}flex-wrap:nowrap;padding-left:1px;;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")];\n\n\n\n\n\n\n  },\n  menu: (provider, { theme: { zIndex } }) => [\n  provider, /*#__PURE__*/ /*#__PURE__*/\n  css(\"padding-bottom:2em;z-index:\",\n\n  zIndex, \";width:auto;min-width:100%;max-width:80vw;background:none;box-shadow:none;border:0;;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")],\n\n\n\n\n\n\n\n\n  menuList: (provider, { theme: { borderRadius, colors } }) => [\n  provider, /*#__PURE__*/ /*#__PURE__*/\n  css(\"background:\",\n  colors.lightest, \";border-radius:0 0 \",\n  borderRadius, \"px \", borderRadius, \"px;border:1px solid \",\n  colors.grayBorderDark, \";box-shadow:0 1px 0 rgba(0,0,0,0.06);margin-top:-1px;border-top-color:\",\n\n\n  colors.grayBorderLight, \";min-width:100%;width:auto;border-radius:0 0 \",\n\n\n  borderRadius, \"px \", borderRadius, \"px;padding-top:0;padding-bottom:0;;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")],\n\n\n\n\n  option: (provider, { isDisabled, isFocused, isSelected, theme: { colors, spacing: { lineHeight, fontSize } } }) => {\n    let color = colors.textDefault;\n    let backgroundColor = colors.lightest;\n    if (isFocused) {\n      backgroundColor = colors.grayBgDarker;\n    } else\n    if (isDisabled) {\n      color = '#ccc';\n    }\n    return [\n    provider, /*#__PURE__*/ /*#__PURE__*/\n    css(\"cursor:pointer;line-height:\",\n\n    lineHeight, \"px;font-size:\",\n    fontSize, \"px;background-color:\",\n    backgroundColor, \";color:\",\n    color, \";font-weight:\",\n    isSelected ? 600 : 400, \";white-space:nowrap;&:hover:active{background-color:\",\n\n\n    colors.grayBg, \";};label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")];\n\n\n\n  },\n  valueContainer: (provider, { isMulti, hasValue, theme: { spacing: { baseUnit } } }) => [\n  provider, /*#__PURE__*/ /*#__PURE__*/\n  css(\"padding-left:\",\n  isMulti && hasValue ? 1 : baseUnit * 3, \"px;;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")],\n\n\n  multiValueLabel: (provider, { theme: { spacing: { baseUnit } } }) => ({\n    ...provider,\n    paddingLeft: baseUnit * 1.2,\n    paddingRight: baseUnit * 1.2 }),\n\n  input: (provider, { selectProps }) => {var _selectProps$value;return [\n    provider, /*#__PURE__*/ /*#__PURE__*/\n    css(\"margin-left:0;vertical-align:middle;\",\n\n\n    selectProps != null && selectProps.isMulti && selectProps != null && (_selectProps$value = selectProps.value) != null && _selectProps$value.length ?\n    'padding: 0 6px; width: 100%' :\n    'padding: 0; flex: 1 1 auto;', \";;label:DEFAULT_STYLES;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:DEFAULT_STYLES;\")];},\n\n\n  menuPortal: base => ({\n    ...base,\n    zIndex: 1030 }) };\n\n\nconst INPUT_TAG_BASE_STYLES = {\n  background: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0 };\n\nconst { ClearIndicator, DropdownIndicator, Option, Input, SelectContainer } = defaultComponents;\nexport const DEFAULT_COMPONENTS = {\n  SelectContainer: ({ children, ...props }) => {\n    const { selectProps: { assistiveText } } = props;\n    return ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(SelectContainer, props, children),\n    assistiveText && ___EmotionJSX(\"span\", { css: theme => ({\n        marginLeft: 3,\n        fontSize: theme.typography.sizes.s,\n        color: theme.colors.grayscale.light1 }) },\n\n    assistiveText));\n\n\n  },\n  Option: ({ children, innerProps, data, ...props }) => ___EmotionJSX(ClassNames, null,\n  ({ css }) => ___EmotionJSX(Option, _extends({}, props, { data: data, className: css(data && data.style ? data.style : null), innerProps: innerProps }),\n  children)),\n\n\n  ClearIndicator: props => ___EmotionJSX(ClearIndicator, props,\n  ___EmotionJSX(\"i\", { className: \"fa\" }, \"\\xD7\")),\n\n  DropdownIndicator: props => ___EmotionJSX(DropdownIndicator, props,\n  ___EmotionJSX(\"i\", { className: `fa fa-caret-${props.selectProps.menuIsOpen ? 'up' : 'down'}` })),\n\n  Input: props => {\n    const { getStyles } = props;\n    return ___EmotionJSX(Input, _extends({}, props, { css: getStyles('input', props), autoComplete: \"chrome-off\", inputStyle: INPUT_TAG_BASE_STYLES }));\n  } };\n\nexport const VALUE_LABELED_STYLES = {\n  valueContainer: (provider, { getValue, theme: { spacing: { baseUnit } }, isMulti }) => ({\n    ...provider,\n    paddingLeft: getValue().length > 0 ? 1 : baseUnit * 3,\n    overflow: isMulti && getValue().length > 0 ? 'visible' : 'hidden' }),\n\n  // render single value as is they are multi-value\n  singleValue: (provider, props) => {\n    const { getStyles } = props;\n    return {\n      ...getStyles('multiValue', props),\n      '.metric-option': getStyles('multiValueLabel', props) };\n\n  } };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_CLASS_NAME, \"DEFAULT_CLASS_NAME\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(DEFAULT_CLASS_NAME_PREFIX, \"DEFAULT_CLASS_NAME_PREFIX\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(colors, \"colors\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(defaultTheme, \"defaultTheme\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(DEFAULT_STYLES, \"DEFAULT_STYLES\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(INPUT_TAG_BASE_STYLES, \"INPUT_TAG_BASE_STYLES\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(ClearIndicator, \"ClearIndicator\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(DropdownIndicator, \"DropdownIndicator\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(Option, \"Option\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(Input, \"Input\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(SelectContainer, \"SelectContainer\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(DEFAULT_COMPONENTS, \"DEFAULT_COMPONENTS\", \"/app/superset-frontend/src/components/Select/styles.tsx\");reactHotLoader.register(VALUE_LABELED_STYLES, \"VALUE_LABELED_STYLES\", \"/app/superset-frontend/src/components/Select/styles.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Select/styles.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { CSSProperties, ComponentType, ReactNode } from 'react';\nimport { css, SerializedStyles, ClassNames } from '@emotion/core';\nimport { SupersetTheme } from '@superset-ui/core';\nimport {\n  Styles,\n  Theme,\n  SelectComponentsConfig,\n  components as defaultComponents,\n  InputProps as ReactSelectInputProps,\n} from 'react-select';\nimport { Props as SelectProps } from 'react-select/src/Select';\nimport { colors as reactSelectColors } from 'react-select/src/theme';\nimport { DeepNonNullable } from 'react-select/src/components';\nimport { OptionType } from 'antd/lib/select';\nimport { SupersetStyledSelectProps } from './Select';\n\nexport const DEFAULT_CLASS_NAME = 'Select';\nexport const DEFAULT_CLASS_NAME_PREFIX = 'Select';\n\ntype RecursivePartial<T> = {\n  [P in keyof T]?: RecursivePartial<T[P]>;\n};\n\nconst colors = (theme: SupersetTheme) => ({\n  primary: theme.colors.success.base,\n  danger: theme.colors.error.base,\n  warning: theme.colors.warning.base,\n  indicator: theme.colors.info.base,\n  almostBlack: theme.colors.grayscale.dark1,\n  grayDark: theme.colors.grayscale.dark1,\n  grayLight: theme.colors.grayscale.light2,\n  gray: theme.colors.grayscale.light1,\n  grayBg: theme.colors.grayscale.light4,\n  grayBgDarker: theme.colors.grayscale.light3,\n  grayBgDarkest: theme.colors.grayscale.light2,\n  grayHeading: theme.colors.grayscale.light1,\n  menuHover: theme.colors.grayscale.light3,\n  lightest: theme.colors.grayscale.light5,\n  darkest: theme.colors.grayscale.dark2,\n  grayBorder: theme.colors.grayscale.light2,\n  grayBorderLight: theme.colors.grayscale.light3,\n  grayBorderDark: theme.colors.grayscale.light1,\n  textDefault: theme.colors.grayscale.dark1,\n  textDarkest: theme.colors.grayscale.dark2,\n  dangerLight: theme.colors.error.light1,\n});\n\nexport type ThemeConfig = {\n  borderRadius: number;\n  // z-index for menu dropdown\n  // (the same as `@z-index-above-dashboard-charts + 1` in variables.less)\n  zIndex: number;\n  colors: {\n    // add known colors\n    [key in keyof typeof reactSelectColors]: string;\n  } &\n    {\n      [key in keyof ReturnType<typeof colors>]: string;\n    } & {\n      [key: string]: string; // any other colors\n    };\n  spacing: Theme['spacing'] & {\n    // line height and font size must be pixels for easier computation\n    // of option item height in WindowedMenuList\n    lineHeight: number;\n    fontSize: number;\n    // other relative size must be string\n    minWidth: string;\n  };\n};\n\nexport type PartialThemeConfig = RecursivePartial<ThemeConfig>;\n\nexport const defaultTheme: (\n  theme: SupersetTheme,\n) => PartialThemeConfig = theme => ({\n  borderRadius: theme.borderRadius,\n  zIndex: 11,\n  colors: colors(theme),\n  spacing: {\n    baseUnit: 3,\n    menuGutter: 0,\n    controlHeight: 34,\n    lineHeight: 19,\n    fontSize: 14,\n    minWidth: '7.5em', // just enough to display 'No options'\n  },\n});\n\n// let styles accept serialized CSS, too\ntype CSSStyles = CSSProperties | SerializedStyles;\ntype styleFnWithSerializedStyles = (\n  base: CSSProperties,\n  state: any,\n) => CSSStyles | CSSStyles[];\n\nexport type StylesConfig = {\n  [key in keyof Styles]: styleFnWithSerializedStyles;\n};\nexport type PartialStylesConfig = Partial<StylesConfig>;\n\nexport const DEFAULT_STYLES: PartialStylesConfig = {\n  container: (\n    provider,\n    {\n      theme: {\n        spacing: { minWidth },\n      },\n    },\n  ) => [\n    provider,\n    css`\n      min-width: ${minWidth};\n    `,\n  ],\n  placeholder: provider => [\n    provider,\n    css`\n      white-space: nowrap;\n    `,\n  ],\n  indicatorSeparator: () => css`\n    display: none;\n  `,\n  indicatorsContainer: provider => [\n    provider,\n    css`\n      i {\n        width: 1em;\n        display: inline-block;\n      }\n    `,\n  ],\n  clearIndicator: provider => [\n    provider,\n    css`\n      padding: 4px 0 4px 6px;\n    `,\n  ],\n  control: (\n    provider,\n    { isFocused, menuIsOpen, theme: { borderRadius, colors } },\n  ) => {\n    const isPseudoFocused = isFocused && !menuIsOpen;\n    let borderColor = colors.grayBorder;\n    if (isPseudoFocused || menuIsOpen) {\n      borderColor = colors.grayBorderDark;\n    }\n    return [\n      provider,\n      css`\n        border-color: ${borderColor};\n        box-shadow: ${isPseudoFocused\n          ? 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 3px rgba(0,0,0,.1)'\n          : 'none'};\n        border-radius: ${menuIsOpen\n          ? `${borderRadius}px ${borderRadius}px 0 0`\n          : `${borderRadius}px`};\n        &:hover {\n          border-color: ${borderColor};\n          box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n        }\n        flex-wrap: nowrap;\n        padding-left: 1px;\n      `,\n    ];\n  },\n  menu: (provider, { theme: { zIndex } }) => [\n    provider,\n    css`\n      padding-bottom: 2em;\n      z-index: ${zIndex}; /* override at least multi-page pagination */\n      width: auto;\n      min-width: 100%;\n      max-width: 80vw;\n      background: none;\n      box-shadow: none;\n      border: 0;\n    `,\n  ],\n  menuList: (provider, { theme: { borderRadius, colors } }) => [\n    provider,\n    css`\n      background: ${colors.lightest};\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      border: 1px solid ${colors.grayBorderDark};\n      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);\n      margin-top: -1px;\n      border-top-color: ${colors.grayBorderLight};\n      min-width: 100%;\n      width: auto;\n      border-radius: 0 0 ${borderRadius}px ${borderRadius}px;\n      padding-top: 0;\n      padding-bottom: 0;\n    `,\n  ],\n  option: (\n    provider,\n    {\n      isDisabled,\n      isFocused,\n      isSelected,\n      theme: {\n        colors,\n        spacing: { lineHeight, fontSize },\n      },\n    },\n  ) => {\n    let color = colors.textDefault;\n    let backgroundColor = colors.lightest;\n    if (isFocused) {\n      backgroundColor = colors.grayBgDarker;\n    } else if (isDisabled) {\n      color = '#ccc';\n    }\n    return [\n      provider,\n      css`\n        cursor: pointer;\n        line-height: ${lineHeight}px;\n        font-size: ${fontSize}px;\n        background-color: ${backgroundColor};\n        color: ${color};\n        font-weight: ${isSelected ? 600 : 400};\n        white-space: nowrap;\n        &:hover:active {\n          background-color: ${colors.grayBg};\n        }\n      `,\n    ];\n  },\n  valueContainer: (\n    provider,\n    {\n      isMulti,\n      hasValue,\n      theme: {\n        spacing: { baseUnit },\n      },\n    },\n  ) => [\n    provider,\n    css`\n      padding-left: ${isMulti && hasValue ? 1 : baseUnit * 3}px;\n    `,\n  ],\n  multiValueLabel: (\n    provider,\n    {\n      theme: {\n        spacing: { baseUnit },\n      },\n    },\n  ) => ({\n    ...provider,\n    paddingLeft: baseUnit * 1.2,\n    paddingRight: baseUnit * 1.2,\n  }),\n  input: (provider, { selectProps }) => [\n    provider,\n    css`\n      margin-left: 0;\n      vertical-align: middle;\n      ${selectProps?.isMulti && selectProps?.value?.length\n        ? 'padding: 0 6px; width: 100%'\n        : 'padding: 0; flex: 1 1 auto;'};\n    `,\n  ],\n  menuPortal: base => ({\n    ...base,\n    zIndex: 1030, // must be same or higher of antd popover\n  }),\n};\n\nconst INPUT_TAG_BASE_STYLES = {\n  background: 'none',\n  border: 'none',\n  outline: 'none',\n  padding: 0,\n};\n\nexport type SelectComponentsType = Omit<\n  SelectComponentsConfig<any>,\n  'Input'\n> & {\n  Input: ComponentType<InputProps>;\n};\n\n// react-select is missing selectProps from their props type\n// so overwriting it here to avoid errors\nexport type InputProps = ReactSelectInputProps & {\n  placeholder?: ReactNode;\n  selectProps: SelectProps;\n  autoComplete?: string;\n  onPaste?: SupersetStyledSelectProps<OptionType>['onPaste'];\n  inputStyle?: object;\n};\n\nconst {\n  ClearIndicator,\n  DropdownIndicator,\n  Option,\n  Input,\n  SelectContainer,\n} = defaultComponents as Required<DeepNonNullable<SelectComponentsType>>;\n\nexport const DEFAULT_COMPONENTS: SelectComponentsType = {\n  SelectContainer: ({ children, ...props }) => {\n    const {\n      selectProps: { assistiveText },\n    } = props;\n    return (\n      <div>\n        <SelectContainer {...props}>{children}</SelectContainer>\n        {assistiveText && (\n          <span\n            css={(theme: SupersetTheme) => ({\n              marginLeft: 3,\n              fontSize: theme.typography.sizes.s,\n              color: theme.colors.grayscale.light1,\n            })}\n          >\n            {assistiveText}\n          </span>\n        )}\n      </div>\n    );\n  },\n  Option: ({ children, innerProps, data, ...props }) => (\n    <ClassNames>\n      {({ css }) => (\n        <Option\n          {...props}\n          data={data}\n          className={css(data && data.style ? data.style : null)}\n          innerProps={innerProps}\n        >\n          {children}\n        </Option>\n      )}\n    </ClassNames>\n  ),\n  ClearIndicator: props => (\n    <ClearIndicator {...props}>\n      <i className=\"fa\">×</i>\n    </ClearIndicator>\n  ),\n  DropdownIndicator: props => (\n    <DropdownIndicator {...props}>\n      <i\n        className={`fa fa-caret-${\n          props.selectProps.menuIsOpen ? 'up' : 'down'\n        }`}\n      />\n    </DropdownIndicator>\n  ),\n  Input: (props: InputProps) => {\n    const { getStyles } = props;\n    return (\n      <Input\n        {...props}\n        css={getStyles('input', props)}\n        autoComplete=\"chrome-off\"\n        inputStyle={INPUT_TAG_BASE_STYLES}\n      />\n    );\n  },\n};\n\nexport const VALUE_LABELED_STYLES: PartialStylesConfig = {\n  valueContainer: (\n    provider,\n    {\n      getValue,\n      theme: {\n        spacing: { baseUnit },\n      },\n      isMulti,\n    },\n  ) => ({\n    ...provider,\n    paddingLeft: getValue().length > 0 ? 1 : baseUnit * 3,\n    overflow: isMulti && getValue().length > 0 ? 'visible' : 'hidden',\n  }),\n  // render single value as is they are multi-value\n  singleValue: (provider, props) => {\n    const { getStyles } = props;\n    return {\n      ...getStyles('multiValue', props),\n      '.metric-option': getStyles('multiValueLabel', props),\n    };\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}