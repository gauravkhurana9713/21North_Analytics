{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";var _context;(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { FormControl } from 'react-bootstrap';\nimport Alert from 'src/components/Alert';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport StyledModal from 'src/common/components/Modal';\nimport Button from 'src/components/Button';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { getClientErrorObject } from '../utils/getClientErrorObject';\nimport Loading from '../components/Loading';\nimport withToasts from '../messageToasts/enhancers/withToasts';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst CONFIRM_WARNING_MESSAGE = t('Warning! Changing the dataset may break the chart if the metadata does not exist.');\nconst CHANGE_WARNING_MSG = t('Changing the dataset may break the chart if the chart relies ' +\n'on columns or metadata that does not exist in the target dataset');\nconst ConfirmModalStyled = styled.div`\n  .btn-container {\n    display: flex;\n    justify-content: flex-end;\n    padding: 0px 15px;\n    margin: 10px 0 0 0;\n  }\n\n  .confirm-modal-container {\n    margin: 9px;\n  }\n`;\nconst StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\nconst TABLE_COLUMNS = _mapInstanceProperty(_context = [\n'name',\n'type',\n'schema',\n'connection',\n'creator']).call(_context,\ncol => ({ accessor: col, Header: col }));\nconst emptyRequest = {\n  pageIndex: 0,\n  pageSize: 20,\n  filters: [],\n  sortBy: [{ id: 'changed_on_delta_humanized' }] };\n\nconst ChangeDatasourceModal = ({ addDangerToast, addSuccessToast, onChange, onDatasourceSave, onHide, show }) => {\n  const [filter, setFilter] = useState(undefined);\n  const [confirmChange, setConfirmChange] = useState(false);\n  const [confirmedDataset, setConfirmedDataset] = useState();\n  let searchRef = useRef(null);\n  const { state: { loading, resourceCollection }, fetchData } = useListViewResource('dataset', t('dataset'), addDangerToast);\n  const selectDatasource = useCallback(datasource => {\n    setConfirmChange(true);\n    setConfirmedDataset(datasource);\n  }, []);\n  useDebouncedEffect(() => {\n    fetchData({\n      ...emptyRequest,\n      ...(filter && {\n        filters: [\n        {\n          id: 'table_name',\n          operator: 'ct',\n          value: filter }] }) });\n\n\n\n\n  }, 300, [filter]);\n  useEffect(() => {\n    const onEnterModal = async () => {\n      if (searchRef && searchRef.current) {\n        searchRef.current.focus();\n      }\n    };\n    if (show) {\n      onEnterModal();\n    }\n  }, [\n  addDangerToast,\n  fetchData,\n  onChange,\n  onDatasourceSave,\n  onHide,\n  selectDatasource,\n  show]);\n\n  const setSearchRef = ref => {\n    searchRef = ref;\n  };\n  const changeSearch = event => {var _event$currentTarget$, _event$currentTarget;\n    const searchValue = (_event$currentTarget$ = (_event$currentTarget = event.currentTarget) == null ? void 0 : _event$currentTarget.value) != null ? _event$currentTarget$ : '';\n    setFilter(searchValue);\n  };\n  const handleChangeConfirm = () => {\n    SupersetClient.get({\n      endpoint: `/datasource/get/${confirmedDataset == null ? void 0 : confirmedDataset.type}/${confirmedDataset == null ? void 0 : confirmedDataset.id}` }).\n\n    then(({ json }) => {\n      onDatasourceSave(json);\n      onChange(`${confirmedDataset == null ? void 0 : confirmedDataset.id}__table`);\n    }).\n    catch(response => {\n      getClientErrorObject(response).then(({ error, message }) => {\n        const errorMessage = error ?\n        error.error || error.statusText || error :\n        message;\n        addDangerToast(errorMessage);\n      });\n    });\n    onHide();\n    addSuccessToast('Successfully changed dataset!');\n  };\n  const handlerCancelConfirm = () => {\n    setConfirmChange(false);\n  };\n  const renderTableView = () => {\n    const data = _mapInstanceProperty(resourceCollection).call(resourceCollection, ds => ({\n      rawName: ds.table_name,\n      connection: ds.database.database_name,\n      schema: ds.schema,\n      name: ___EmotionJSX(StyledSpan, { role: \"button\", tabIndex: 0, \"data-test\": \"datasource-link\", onClick: () => selectDatasource({ type: 'table', ...ds }) },\n      ds.table_name),\n\n      type: ds.kind }));\n\n    return data;\n  };\n  return ___EmotionJSX(StyledModal, { show: show, onHide: onHide, responsive: true, title: t('Change dataset'), width: confirmChange ? '432px' : '', height: confirmChange ? 'auto' : '480px', hideFooter: !confirmChange, footer: ___EmotionJSX(React.Fragment, null,\n    confirmChange && ___EmotionJSX(ConfirmModalStyled, null,\n    ___EmotionJSX(\"div\", { className: \"btn-container\" },\n    ___EmotionJSX(Button, { onClick: handlerCancelConfirm }, \"Cancel\"),\n    ___EmotionJSX(Button, { className: \"proceed-btn\", buttonStyle: \"primary\", onClick: handleChangeConfirm }, \"Proceed\")))) },\n\n\n\n\n\n  ___EmotionJSX(React.Fragment, null,\n  !confirmChange && ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Alert, { type: \"warning\", message: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(\"strong\", null, t('Warning!')), \" \", CHANGE_WARNING_MSG) }),\n\n  ___EmotionJSX(\"div\", null,\n  ___EmotionJSX(FormControl, { inputRef: ref => {\n      setSearchRef(ref);\n    }, type: \"text\", bsSize: \"sm\", value: filter, placeholder: t('Search / Filter'), onChange: changeSearch })),\n\n  loading && ___EmotionJSX(Loading, null),\n  !loading && ___EmotionJSX(TableView, { columns: TABLE_COLUMNS, data: renderTableView(), pageSize: 20, className: \"table-condensed\", emptyWrapperType: EmptyWrapperType.Small, scrollTable: true })),\n\n  confirmChange && ___EmotionJSX(React.Fragment, null, CONFIRM_WARNING_MESSAGE)));\n\n\n};__signature__(ChangeDatasourceModal, \"useState{[filter, setFilter](undefined)}\\nuseState{[confirmChange, setConfirmChange](false)}\\nuseState{[confirmedDataset, setConfirmedDataset]}\\nuseRef{searchRef}\\nuseListViewResource{{ state: { loading, resourceCollection }, fetchData, }}\\nuseCallback{selectDatasource}\\nuseDebouncedEffect{}\\nuseEffect{}\", () => [useListViewResource, useDebouncedEffect]);const _default =\nwithToasts(ChangeDatasourceModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CONFIRM_WARNING_MESSAGE, \"CONFIRM_WARNING_MESSAGE\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(CHANGE_WARNING_MSG, \"CHANGE_WARNING_MSG\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(ConfirmModalStyled, \"ConfirmModalStyled\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(StyledSpan, \"StyledSpan\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(TABLE_COLUMNS, \"TABLE_COLUMNS\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(emptyRequest, \"emptyRequest\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(ChangeDatasourceModal, \"ChangeDatasourceModal\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/datasource/ChangeDatasourceModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n  FunctionComponent,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { FormControl, FormControlProps } from 'react-bootstrap';\nimport Alert from 'src/components/Alert';\nimport { SupersetClient, t, styled } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport StyledModal from 'src/common/components/Modal';\nimport Button from 'src/components/Button';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport Dataset from 'src/types/Dataset';\nimport { useDebouncedEffect } from 'src/explore/exploreUtils';\nimport { getClientErrorObject } from '../utils/getClientErrorObject';\nimport Loading from '../components/Loading';\nimport withToasts from '../messageToasts/enhancers/withToasts';\n\nconst CONFIRM_WARNING_MESSAGE = t(\n  'Warning! Changing the dataset may break the chart if the metadata does not exist.',\n);\n\nconst CHANGE_WARNING_MSG = t(\n  'Changing the dataset may break the chart if the chart relies ' +\n    'on columns or metadata that does not exist in the target dataset',\n);\n\ninterface Datasource {\n  type: string;\n  id: number;\n  uid: string;\n}\n\ninterface ChangeDatasourceModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onChange: (uid: string) => void;\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => void;\n  show: boolean;\n}\n\nconst ConfirmModalStyled = styled.div`\n  .btn-container {\n    display: flex;\n    justify-content: flex-end;\n    padding: 0px 15px;\n    margin: 10px 0 0 0;\n  }\n\n  .confirm-modal-container {\n    margin: 9px;\n  }\n`;\n\nconst StyledSpan = styled.span`\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n`;\n\nconst TABLE_COLUMNS = [\n  'name',\n  'type',\n  'schema',\n  'connection',\n  'creator',\n].map(col => ({ accessor: col, Header: col }));\n\nconst emptyRequest = {\n  pageIndex: 0,\n  pageSize: 20,\n  filters: [],\n  sortBy: [{ id: 'changed_on_delta_humanized' }],\n};\n\nconst ChangeDatasourceModal: FunctionComponent<ChangeDatasourceModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onChange,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [filter, setFilter] = useState<any>(undefined);\n  const [confirmChange, setConfirmChange] = useState(false);\n  const [confirmedDataset, setConfirmedDataset] = useState<Datasource>();\n  let searchRef = useRef<HTMLInputElement>(null);\n\n  const {\n    state: { loading, resourceCollection },\n    fetchData,\n  } = useListViewResource<Dataset>('dataset', t('dataset'), addDangerToast);\n\n  const selectDatasource = useCallback((datasource: Datasource) => {\n    setConfirmChange(true);\n    setConfirmedDataset(datasource);\n  }, []);\n\n  useDebouncedEffect(\n    () => {\n      fetchData({\n        ...emptyRequest,\n        ...(filter && {\n          filters: [\n            {\n              id: 'table_name',\n              operator: 'ct',\n              value: filter,\n            },\n          ],\n        }),\n      });\n    },\n    300,\n    [filter],\n  );\n\n  useEffect(() => {\n    const onEnterModal = async () => {\n      if (searchRef && searchRef.current) {\n        searchRef.current.focus();\n      }\n    };\n\n    if (show) {\n      onEnterModal();\n    }\n  }, [\n    addDangerToast,\n    fetchData,\n    onChange,\n    onDatasourceSave,\n    onHide,\n    selectDatasource,\n    show,\n  ]);\n\n  const setSearchRef = (ref: any) => {\n    searchRef = ref;\n  };\n\n  const changeSearch = (\n    event: React.FormEvent<FormControl & FormControlProps>,\n  ) => {\n    const searchValue = (event.currentTarget?.value as string) ?? '';\n    setFilter(searchValue);\n  };\n\n  const handleChangeConfirm = () => {\n    SupersetClient.get({\n      endpoint: `/datasource/get/${confirmedDataset?.type}/${confirmedDataset?.id}`,\n    })\n      .then(({ json }) => {\n        onDatasourceSave(json);\n        onChange(`${confirmedDataset?.id}__table`);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(\n          ({ error, message }: { error: any; message: string }) => {\n            const errorMessage = error\n              ? error.error || error.statusText || error\n              : message;\n            addDangerToast(errorMessage);\n          },\n        );\n      });\n    onHide();\n    addSuccessToast('Successfully changed dataset!');\n  };\n\n  const handlerCancelConfirm = () => {\n    setConfirmChange(false);\n  };\n\n  const renderTableView = () => {\n    const data = resourceCollection.map((ds: any) => ({\n      rawName: ds.table_name,\n      connection: ds.database.database_name,\n      schema: ds.schema,\n      name: (\n        <StyledSpan\n          role=\"button\"\n          tabIndex={0}\n          data-test=\"datasource-link\"\n          onClick={() => selectDatasource({ type: 'table', ...ds })}\n        >\n          {ds.table_name}\n        </StyledSpan>\n      ),\n      type: ds.kind,\n    }));\n\n    return data;\n  };\n\n  return (\n    <StyledModal\n      show={show}\n      onHide={onHide}\n      responsive\n      title={t('Change dataset')}\n      width={confirmChange ? '432px' : ''}\n      height={confirmChange ? 'auto' : '480px'}\n      hideFooter={!confirmChange}\n      footer={\n        <>\n          {confirmChange && (\n            <ConfirmModalStyled>\n              <div className=\"btn-container\">\n                <Button onClick={handlerCancelConfirm}>Cancel</Button>\n                <Button\n                  className=\"proceed-btn\"\n                  buttonStyle=\"primary\"\n                  onClick={handleChangeConfirm}\n                >\n                  Proceed\n                </Button>\n              </div>\n            </ConfirmModalStyled>\n          )}\n        </>\n      }\n    >\n      <>\n        {!confirmChange && (\n          <>\n            <Alert\n              type=\"warning\"\n              message={\n                <>\n                  <strong>{t('Warning!')}</strong> {CHANGE_WARNING_MSG}\n                </>\n              }\n            />\n            <div>\n              <FormControl\n                inputRef={ref => {\n                  setSearchRef(ref);\n                }}\n                type=\"text\"\n                bsSize=\"sm\"\n                value={filter}\n                placeholder={t('Search / Filter')}\n                onChange={changeSearch}\n              />\n            </div>\n            {loading && <Loading />}\n            {!loading && (\n              <TableView\n                columns={TABLE_COLUMNS}\n                data={renderTableView()}\n                pageSize={20}\n                className=\"table-condensed\"\n                emptyWrapperType={EmptyWrapperType.Small}\n                scrollTable\n              />\n            )}\n          </>\n        )}\n        {confirmChange && <>{CONFIRM_WARNING_MESSAGE}</>}\n      </>\n    </StyledModal>\n  );\n};\n\nexport default withToasts(ChangeDatasourceModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}