{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport FormLabel from 'src/components/FormLabel';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  description: PropTypes.string,\n  validationErrors: PropTypes.array,\n  renderTrigger: PropTypes.bool,\n  rightNode: PropTypes.node,\n  leftNode: PropTypes.node,\n  onClick: PropTypes.func,\n  hovered: PropTypes.bool,\n  tooltipOnClick: PropTypes.func,\n  warning: PropTypes.string,\n  danger: PropTypes.string };\n\n\nconst defaultProps = {\n  validationErrors: [],\n  renderTrigger: false,\n  hovered: false,\n  name: undefined };\n\n\nexport default class ControlHeader extends React.Component {\n  renderOptionalIcons() {\n    if (this.props.hovered) {\n      return (\n        ___EmotionJSX(\"span\", null,\n        this.props.description &&\n        ___EmotionJSX(\"span\", null,\n        ___EmotionJSX(InfoTooltipWithTrigger, {\n          label: t('description'),\n          tooltip: this.props.description,\n          placement: \"top\",\n          onClick: this.props.tooltipOnClick }),\n        ' '),\n\n\n        this.props.renderTrigger &&\n        ___EmotionJSX(\"span\", null,\n        ___EmotionJSX(InfoTooltipWithTrigger, {\n          label: t('bolt'),\n          tooltip: t('Changing this control takes effect instantly'),\n          placement: \"top\",\n          icon: \"bolt\" }),\n        ' ')));\n\n\n\n\n    }\n    return null;\n  }\n\n  render() {\n    if (!this.props.label) {\n      return null;\n    }\n    const labelClass =\n    this.props.validationErrors.length > 0 ? 'text-danger' : '';\n    return (\n      ___EmotionJSX(\"div\", { className: \"ControlHeader\", \"data-test\": `${this.props.name}-header` },\n      ___EmotionJSX(\"div\", { className: \"pull-left\" },\n      ___EmotionJSX(FormLabel, null,\n      this.props.leftNode && ___EmotionJSX(\"span\", null, this.props.leftNode),\n      ___EmotionJSX(\"span\", {\n        role: \"button\",\n        tabIndex: 0,\n        onClick: this.props.onClick,\n        className: labelClass,\n        style: { cursor: this.props.onClick ? 'pointer' : '' } },\n\n      this.props.label),\n      ' ',\n      this.props.warning &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(Tooltip, {\n        id: \"error-tooltip\",\n        placement: \"top\",\n        title: this.props.warning },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-warning\" })),\n      ' '),\n\n\n      this.props.danger &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(Tooltip, {\n        id: \"error-tooltip\",\n        placement: \"top\",\n        title: this.props.danger },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\" })),\n      ' '),\n\n\n      this.props.validationErrors.length > 0 &&\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(Tooltip, {\n        id: \"error-tooltip\",\n        placement: \"top\",\n        title: this.props.validationErrors.join(' ') },\n\n      ___EmotionJSX(\"i\", { className: \"fa fa-exclamation-circle text-danger\" })),\n      ' '),\n\n\n      this.renderOptionalIcons())),\n\n\n      this.props.rightNode &&\n      ___EmotionJSX(\"div\", { className: \"pull-right\" }, this.props.rightNode),\n\n      ___EmotionJSX(\"div\", { className: \"clearfix\" })));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nControlHeader.propTypes = propTypes;\nControlHeader.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ControlHeader.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/ControlHeader.jsx\");reactHotLoader.register(ControlHeader, \"ControlHeader\", \"/app/superset-frontend/src/explore/components/ControlHeader.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ControlHeader.jsx"],"names":["React","PropTypes","t","InfoTooltipWithTrigger","Tooltip","FormLabel","propTypes","name","string","label","description","validationErrors","array","renderTrigger","bool","rightNode","node","leftNode","onClick","func","hovered","tooltipOnClick","warning","danger","defaultProps","undefined","ControlHeader","Component","renderOptionalIcons","props","render","labelClass","length","cursor","join"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport FormLabel from 'src/components/FormLabel';\n\nconst propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  description: PropTypes.string,\n  validationErrors: PropTypes.array,\n  renderTrigger: PropTypes.bool,\n  rightNode: PropTypes.node,\n  leftNode: PropTypes.node,\n  onClick: PropTypes.func,\n  hovered: PropTypes.bool,\n  tooltipOnClick: PropTypes.func,\n  warning: PropTypes.string,\n  danger: PropTypes.string,\n};\n\nconst defaultProps = {\n  validationErrors: [],\n  renderTrigger: false,\n  hovered: false,\n  name: undefined,\n};\n\nexport default class ControlHeader extends React.Component {\n  renderOptionalIcons() {\n    if (this.props.hovered) {\n      return (\n        <span>\n          {this.props.description && (\n            <span>\n              <InfoTooltipWithTrigger\n                label={t('description')}\n                tooltip={this.props.description}\n                placement=\"top\"\n                onClick={this.props.tooltipOnClick}\n              />{' '}\n            </span>\n          )}\n          {this.props.renderTrigger && (\n            <span>\n              <InfoTooltipWithTrigger\n                label={t('bolt')}\n                tooltip={t('Changing this control takes effect instantly')}\n                placement=\"top\"\n                icon=\"bolt\"\n              />{' '}\n            </span>\n          )}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    if (!this.props.label) {\n      return null;\n    }\n    const labelClass =\n      this.props.validationErrors.length > 0 ? 'text-danger' : '';\n    return (\n      <div className=\"ControlHeader\" data-test={`${this.props.name}-header`}>\n        <div className=\"pull-left\">\n          <FormLabel>\n            {this.props.leftNode && <span>{this.props.leftNode}</span>}\n            <span\n              role=\"button\"\n              tabIndex={0}\n              onClick={this.props.onClick}\n              className={labelClass}\n              style={{ cursor: this.props.onClick ? 'pointer' : '' }}\n            >\n              {this.props.label}\n            </span>{' '}\n            {this.props.warning && (\n              <span>\n                <Tooltip\n                  id=\"error-tooltip\"\n                  placement=\"top\"\n                  title={this.props.warning}\n                >\n                  <i className=\"fa fa-exclamation-circle text-warning\" />\n                </Tooltip>{' '}\n              </span>\n            )}\n            {this.props.danger && (\n              <span>\n                <Tooltip\n                  id=\"error-tooltip\"\n                  placement=\"top\"\n                  title={this.props.danger}\n                >\n                  <i className=\"fa fa-exclamation-circle text-danger\" />\n                </Tooltip>{' '}\n              </span>\n            )}\n            {this.props.validationErrors.length > 0 && (\n              <span>\n                <Tooltip\n                  id=\"error-tooltip\"\n                  placement=\"top\"\n                  title={this.props.validationErrors.join(' ')}\n                >\n                  <i className=\"fa fa-exclamation-circle text-danger\" />\n                </Tooltip>{' '}\n              </span>\n            )}\n            {this.renderOptionalIcons()}\n          </FormLabel>\n        </div>\n        {this.props.rightNode && (\n          <div className=\"pull-right\">{this.props.rightNode}</div>\n        )}\n        <div className=\"clearfix\" />\n      </div>\n    );\n  }\n}\n\nControlHeader.propTypes = propTypes;\nControlHeader.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}