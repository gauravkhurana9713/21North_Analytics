{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _everyInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/every\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { areObjectsEqual } from 'src/reduxUtils';\nexport const useFilterSets = () => useSelector(state => state.nativeFilters.filterSets || {});__signature__(useFilterSets, \"useSelector{}\", () => [useSelector]);\nexport const useFilters = () => useSelector(state => state.nativeFilters.filters);__signature__(useFilters, \"useSelector{}\", () => [useSelector]);\nexport const useDataMask = () => useSelector(state => state.dataMask.nativeFilters);__signature__(useDataMask, \"useSelector{}\", () => [useSelector]);\nexport const useFiltersInitialisation = (dataMaskSelected, handleApply) => {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const filters = useFilters();\n  const filterValues = _Object$values(filters);\n  useEffect(() => {\n    if (isInitialized) {\n      return;\n    }\n    const areFiltersInitialized = _everyInstanceProperty(filterValues).call(filterValues, filterValue => {var _dataMaskSelected$fil, _dataMaskSelected$fil2;return areObjectsEqual(filterValue == null ? void 0 : filterValue.defaultValue, (_dataMaskSelected$fil = dataMaskSelected[filterValue == null ? void 0 : filterValue.id]) == null ? void 0 : (_dataMaskSelected$fil2 = _dataMaskSelected$fil.currentState) == null ? void 0 : _dataMaskSelected$fil2.value);});\n    if (areFiltersInitialized) {\n      handleApply();\n      setIsInitialized(true);\n    }\n  }, [filterValues, dataMaskSelected, isInitialized]);\n  return {\n    isInitialized };\n\n};__signature__(useFiltersInitialisation, \"useState{[isInitialized, setIsInitialized](false)}\\nuseFilters{filters}\\nuseEffect{}\", () => [useFilters]);\nexport const useFilterUpdates = (dataMaskSelected, setDataMaskSelected, setLastAppliedFilterData) => {\n  const filters = useFilters();\n  const dataMaskApplied = useDataMask();\n  useEffect(() => {var _context, _context2;\n    // Remove deleted filters from local state\n    _forEachInstanceProperty(_context = _Object$keys(dataMaskSelected)).call(_context, selectedId => {\n      if (!filters[selectedId]) {\n        setDataMaskSelected(draft => {\n          delete draft[selectedId];\n        });\n      }\n    });\n    _forEachInstanceProperty(_context2 = _Object$keys(dataMaskApplied)).call(_context2, appliedId => {\n      if (!filters[appliedId]) {\n        setLastAppliedFilterData(draft => {\n          delete draft[appliedId];\n        });\n      }\n    });\n  }, [\n  dataMaskApplied,\n  dataMaskSelected,\n  filters,\n  setDataMaskSelected,\n  setLastAppliedFilterData]);\n\n};__signature__(useFilterUpdates, \"useFilters{filters}\\nuseDataMask{dataMaskApplied}\\nuseEffect{}\", () => [useFilters, useDataMask]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useFilterSets, \"useFilterSets\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useFilters, \"useFilters\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useDataMask, \"useDataMask\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useFiltersInitialisation, \"useFiltersInitialisation\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");reactHotLoader.register(useFilterUpdates, \"useFilterUpdates\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterBar/state.ts"],"names":[],"mappings":"wrBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH;AACA,SAAS,WAAT,QAA4B,aAA5B;AAMA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,eAAT,QAAgC,gBAAhC;AAGA,OAAO,MAAM,aAAa,GAAG,MAC3B,WAAW,CACT,KAAK,IAAI,KAAK,CAAC,aAAN,CAAoB,UAApB,IAAkC,EADlC,CADN,C,cAAM,a,0BACX,W;AAIF,OAAO,MAAM,UAAU,GAAG,MACxB,WAAW,CAAe,KAAK,IAAI,KAAK,CAAC,aAAN,CAAoB,OAA5C,CADN,C,cAAM,U,0BACX,W;AAEF,OAAO,MAAM,WAAW,GAAG,MACzB,WAAW,CAA0B,KAAK,IAAI,KAAK,CAAC,QAAN,CAAe,aAAlD,CADN,C,cAAM,W,0BACX,W;AAEF,OAAO,MAAM,wBAAwB,GAAG,CACtC,gBADsC,EAEtC,WAFsC,KAGpC;AACF,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAU,KAAV,CAAlD;AACA,QAAM,OAAO,GAAG,UAAU,EAA1B;AACA,QAAM,YAAY,GAAG,eAAsB,OAAtB,CAArB;AACA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,aAAJ,EAAmB;AACjB;AACD;AACD,UAAM,qBAAqB,GAAG,uBAAA,YAAY,MAAZ,CAAA,YAAY,EAAO,WAAW,8DAC1D,eAAe,CACb,WADa,oBACb,WAAW,CAAE,YADA,2BAEb,gBAAgB,CAAC,WAAD,oBAAC,WAAW,CAAE,EAAd,CAFH,+CAEb,sBAAmC,YAFtB,qBAEb,uBAAiD,KAFpC,CAD2C,EAAlB,CAA1C;AAMA,QAAI,qBAAJ,EAA2B;AACzB,MAAA,WAAW;AACX,MAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GAdQ,EAcN,CAAC,YAAD,EAAe,gBAAf,EAAiC,aAAjC,CAdM,CAAT;AAgBA,SAAO;AACL,IAAA,aADK,EAAP;;AAGD,CA1BM,C,cAAM,wB,iGAKK,U;AAuBlB,OAAO,MAAM,gBAAgB,GAAG,CAC9B,gBAD8B,EAE9B,mBAF8B,EAG9B,wBAH8B,KAI5B;AACF,QAAM,OAAO,GAAG,UAAU,EAA1B;AACA,QAAM,eAAe,GAAG,WAAW,EAAnC;AAEA,EAAA,SAAS,CAAC,MAAK;AACb;AACA,qDAAY,gBAAZ,kBAAsC,UAAU,IAAG;AACjD,UAAI,CAAC,OAAO,CAAC,UAAD,CAAZ,EAA0B;AACxB,QAAA,mBAAmB,CAAC,KAAK,IAAG;AAC1B,iBAAO,KAAK,CAAC,UAAD,CAAZ;AACD,SAFkB,CAAnB;AAGD;AACF,KAND;AAOA,sDAAY,eAAZ,mBAAqC,SAAS,IAAG;AAC/C,UAAI,CAAC,OAAO,CAAC,SAAD,CAAZ,EAAyB;AACvB,QAAA,wBAAwB,CAAC,KAAK,IAAG;AAC/B,iBAAO,KAAK,CAAC,SAAD,CAAZ;AACD,SAFuB,CAAxB;AAGD;AACF,KAND;AAOD,GAhBQ,EAgBN;AACD,EAAA,eADC;AAED,EAAA,gBAFC;AAGD,EAAA,OAHC;AAID,EAAA,mBAJC;AAKD,EAAA,wBALC,CAhBM,CAAT;;AAuBD,CA/BM,C,cAAM,gB,2EAKK,U,EACQ,W,oLA7Cb,a,+HAKA,U,4HAGA,W,6HAGA,wB,0IA4BA,gB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-param-reassign */\nimport { useSelector } from 'react-redux';\nimport {\n  Filters,\n  FilterSets as FilterSetsType,\n} from 'src/dashboard/reducers/types';\nimport { DataMaskUnit, DataMaskUnitWithId } from 'src/dataMask/types';\nimport { useEffect, useState } from 'react';\nimport { areObjectsEqual } from 'src/reduxUtils';\nimport { Filter } from '../types';\n\nexport const useFilterSets = () =>\n  useSelector<any, FilterSetsType>(\n    state => state.nativeFilters.filterSets || {},\n  );\n\nexport const useFilters = () =>\n  useSelector<any, Filters>(state => state.nativeFilters.filters);\n\nexport const useDataMask = () =>\n  useSelector<any, DataMaskUnitWithId>(state => state.dataMask.nativeFilters);\n\nexport const useFiltersInitialisation = (\n  dataMaskSelected: DataMaskUnit,\n  handleApply: () => void,\n) => {\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\n  const filters = useFilters();\n  const filterValues = Object.values<Filter>(filters);\n  useEffect(() => {\n    if (isInitialized) {\n      return;\n    }\n    const areFiltersInitialized = filterValues.every(filterValue =>\n      areObjectsEqual(\n        filterValue?.defaultValue,\n        dataMaskSelected[filterValue?.id]?.currentState?.value,\n      ),\n    );\n    if (areFiltersInitialized) {\n      handleApply();\n      setIsInitialized(true);\n    }\n  }, [filterValues, dataMaskSelected, isInitialized]);\n\n  return {\n    isInitialized,\n  };\n};\n\nexport const useFilterUpdates = (\n  dataMaskSelected: DataMaskUnit,\n  setDataMaskSelected: (arg0: (arg0: DataMaskUnit) => void) => void,\n  setLastAppliedFilterData: (arg0: (arg0: DataMaskUnit) => void) => void,\n) => {\n  const filters = useFilters();\n  const dataMaskApplied = useDataMask();\n\n  useEffect(() => {\n    // Remove deleted filters from local state\n    Object.keys(dataMaskSelected).forEach(selectedId => {\n      if (!filters[selectedId]) {\n        setDataMaskSelected(draft => {\n          delete draft[selectedId];\n        });\n      }\n    });\n    Object.keys(dataMaskApplied).forEach(appliedId => {\n      if (!filters[appliedId]) {\n        setLastAppliedFilterData(draft => {\n          delete draft[appliedId];\n        });\n      }\n    });\n  }, [\n    dataMaskApplied,\n    dataMaskSelected,\n    filters,\n    setDataMaskSelected,\n    setLastAppliedFilterData,\n  ]);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}