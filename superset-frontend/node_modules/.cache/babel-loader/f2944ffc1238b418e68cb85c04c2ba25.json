{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport Form from 'react-jsonschema-form';\nimport { Col, FormControl, FormGroup, Row } from 'react-bootstrap';\nimport { t, styled } from '@superset-ui/core';\nimport * as chrono from 'chrono-node';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport FormLabel from 'src/components/FormLabel';\nimport './ScheduleQueryButton.less';\nimport Button from 'src/components/Button';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst validators = {\n  greater: (a, b) => a > b,\n  greater_equal: (a, b) => a >= b,\n  less: (a, b) => a < b,\n  less_equal: (a, b) => a <= b };\n\nconst getJSONSchema = () => {var _window$featureFlags$;\n  const jsonSchema = (_window$featureFlags$ = window.featureFlags.SCHEDULED_QUERIES) == null ? void 0 : _window$featureFlags$.JSONSCHEMA;\n  // parse date-time into usable value (eg, 'today' => `new Date()`)\n  if (jsonSchema) {var _context;\n    _forEachInstanceProperty(_context = _Object$entries(jsonSchema.properties)).call(_context, ([key, value]) => {\n      if (value.default && value.format === 'date-time') {\n        jsonSchema.properties[key] = {\n          ...value,\n          default: chrono.parseDate(value.default).toISOString() };\n\n      }\n    });\n    return jsonSchema;\n  }\n  return {};\n};\nconst getUISchema = () => {var _window$featureFlags$2;return (_window$featureFlags$2 = window.featureFlags.SCHEDULED_QUERIES) == null ? void 0 : _window$featureFlags$2.UISCHEMA;};\nconst getValidationRules = () => {var _window$featureFlags$3;return ((_window$featureFlags$3 = window.featureFlags.SCHEDULED_QUERIES) == null ? void 0 : _window$featureFlags$3.VALIDATION) || [];};\nconst getValidator = () => {\n  const rules = getValidationRules();\n  return (formData, errors) => {\n    _forEachInstanceProperty(rules).call(rules, rule => {var _context2, _context3;\n      const test = validators[rule.name];\n      const args = _mapInstanceProperty(_context2 = rule.arguments).call(_context2, name => formData[name]);\n      const container = rule.container || _sliceInstanceProperty(_context3 = rule.arguments).call(_context3, -1)[0];\n      if (!test(...args)) {\n        errors[container].addError(rule.message);\n      }\n    });\n    return errors;\n  };\n};\nconst StyledRow = styled(Row)`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nexport const StyledButtonComponent = styled(Button)`\n  background: none;\n  text-transform: none;\n  padding: 0px;\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  &: disabled {\n    background: none;\n    color: rgba(0, 0, 0, 0.85);\n    &: hover {\n      background: none;\n      color: rgba(0, 0, 0, 0.85);\n    }\n  }\n`;\nconst ScheduleQueryButton = ({ defaultLabel = t('Undefined'), sql, schema, dbId, onSchedule = () => {}, scheduleQueryWarning, tooltip, disabled = false }) => {\n  const [description, setDescription] = useState('');\n  const [label, setLabel] = useState(defaultLabel);\n  const [showSchedule, setShowSchedule] = useState(false);\n  let saveModal;\n  const onScheduleSubmit = ({ formData }) => {var _saveModal;\n    const query = {\n      label,\n      description,\n      db_id: dbId,\n      schema,\n      sql,\n      extra_json: _JSON$stringify({ schedule_info: formData }) };\n\n    onSchedule(query);\n    (_saveModal = saveModal) == null ? void 0 : _saveModal.close();\n  };\n  const renderModalBody = () => ___EmotionJSX(FormGroup, null,\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(FormLabel, { className: \"control-label\", htmlFor: \"embed-height\" },\n  t('Label')),\n\n  ___EmotionJSX(FormControl, { type: \"text\", placeholder: t('Label for your query'), value: label, onChange: event => {var _event$target;return setLabel((_event$target = event.target) == null ? void 0 : _event$target.value);} }))),\n\n\n  ___EmotionJSX(StyledRow, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(FormLabel, { className: \"control-label\", htmlFor: \"embed-height\" },\n  t('Description')),\n\n  ___EmotionJSX(FormControl, { componentClass: \"textarea\", placeholder: t('Write a description for your query'), value: description, onChange: event => {var _event$target2;return setDescription((_event$target2 = event.target) == null ? void 0 : _event$target2.value);} }))),\n\n\n  ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(\"div\", { className: \"json-schema\" },\n  ___EmotionJSX(Form, { schema: getJSONSchema(), uiSchema: getUISchema, onSubmit: onScheduleSubmit, validate: getValidator() })))),\n\n\n\n  scheduleQueryWarning && ___EmotionJSX(Row, null,\n  ___EmotionJSX(Col, { md: 12 },\n  ___EmotionJSX(\"small\", null, scheduleQueryWarning))));\n\n\n\n  return ___EmotionJSX(\"span\", { className: \"ScheduleQueryButton\" },\n  ___EmotionJSX(ModalTrigger, { ref: ref => {\n      saveModal = ref;\n    }, modalTitle: t('Schedule query'), modalBody: renderModalBody(), triggerNode: ___EmotionJSX(StyledButtonComponent, { onClick: () => setShowSchedule(!showSchedule), buttonSize: \"small\", buttonStyle: \"link\", tooltip: tooltip, disabled: disabled },\n    t('Schedule')) }));\n\n\n};__signature__(ScheduleQueryButton, \"useState{[description, setDescription]('')}\\nuseState{[label, setLabel](defaultLabel)}\\nuseState{[showSchedule, setShowSchedule](false)}\");const _default =\nScheduleQueryButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(validators, \"validators\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(getJSONSchema, \"getJSONSchema\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(getUISchema, \"getUISchema\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(getValidationRules, \"getValidationRules\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(getValidator, \"getValidator\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(StyledRow, \"StyledRow\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(StyledButtonComponent, \"StyledButtonComponent\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(ScheduleQueryButton, \"ScheduleQueryButton\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport Form, { FormProps, FormValidation } from 'react-jsonschema-form';\nimport { Col, FormControl, FormGroup, Row } from 'react-bootstrap';\nimport { t, styled } from '@superset-ui/core';\nimport * as chrono from 'chrono-node';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport FormLabel from 'src/components/FormLabel';\nimport './ScheduleQueryButton.less';\nimport Button from 'src/components/Button';\n\nconst validators = {\n  greater: (a: number, b: number) => a > b,\n  greater_equal: (a: number, b: number) => a >= b,\n  less: (a: number, b: number) => a < b,\n  less_equal: (a: number, b: number) => a <= b,\n};\n\nconst getJSONSchema = () => {\n  const jsonSchema = window.featureFlags.SCHEDULED_QUERIES?.JSONSCHEMA;\n  // parse date-time into usable value (eg, 'today' => `new Date()`)\n  if (jsonSchema) {\n    Object.entries(jsonSchema.properties).forEach(\n      ([key, value]: [string, any]) => {\n        if (value.default && value.format === 'date-time') {\n          jsonSchema.properties[key] = {\n            ...value,\n            default: chrono.parseDate(value.default).toISOString(),\n          };\n        }\n      },\n    );\n    return jsonSchema;\n  }\n  return {};\n};\n\nconst getUISchema = () => window.featureFlags.SCHEDULED_QUERIES?.UISCHEMA;\n\nconst getValidationRules = () =>\n  window.featureFlags.SCHEDULED_QUERIES?.VALIDATION || [];\n\nconst getValidator = () => {\n  const rules: any = getValidationRules();\n  return (formData: Record<string, any>, errors: FormValidation) => {\n    rules.forEach((rule: any) => {\n      const test = validators[rule.name];\n      const args = rule.arguments.map((name: string) => formData[name]);\n      const container = rule.container || rule.arguments.slice(-1)[0];\n      if (!test(...args)) {\n        errors[container].addError(rule.message);\n      }\n    });\n    return errors;\n  };\n};\n\ninterface ScheduleQueryButtonProps {\n  defaultLabel?: string;\n  sql: string;\n  schema?: string;\n  dbId: number;\n  animation?: boolean;\n  onSchedule?: Function;\n  scheduleQueryWarning: string | null;\n  disabled: boolean;\n  tooltip: string;\n}\n\nconst StyledRow = styled(Row)`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nexport const StyledButtonComponent = styled(Button)`\n  background: none;\n  text-transform: none;\n  padding: 0px;\n  color: rgba(0, 0, 0, 0.85);\n  font-size: 14px;\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  &: disabled {\n    background: none;\n    color: rgba(0, 0, 0, 0.85);\n    &: hover {\n      background: none;\n      color: rgba(0, 0, 0, 0.85);\n    }\n  }\n`;\n\nconst ScheduleQueryButton: FunctionComponent<ScheduleQueryButtonProps> = ({\n  defaultLabel = t('Undefined'),\n  sql,\n  schema,\n  dbId,\n  onSchedule = () => {},\n  scheduleQueryWarning,\n  tooltip,\n  disabled = false,\n}) => {\n  const [description, setDescription] = useState('');\n  const [label, setLabel] = useState(defaultLabel);\n  const [showSchedule, setShowSchedule] = useState(false);\n  let saveModal: ModalTrigger | null;\n\n  const onScheduleSubmit = ({\n    formData,\n  }: {\n    formData: Omit<FormProps<Record<string, any>>, 'schema'>;\n  }) => {\n    const query = {\n      label,\n      description,\n      db_id: dbId,\n      schema,\n      sql,\n      extra_json: JSON.stringify({ schedule_info: formData }),\n    };\n    onSchedule(query);\n    saveModal?.close();\n  };\n\n  const renderModalBody = () => (\n    <FormGroup>\n      <StyledRow>\n        <Col md={12}>\n          <FormLabel className=\"control-label\" htmlFor=\"embed-height\">\n            {t('Label')}\n          </FormLabel>\n          <FormControl\n            type=\"text\"\n            placeholder={t('Label for your query')}\n            value={label}\n            onChange={(event: any) => setLabel(event.target?.value)}\n          />\n        </Col>\n      </StyledRow>\n      <StyledRow>\n        <Col md={12}>\n          <FormLabel className=\"control-label\" htmlFor=\"embed-height\">\n            {t('Description')}\n          </FormLabel>\n          <FormControl\n            componentClass=\"textarea\"\n            placeholder={t('Write a description for your query')}\n            value={description}\n            onChange={(event: any) => setDescription(event.target?.value)}\n          />\n        </Col>\n      </StyledRow>\n      <Row>\n        <Col md={12}>\n          <div className=\"json-schema\">\n            <Form\n              schema={getJSONSchema()}\n              uiSchema={getUISchema}\n              onSubmit={onScheduleSubmit}\n              validate={getValidator()}\n            />\n          </div>\n        </Col>\n      </Row>\n      {scheduleQueryWarning && (\n        <Row>\n          <Col md={12}>\n            <small>{scheduleQueryWarning}</small>\n          </Col>\n        </Row>\n      )}\n    </FormGroup>\n  );\n\n  return (\n    <span className=\"ScheduleQueryButton\">\n      <ModalTrigger\n        ref={ref => {\n          saveModal = ref;\n        }}\n        modalTitle={t('Schedule query')}\n        modalBody={renderModalBody()}\n        triggerNode={\n          <StyledButtonComponent\n            onClick={() => setShowSchedule(!showSchedule)}\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            tooltip={tooltip}\n            disabled={disabled}\n          >\n            {t('Schedule')}\n          </StyledButtonComponent>\n        }\n      />\n    </span>\n  );\n};\n\nexport default ScheduleQueryButton;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}