{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Menu } from 'src/common/components';\nimport NavDropdown from 'src/components/NavDropdown';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nexport default function LanguagePicker({ locale, languages }) {var _context;\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  return ___EmotionJSX(NavDropdown, { onMouseEnter: () => setDropdownOpen(true), onMouseLeave: () => setDropdownOpen(false), onToggle: value => setDropdownOpen(value), open: dropdownOpen, id: \"locale-dropdown\", title: ___EmotionJSX(\"span\", { className: \"f16\" },\n    ___EmotionJSX(\"i\", { className: `flag ${languages[locale].flag}` })),\n    \"data-test\": \"language-picker\" },\n  ___EmotionJSX(Menu, { onSelect: ({ key }) => {\n      window.location.href = languages[key].url;\n    } },\n  _mapInstanceProperty(_context = _Object$keys(languages)).call(_context, langKey => langKey === locale ? null : ___EmotionJSX(Menu.Item, { key: langKey },\n  ' ',\n  ___EmotionJSX(\"div\", { className: \"f16\" },\n  ___EmotionJSX(\"i\", { className: `flag ${languages[langKey].flag}` }), \" -\", ' ',\n  languages[langKey].name)))));\n\n\n\n\n}__signature__(LanguagePicker, \"useState{[dropdownOpen, setDropdownOpen](false)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LanguagePicker, \"LanguagePicker\", \"/app/superset-frontend/src/components/Menu/LanguagePicker.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/Menu/LanguagePicker.tsx"],"names":[],"mappings":"ogBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,IAAT,QAAqB,uBAArB;AACA,OAAO,WAAP,MAAwB,4BAAxB,C;AAeA,eAAc,SAAU,cAAV,CAAyB,EACrC,MADqC,EAErC,SAFqC,EAAzB,EAGQ;AACpB,QAAM,CAAC,YAAD,EAAe,eAAf,IAAkC,QAAQ,CAAC,KAAD,CAAhD;AAEA,SACE,cAAC,WAAD,IACE,YAAY,EAAE,MAAM,eAAe,CAAC,IAAD,CADrC,EAEE,YAAY,EAAE,MAAM,eAAe,CAAC,KAAD,CAFrC,EAGE,QAAQ,EAAE,KAAK,IAAI,eAAe,CAAC,KAAD,CAHpC,EAIE,IAAI,EAAE,YAJR,EAKE,EAAE,EAAC,iBALL,EAME,KAAK,EACH,wBAAM,SAAS,EAAC,KAAhB;AACE,yBAAG,SAAS,EAAE,QAAQ,SAAS,CAAC,MAAD,CAAT,CAAkB,IAAI,EAA5C,GADF,CAPJ;AAWE,iBAAU,iBAXZ;AAaE,gBAAC,IAAD,IACE,QAAQ,EAAE,CAAC,EAAE,GAAF,EAAD,KAAY;AACpB,MAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB,GAAuB,SAAS,CAAC,GAAD,CAAT,CAAe,GAAtC;AACD,KAHH;AAKG,+CAAY,SAAZ,kBAA2B,OAAO,IACjC,OAAO,KAAK,MAAZ,GAAqB,IAArB,GACE,cAAC,IAAD,CAAM,IAAN,IAAW,GAAG,EAAE,OAAhB;AACG,KADH;AAEE,yBAAK,SAAS,EAAC,KAAf;AACE,uBAAG,SAAS,EAAE,QAAQ,SAAS,CAAC,OAAD,CAAT,CAAmB,IAAI,EAA7C,GADF,QACwD,GADxD;AAEG,EAAA,SAAS,CAAC,OAAD,CAAT,CAAmB,IAFtB,CAFF,CAFH,CALH,CAbF,CADF;;;;;AAiCD,C,cAvCuB,c,uOAAA,c","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { Menu } from 'src/common/components';\nimport NavDropdown from 'src/components/NavDropdown';\n\nexport interface Languages {\n  [key: string]: {\n    flag: string;\n    url: string;\n    name: string;\n  };\n}\n\ninterface LanguagePickerProps {\n  locale: string;\n  languages: Languages;\n}\n\nexport default function LanguagePicker({\n  locale,\n  languages,\n}: LanguagePickerProps) {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  return (\n    <NavDropdown\n      onMouseEnter={() => setDropdownOpen(true)}\n      onMouseLeave={() => setDropdownOpen(false)}\n      onToggle={value => setDropdownOpen(value)}\n      open={dropdownOpen}\n      id=\"locale-dropdown\"\n      title={\n        <span className=\"f16\">\n          <i className={`flag ${languages[locale].flag}`} />\n        </span>\n      }\n      data-test=\"language-picker\"\n    >\n      <Menu\n        onSelect={({ key }) => {\n          window.location.href = languages[key].url;\n        }}\n      >\n        {Object.keys(languages).map(langKey =>\n          langKey === locale ? null : (\n            <Menu.Item key={langKey}>\n              {' '}\n              <div className=\"f16\">\n                <i className={`flag ${languages[langKey].flag}`} /> -{' '}\n                {languages[langKey].name}\n              </div>\n            </Menu.Item>\n          ),\n        )}\n      </Menu>\n    </NavDropdown>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}